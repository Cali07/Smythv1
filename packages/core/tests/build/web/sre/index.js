import"source-map-support/register.js";import"dotenv/config";import e from"winston";import t from"winston-transport";import s from"p-limit";import*as n from"file-type";import{isBinaryFileSync as o}from"isbinaryfile";import r,{AxiosHeaders as a}from"axios";import i from"dotenv";import c,{createHash as l}from"crypto";import u,{EventEmitter as p}from"events";import m from"joi";import d from"dayjs";import h from"xxhashjs";import g from"mime";import{Readable as y}from"stream";import{jsonrepair as f}from"jsonrepair";import{S3Client as b,GetObjectCommand as w,PutObjectCommand as A,DeleteObjectCommand as k,HeadObjectCommand as _}from"@aws-sdk/client-s3";import x from"openai";import{encodeChat as v,encode as S}from"gpt-tokenizer";import I from"image-size";import C from"os";import T from"path";import L from"fs";import{GoogleGenerativeAI as P}from"@google/generative-ai";import{GoogleAIFileManager as R,FileState as O}from"@google/generative-ai/server";import M from"@anthropic-ai/sdk";import q from"groq-sdk";import{ConverseCommand as D,BedrockRuntimeClient as E,ConverseStreamCommand as N}from"@aws-sdk/client-bedrock-runtime";import{VertexAI as $}from"@google-cloud/vertexai";import j from"ioredis";import U from"qs";import{SecretsManagerClient as B,GetSecretValueCommand as G}from"@aws-sdk/client-secrets-manager";import V from"mysql2/promise";import{Pinecone as J}from"@pinecone-database/pinecone";import{OpenAIEmbeddings as F}from"@langchain/openai";import{RecursiveCharacterTextSplitter as z}from"@langchain/textsplitters";import K from"js-yaml";import H from"form-data";import W from"oauth-1.0a";import{HfInference as Q}from"@huggingface/inference";import Y from"querystring";import"process";var X=Object.defineProperty,Z=(e,t,s)=>((e,t,s)=>t in e?X(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class ee{constructor(e){if(Z(this,"headers"),Z(this,"body"),Z(this,"query"),Z(this,"params"),Z(this,"method","GET"),Z(this,"path",""),Z(this,"sessionID",""),Z(this,"res",null),Z(this,"req",null),Z(this,"files",[]),Z(this,"_agent_authinfo"),e){if(this.headers=JSON.parse(JSON.stringify(e.headers||{})),this.body=JSON.parse(JSON.stringify(e.body||e.data||{})),this.query=JSON.parse(JSON.stringify(e.query||{})),this.params=JSON.parse(JSON.stringify(e.params||{})),e.url){const t=new URL(e.url||"");this.path=t.pathname}e.path&&(this.path=e.path),this.method=e.method,this.sessionID=e.sessionID,this.files=e.files||[],this._agent_authinfo=e._agent_authinfo,this.req=e instanceof ee?e?.req:e,this.res=e?.res||null}}header(e){return this.headers[e.toLowerCase()]}}var te,se=((te=se||{}).Storage="Storage",te.VectorDB="VectorDB",te.Cache="Cache",te.LLM="LLM",te.Vault="Vault",te.Account="Account",te.AgentData="AgentData",te.CLI="CLI",te.NKV="NKV",te.Router="Router",te.ManagedVault="ManagedVault",te);function ne(){return(Date.now()+Math.random()).toString(36).replace(".","").toUpperCase()}async function oe(e,t=10){const n=s(t),o=e.map((e=>n(e)));return(await Promise.allSettled(o)).flatMap((e=>"fulfilled"===e.status?[e.value]:[])).filter(Boolean)}const re=e=>{try{return"string"==typeof e&&!!JSON.parse(e)}catch{return!1}};function ae(e){return new Promise((t=>setTimeout(t,e)))}function ie(e){return e&&"string"==typeof e}function ce(e){if(null==e)return e;if("object"!=typeof e){if("string"==typeof e){if("true"===e.toLowerCase())return!0;if("false"===e.toLowerCase())return!1;if((e=>{const t=parseFloat(e);return!isNaN(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER&&t.toString()===e.trim()})(e))return Number(e);if("null"===e.toLowerCase())return null;if("undefined"===e.toLowerCase())return}return e}return Array.isArray(e)?e.map((e=>ce(e))):Object.fromEntries(Object.entries(e).map((([e,t])=>[e,ce(t)])))}const le=e=>e&&"string"==typeof e?e.split("-").map((e=>e.charAt(0).toUpperCase()+e.slice(1))).join(" "):e,ue=["GET","POST","PUT","PATCH","DELETE","HEAD","OPTIONS"],pe="none",me="application/x-www-form-urlencoded",de="multipart/form-data",he="application/json",ge="text/plain",ye="binary";var fe=(e=>(e.ChatBot="chatBot",e.ChatGPT="chatGPT",e))(fe||{});const be="gpt-4o-mini",we='\nRespond ONLY with a valid, parsable JSON object. Follow these strict guidelines:\n1. The response must begin with \'{\' and end with \'}\'.\n2. Use double quotes for all keys and string values.\n3. Do not include any explanations, markdown, or text outside the JSON object.\n4. Do not use newlines or indentation within the JSON structure.\n5. For single-key responses, use the format: {"result": "your content here"}\n6. For multiple keys, use: {"key1": "value1", "key2": "value2", ...}\n\nExample of a valid response:\n{"result": "This is a valid JSON response without any extra text."}\n';const Ae=e=>{if(!e||"string"!=typeof e)return!1;e=(e=>{if("string"!=typeof e||e.length>10485760)throw new Error("Invalid input");return e.replace(/\s|\\n|\\s/g,"")})(e);try{return!(e?.length<128)&&Buffer.from(e,"base64").toString("base64")===e}catch{return!1}};async function ke(e){const t=[];for await(const s of e)t.push("string"==typeof s?Buffer.from(s):s);return Buffer.concat(t)}const _e=["image/","audio/","video/","application/pdf","application/zip","application/octet-stream"];function xe(e){let t;switch(!0){case e instanceof ArrayBuffer:t=Buffer.from(new Uint8Array(e));break;case ArrayBuffer.isView(e)&&!(e instanceof DataView):t=Buffer.from(new Uint8Array(e.buffer));break;case e instanceof DataView:t=Buffer.from(new Uint8Array(e.buffer,e.byteOffset,e.byteLength));break;case Buffer.isBuffer(e):t=e;break;case"string"==typeof e:t=Buffer.from(e,"utf-8");break;default:return null}return t}const ve=e=>"object"==typeof e&&null!==e&&!Array.isArray(e)&&"[object Object]"===Object.prototype.toString.call(e)&&e.constructor===Object;function Se(e){return"string"==typeof e&&/^([a-zA-Z0-9]+:\/\/)([^\s.]+\.[^\s]{2,})(:[0-9]{1,5})?(\/[^\s]*)?(\?[^\s]*)?$/i.test(e)}const Ie=e=>!!("object"==typeof e&&null!==e&&e?.url&&Se(e?.url)&&"size"in e&&"mimetype"in e);function Ce(e,t){t||(t=process.argv);const s=t,n={};return(Array.isArray(e)?e:[e]).forEach((e=>{const t=s.indexOf(`--${e}`);if(-1!==t){const o=[];for(let e=t+1;e<s.length&&!s[e].startsWith("--");e++)o.push(s[e]);if(1===o.length&&o[0].includes("=")){const t={},[s,...r]=o[0].split("="),a=r.join("=").replace(/^"|"$/g,"");t[s]=a,n[e]=t}else if(1===o.length)n[e]=o[0];else if(o.length>1){const t={};o.forEach((e=>{const[s,...n]=e.split("="),o=n.join("=").replace(/^"|"$/g,"");t[s]=o})),n[e]=t}}})),n}function Te(e){return"number"==typeof e||"string"==typeof e&&/^-?\d+(\.\d+)?$/.test(e.trim())}function Le(e){const t=parseFloat(e);return!isNaN(t)&&t<=Number.MAX_SAFE_INTEGER&&t>=Number.MIN_SAFE_INTEGER&&t.toString()===e.trim()}function Pe(e){if(""===e)return!0;const t=e.split(/(\{\{[^}]+\}\})/).filter(Boolean);for(const e of t)if(e.startsWith("{{")&&e.endsWith("}}")){if(""===e.slice(2,-2).trim())return!1}else if(!/^[a-zA-Z0-9\-_.]+$/.test(e))return!1;return!0}const Re=e=>(t,s)=>{const n=Number(t),o=s.schema._flags.label||s.state.path[s.state.path.length-1];if(isNaN(n))throw new Error(`The value for '${o}' must be a number`);if(void 0!==e.min&&void 0!==e.max){if(n<e.min||n>e.max)throw new Error(`The value for '${o}' must be from ${e.min} to ${e.max}`)}else if(void 0!==e.min){if(n<e.min)throw new Error(`The value for '${o}' must be greater or equal to ${e.min}`)}else if(void 0!==e.max&&n>e.max)throw new Error(`The value for '${o}' must be less or equal to ${e.max}`);return t};i.config();const Oe={env:{LOG_LEVEL:process.env.LOG_LEVEL||"none",LOG_FILTER:process.env.LOG_FILTER||"",OPENAI_API_KEY:process.env.OPENAI_API_KEY,ANTHROPIC_API_KEY:process.env.ANTHROPIC_API_KEY,DATA_PATH:process.env.DATA_PATH,NODE_ENV:process.env?.NODE_ENV,AGENT_DOMAIN:process.env?.AGENT_DOMAIN,PROD_AGENT_DOMAIN:process.env?.PROD_AGENT_DOMAIN,AGENT_DOMAIN_PORT:process.env?.AGENT_DOMAIN_PORT,CODE_SANDBOX_URL:process.env?.CODE_SANDBOX_URL,TOGETHER_AI_API_URL:process.env?.TOGETHER_AI_API_URL,REDIS_SENTINEL_HOSTS:process.env?.REDIS_SENTINEL_HOSTS||"",REDIS_MASTER_NAME:process.env?.REDIS_MASTER_NAME,REDIS_PASSWORD:process.env?.REDIS_PASSWORD,AWS_ACCESS_KEY_ID:process.env.AWS_ACCESS_KEY_ID,AWS_SECRET_ACCESS_KEY:process.env.AWS_SECRET_ACCESS_KEY,AWS_S3_REGION:process.env.AWS_S3_REGION,AWS_S3_BUCKET_NAME:process.env.AWS_S3_BUCKET_NAME,PINECONE_API_KEY:process.env.PINECONE_API_KEY,PINECONE_INDEX_NAME:process.env.PINECONE_INDEX_NAME,LOGTO_SERVER:process.env.LOGTO_SERVER,SMYTH_VAULT_API_BASE_URL:process.env.SMYTH_VAULT_API_BASE_URL},agent:{ENDPOINT_PREFIX:"/api"}};var Me=Object.defineProperty,qe=(e,t,s)=>((e,t,s)=>t in e?Me(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);e.addColors({error:"red",warn:"yellow",info:"green",debug:"blue"});const De={min:"info",full:"debug"};let Ee=()=>{let e=Ce("debug")?.debug||Oe?.env?.LOG_LEVEL||"none";return De[e]&&(e=De[e]),["none","error","warn","info","debug"].includes(e)?e:"none"};const Ne=(Oe.env.LOG_FILTER||"").split(","),$e=e.format((e=>!(Oe.env.LOG_FILTER&&!Ne.some((t=>e.module?.includes(t))))&&e))();class je extends t{constructor(e){super(e),qe(this,"logs"),this.logs=e.logs}log(e,t){setImmediate((()=>{this.emit("logged",e)})),this.logs.push(`${e.level}: ${e.message}`),t()}}class Ue{constructor(e,t,s){this._logger=e,this.data=t,this.labels=s,qe(this,"startTime",Date.now())}get output(){return Array.isArray(this.data)?this.data.join("\n"):void 0}get elapsedTime(){return Date.now()-this.startTime}log(...e){this._logger.log("info",Ve(...e),this.labels)}warn(...e){this._logger.log("warn",Ve(...e),this.labels)}debug(...e){this._logger.log("debug",Ve(...e),this.labels)}info(...e){this._logger.log("info",Ve(...e),this.labels)}verbose(...e){this._logger.log("verbose",Ve(...e),this.labels)}error(...e){const t=(new Error).stack;this._logger.log("error",Ve(...e),{...this.labels,stack:t})}close(){this._logger.clear(),this._logger.close()}}e.format.printf((t=>`${t.timestamp} ${e.format.colorize().colorize(t.level,`${t.level}: ${t.message}`)}`));const Be=500;function Ge(t){const s=e.createLogger({format:e.format.combine(e.format((e=>"none"!=Oe.env.LOG_LEVEL&&"none"!=Ee()&&""!=Ee()&&(e.message=function(e){if("PROD"!==Oe.env.NODE_ENV||e.length>500)return e;const t=["password","eyJ","token","email","secret","key","apikey","api_key","auth","credential"];for(const s of t){const t=new RegExp(`(${s})((?:[^\\n]{0,29}(?=\\n))|(?:[^\\n]{30}\\S*))`,"gmi");e=e.replace(t,"$1 [!! SmythOS::REDACTED_DATA !!] ")}return e}(e.message),e)))(),e.format.timestamp(),e.format.errors({stack:!0}),e.format.splat(),e.format.json()),transports:[new e.transports.Console({level:"error",format:e.format.combine(e.format.printf((e=>{let t=e.message;return t=t?.length>Be?t.substring(0,Be)+"...":t,`${e.level}:${e.module||""} ${t} ${e.stack||""}`}))),stderrLevels:["error"]}),new e.transports.Console({level:Ee(),format:e.format.combine($e,e.format.printf((t=>{const s=t.module?e.format.colorize().colorize(t.level,` [${t.module}]`):"",n=e.format.colorize().colorize(t.level,`${t.level}${s}`);let o=t.message;return o=o?.length>Be?o.substring(0,Be)+"...":o,`${n} - ${o}`})))})]});return Array.isArray(t)&&s.add(new je({level:"debug",logs:t})),s}function Ve(...e){return e.map((e=>"object"!=typeof e||null===e||e instanceof Error?String(e):JSON.stringify(e,null,2))).join(" ")}function Je(e,t=!1){return function(e,t){const s=Ge(t);return s.defaultMeta=e,new Ue(s,t,e)}({module:e},t?[]:void 0)}const Fe=Je("DummyConnector"),ze=new Proxy({},{get:function(e,t,s){return"function"==typeof e[t]?e[t]:function(...e){Fe.warn(`[!!] Unimplemented Connector tried to call : ${t.toString()} with arguments:`,e)}}});var Ke=Object.defineProperty,He=(e,t,s)=>((e,t,s)=>t in e?Ke(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var We=Object.defineProperty,Qe=(e,t,s)=>((e,t,s)=>t in e?We(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Ye=Je("Connector"),Xe=new class{constructor(e=36e5){He(this,"cache"),He(this,"expiryMap"),He(this,"timeouts"),He(this,"defaultTTL",36e5),this.defaultTTL=e,this.cache=new Map,this.expiryMap=new Map,this.timeouts=new Map}set(e,t,s=this.defaultTTL){this.cache.set(e,t);const n=Date.now()+s;this.expiryMap.set(e,n),this.clearTimeout(e);const o=setTimeout((()=>{this.delete(e)}),s);this.timeouts.set(e,o)}get(e){if(this.has(e))return this.cache.get(e)}has(e){if(!this.cache.has(e))return!1;const t=this.expiryMap.get(e);return!(t&&Date.now()>t)||(this.delete(e),!1)}delete(e){return this.clearTimeout(e),this.expiryMap.delete(e),this.cache.delete(e)}clear(){for(const e of this.cache.keys())this.clearTimeout(e);this.cache.clear(),this.expiryMap.clear(),this.timeouts.clear()}clearTimeout(e){const t=this.timeouts.get(e);t&&(clearTimeout(t),this.timeouts.delete(e))}};class Ze{constructor(e={}){Qe(this,"name"),Qe(this,"started",!1),Qe(this,"_readyPromise")}instance(e){const t=l("sha256").update(JSON.stringify(e)).digest("hex"),s=`${this.name}-${t}`;if(Xe.has(s))return Xe.get(s);const n=new(0,this.constructor)(e);return Xe.set(s,n,36e5),n}async start(){Ye.info(`Starting ${this.name} connector ...`),this.started=!0}async stop(){Ye.info(`Stopping ${this.name} connector ...`)}ready(){return this._readyPromise||(this._readyPromise=new Promise((e=>{let t=1e4;if(this.started)e(!0);else{const s=setInterval((()=>{this.started&&(clearInterval(s),e(!0)),t-=100,t<=0&&(clearInterval(s),e(!1))}),100)}}))),this._readyPromise}}const et=new p,tt=Je("ConnectorService"),st={},nt={};let ot={},rt=!1;et.on("SRE:Booted",(e=>{ot=e,rt=!0}));class at{static get ready(){return rt}static get service(){return ot}static register(e,t,s){"function"==typeof s&&function(e,t){if("function"!=typeof e||"function"!=typeof t)return!1;let s=Object.getPrototypeOf(e.prototype),n=10;for(;s&&n>=0;){if(s===t.prototype)return!0;s=Object.getPrototypeOf(s),n++}return!1}(s,Ze)?(st[e]||(st[e]={}),st[e][t]=s):tt.error(`Invalid Connector ${e}:${t}`)}static init(e,t,s,n={},o=!1){if(nt[e]?.[t])throw new Error(`Connector ${e}:${t} already initialized`);const r=st[e];if(!r)return;const a=r[t];if(a){const r=new a(n);r.start(),nt[e]||(nt[e]={});const i=s||t;nt[e][i]=r,!nt[e].default&&o&&(nt[e].default=r)}}static async _stop(){for(let e in nt){let t=Object.values(nt[e]);t=t.filter(((e,t,s)=>s.indexOf(e)===t));for(let e of t)e.stop()}}static getInstance(e,t="default"){return nt[e]?.[t]||(nt[e]&&Object.keys(nt[e]).length>0?nt[e][Object.keys(nt[e])[0]]:(tt.warn(`Connector ${e} not initialized returning DummyConnector`),tt.debug((new Error).stack),ze))}static getStorageConnector(e){return at.getInstance(se.Storage,e)}static getCacheConnector(e){return at.getInstance(se.Cache,e)}static getVectorDBConnector(e){return at.getInstance(se.VectorDB,e)}static getNKVConnector(e){return at.getInstance(se.NKV,e)}static getLLMConnector(e){return at.getInstance(se.LLM,e)}static getVaultConnector(e){return at.getInstance(se.Vault,e)}static getManagedVaultConnector(e){return at.getInstance(se.ManagedVault,e)}static getAccountConnector(e){return at.getInstance(se.Account,e)}static getAgentDataConnector(e){return at.getInstance(se.AgentData,e)}static getCLIConnector(e){return at.getInstance(se.CLI,e)}static hasInstance(e,t="default"){const s=nt[e]?.[t];return s&&s!==ze}static getRouterConnector(e){return at.getInstance(se.Router,e)}}class it{init(){}constructor(){this.register()}}var ct=Object.defineProperty,lt=(e,t,s)=>((e,t,s)=>t in e?ct(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("EmbodimentSettings");class ut{constructor(e){lt(this,"_embodiments"),lt(this,"_ready",!1),this.init(e)}async init(e){this._embodiments=e,this._ready=!0}ready(e=1e4){return new Promise(((t,s)=>{const n=setInterval((()=>{this._ready&&(clearInterval(n),t(!0)),e-=100}),100);setTimeout((()=>{clearInterval(n),s(!1)}),e)}))}get(e,t){if(!this._embodiments)return;const s=this._embodiments.find((t=>t.type?.toLowerCase()===e.toLowerCase()));return t?s?.properties?.[t]:s?.properties}}var pt=Object.defineProperty,mt=(e,t,s)=>((e,t,s)=>t in e?pt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("AgentSettings");class dt{constructor(e){mt(this,"_settings"),mt(this,"embodiments"),mt(this,"_ready",!1),e&&this.init(e)}async init(e){const t=at.getAgentDataConnector();this._settings=await t.getAgentSettings(e).catch((e=>{}))||{},this.embodiments=new ut(this._settings.embodiments),this._ready=!0}ready(e=1e4){return new Promise(((t,s)=>{const n=setInterval((()=>{this._ready&&(clearInterval(n),t(!0)),e-=100}),100);setTimeout((()=>{clearInterval(n),s(!1)}),e)}))}get(e){return this._settings?.find((t=>t.key===e))?.value}set(e,t){this._settings[e]=t}has(e){return this._settings[e]}}var ht=(e=>(e.None="none",e.Owner="owner",e.Read="read",e.Write="write",e))(ht||{}),gt=(e=>(e.Agent="agent",e.User="user",e.Team="team",e.Public="public",e))(gt||{});const yt={user:"u",agent:"a",team:"t",public:"p"},ft={none:"n",owner:"o",read:"r",write:"w"},bt=Object.fromEntries(Object.entries(yt).map((([e,t])=>[t,e]))),wt=Object.fromEntries(Object.entries(ft).map((([e,t])=>[t,e])));var At=(e=>(e.Granted="granted",e.Denied="denied",e))(At||{});class kt extends Error{constructor(e){super(e),this.name="ACLAccessDeniedError"}}var _t=Object.defineProperty,xt=(e,t,s)=>((e,t,s)=>t in e?_t(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class vt{constructor(e){if(xt(this,"id"),xt(this,"resourceId"),xt(this,"level",[]),xt(this,"candidate"),e||(this.id="aclR:"+ne()),["role","id"].every((t=>t in e)))this.id="aclR:"+ne(),this.candidate=e;else{const t=e;this.id=t.id,this.level=t.level,this.candidate=t.candidate}this.resourceId=void 0}static clone(e){return new vt(e)}setLevel(e){return this.level=Array.isArray(e)?e:[e],this}addLevel(e){return this.level=[...this.level,...Array.isArray(e)?e:[e]],this}resource(e){return this.resourceId=e,this}setCandidate(e){return this.candidate=e,this}}var St=Object.defineProperty,It=(e,t,s)=>((e,t,s)=>t in e?St(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Ct{constructor(e){It(this,"role"),It(this,"id"),this.role=e?e.role:gt.Public,this.id=e?e.id:""}get request(){return new vt(this)}get readRequest(){return new vt(this).setLevel(ht.Read)}get writeRequest(){return new vt(this).setLevel(ht.Write)}get ownerRequest(){return new vt(this).setLevel(ht.Owner)}static clone(e){return new Ct(e)}team(e){return this.role=gt.Team,this.id=e,this}static team(e){return new Ct({role:gt.Team,id:e})}agent(e){return this.role=gt.Agent,this.id=e,this}static agent(e){return new Ct({role:gt.Agent,id:e})}user(e){return this.role=gt.User,this.id=e,this}static user(e){return new Ct({role:gt.User,id:e})}public(){return this.role=gt.Public,this.id=gt.Public,this}static public(){return new Ct({role:gt.Public,id:""})}}var Tt=Object.defineProperty,Lt=(e,t,s)=>((e,t,s)=>t in e?Tt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Pt={none:e=>e,xxh3:e=>h.h64().update(e.toString()).digest().toString(16)};class Rt{constructor(e){Lt(this,"hashAlgorithm"),Lt(this,"entries"),Lt(this,"migrated"),"string"==typeof e?this.deserializeACL(e):(this.hashAlgorithm=e?.hashAlgorithm,this.entries=e?.entries?JSON.parse(JSON.stringify(e?.entries)):{},this.migrated=e?.migrated),this.hashAlgorithm||(this.hashAlgorithm="xxh3"),this.entries||(this.entries={})}get ACL(){return{hashAlgorithm:this.hashAlgorithm,entries:JSON.parse(JSON.stringify(this.entries)),migrated:this.migrated}}get serializedACL(){return this.serializeACL(this)}static from(e){return new Rt(e)}checkExactAccess(e){if(!this?.entries)return!1;const t=this?.entries[e.candidate.role];if(!t)return!1;let s=e.candidate.id;if(!Pt[this.hashAlgorithm])throw new Error(`Hash algorithm ${this.hashAlgorithm} not supported`);s=Pt[this.hashAlgorithm](s);const n=t[s];return!!n&&(Array.isArray(e.level)?e.level:[e.level]).every((e=>n.includes(e)))}addPublicAccess(e){if(this?.entries[gt.Public]||(this.entries[gt.Public]={}),!Pt[this.hashAlgorithm])throw new Error(`Hash algorithm ${this.hashAlgorithm} not supported`);const t=gt.Public,s=Pt[this.hashAlgorithm](t);this?.entries[gt.Public][s]||(this.entries[gt.Public][s]=[]);const n=this.entries[gt.Public][s];return this.entries[gt.Public][s]=[...n,...e],this}removePublicAccess(e){if(!this?.entries[gt.Public])return this;const t=gt.Public,s=Pt[this.hashAlgorithm](t),n=this[gt.Public][s];return this[gt.Public][s]=n.filter((t=>!e.includes(t))),this}addAccess(e,t,s){if(e===gt.Public)throw new Error("Adding public access using addAccess method is not allowed. Use addPublicAccess method instead.");const n=Array.isArray(s)?s:[s];if(this?.entries[e]||(this.entries[e]={}),!Pt[this.hashAlgorithm])throw new Error(`Hash algorithm ${this.hashAlgorithm} not supported`);const o=Pt[this.hashAlgorithm](t);this?.entries[e][o]||(this.entries[e][o]=[]);const r=this.entries[e][o];return this.entries[e][o]=[...r,...n],this}static addAccess(e,t,s){return Rt.from().addAccess(e,t,s)}removeAccess(e,t,s){const n=Array.isArray(s)?s:[s];if(!this[e])return this;if(!this[e][t])return this;const o=this[e][t];return this[e][t]=o.filter((e=>!n.includes(e))),this}serializeACL(e){let t="";if(e.hashAlgorithm&&(t+=`h:${e.hashAlgorithm}|`),e.entries)for(const[s,n]of Object.entries(e.entries)){const e=yt[s],o=[];for(const[e,t]of Object.entries(n||{}))if(t){const s=t.map((e=>ft[e])).join("");o.push(`${e}/${s}`)}o.length>0&&(t+=`${e}:${o.join(",")}|`)}return t.endsWith("|")&&(t=t.slice(0,-1)),t}deserializeACL(e){const t=e.split("|");this.hashAlgorithm="",this.entries={};for(const e of t)if(e.startsWith("h:"))this.hashAlgorithm=e.substring(2);else{const[t,s]=e.split(":"),n=bt[t];if(n){const e={},t=s.split(",");for(const s of t){const[t,n]=s.split("/"),o=n.split("").map((e=>wt[e]));e[t]=o}this.entries[n]=e}}}}var Ot=Object.defineProperty,Mt=(e,t,s)=>((e,t,s)=>t in e?Ot(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class qt{constructor(e){this.dataString=e,Mt(this,"_current"),this._current=e}get result(){return this._current}static create(e){return new qt(e)}tryParse(){const e=this._current;if(!ie(e))return e;let t=(this.extractJsonFromString(e)||e).trim();if(Te(t)&&!Le(t)||!t.startsWith("{")&&!t.startsWith("["))return t;try{return JSON.parse(t)}catch{try{return JSON.parse(f(t))}catch{return e}}}tryFullParse(){const e=this._current;if(!e||Te(e)&&!Le(e)||!e.startsWith("{")&&!e.startsWith("["))return e;try{return JSON.parse(e)}catch{try{return JSON.parse(f(e))}catch(t){return console.warn("Error on parseJson: ",t.toString()),console.warn("   Tried to parse: ",e),{result:e,error:t.toString()}}}}extractJsonFromString(e){try{const t=/(\{.*\})/s;return e.match(t)?.[1]}catch{return null}}}function Dt(e){return qt.create(e)}var Et=Object.defineProperty,Nt=(e,t,s)=>((e,t,s)=>t in e?Et(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);et.on("SRE:Booted",(()=>{const e=at.getRouterConnector();e&&e?.get instanceof Function&&e.get("/_temp/:uid",jt.Instance.serveTempContent.bind(jt.Instance))}));const $t=class e{constructor(){if(Nt(this,"storage"),Nt(this,"cache"),!at.ready)throw new Error("SRE not available");this.storage=at.getStorageConnector(),this.cache=at.getCacheConnector()}static get Instance(){return this.instance||(this.instance=new e),this.instance}URIParser(e){const t=e.split("://");if(2!==t.length||"smythfs"!==t[0].toLowerCase())return;const s=new URL(`http://${t[1]}`),n=s.hostname.split(".").pop();if("team"!==n)throw new Error("Invalid Resource URI");const o=s.hostname.replace(`.${n}`,"");return{hash:s.hash,team:o,path:s.pathname}}getStoragePath(e){const t=this.URIParser(e);if(!t)throw new Error("Invalid Resource URI");return`teams/${t.team}${t.path}`}async read(e,t){const s=this.URIParser(e);if(!s)throw new Error("Invalid Resource URI");const n=`teams/${s.team}${s.path}`,o=t instanceof Ct?t:new Ct(t),r=await this.storage.user(o).read(n);return this.toBuffer(r)}async toBuffer(e){if(Buffer.isBuffer(e))return e;if("string"==typeof e)return Buffer.from(e,"utf-8");if(e instanceof Uint8Array)return Buffer.from(e);if(e instanceof y)return new Promise(((t,s)=>{const n=[];e.on("data",(e=>{n.push(Buffer.isBuffer(e)?e:Buffer.from(e))})),e.on("end",(()=>{t(Buffer.concat(n))})),e.on("error",(e=>{s(e)}))}));throw new Error("Unsupported data type")}async write(e,t,s,n){const o=this.URIParser(e);if(!o)throw new Error("Invalid Resource URI");if(!await at.getAccountConnector().isTeamMember(o.team,s))throw new Error("Access Denied");const r=`teams/${o.team}${o.path}`,a=s instanceof Ct?s:new Ct(s),i=(new Rt).addAccess(gt.Team,o.team,ht.Read).ACL;if(n||(n={}),!n?.ContentType&&(n.ContentType=await this.getMimeType(t),!n.ContentType)){const t=e.split(".").pop();t&&(n.ContentType=g.getType(t)||"application/octet-stream")}await this.storage.user(a).write(r,t,i,n)}async getMimeType(e){if(e instanceof Blob)return e.type;if((e=>{try{return Buffer.isBuffer(e)}catch{return!1}})(e))try{return(await n.fileTypeFromBuffer(e)).mime}catch{return""}return"string"==typeof e?"text/plain":void 0}async delete(e,t){const s=this.URIParser(e);if(!s)throw new Error("Invalid Resource URI");const n=`teams/${s.team}${s.path}`,o=t instanceof Ct?t:new Ct(t);await this.storage.user(o).delete(n)}async exists(e,t){const s=this.URIParser(e);if(!s)throw new Error("Invalid Resource URI");const n=`teams/${s.team}${s.path}`,o=t instanceof Ct?t:new Ct(t);return await this.storage.user(o).exists(n)}async genTempUrl(e,t,s=3600){const n=this.URIParser(e);if(!n)throw new Error("Invalid Resource URI");if(!await this.exists(e,t))throw new Error("Resource does not exist");const o=t instanceof Ct?t:new Ct(t),r=`teams/${n.team}${n.path}`,a=await this.storage.user(o).getMetadata(r),i=c.randomUUID(),l=Ct.user(`system:${i}`);return await this.cache.user(l).set(`pub_url:${i}`,JSON.stringify({accessCandidate:o,uri:e,contentType:a?.ContentType}),void 0,void 0,s),`${at.getRouterConnector().baseUrl}/_temp/${i}`}async destroyTempUrl(e,{delResource:t}={delResource:!1}){const s=e.split("/_temp/")[1].split("?")[0];let n=await this.cache.user(Ct.user(`system:${s}`)).get(`pub_url:${s}`);if(!n)throw new Error("Invalid Temp URL");n=qt.create(n).tryParse(),await this.cache.user(Ct.user(`system:${s}`)).delete(`pub_url:${s}`),t&&await this.delete(n.uri,Ct.clone(n.accessCandidate))}async serveTempContent(e,t){try{const{uid:s}=e.params;let n=await this.cache.user(Ct.user(`system:${s}`)).get(`pub_url:${s}`);if(!n)return t.writeHead(404,{"Content-Type":"text/plain"}),void t.end("Invalid Temp URL");n=qt.create(n).tryParse();const o=await this.read(n.uri,Ct.clone(n.accessCandidate));t.writeHead(200,{"Content-Type":n.contentType,"Content-Disposition":"inline"}),t.end(o)}catch(e){console.error("Error serving temp content:",e),t.writeHead(500,{"Content-Type":"text/plain"}),t.end("Internal Server Error")}}};Nt($t,"instance");let jt=$t;var Ut=Object.defineProperty,Bt=(e,t,s)=>((e,t,s)=>t in e?Ut(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Gt{constructor(e,t,s,n){this._name=t,this.mimetype=s,this.candidate=n,Bt(this,"size"),Bt(this,"url"),Bt(this,"_ready"),Bt(this,"_readyPromise"),Bt(this,"_source"),Bt(this,"_uploading",!1),t||(t=ne()),this._name=t,this.load(e,t,s,n)}async ready(){return!!this._ready||(this._readyPromise||(this._readyPromise=new Promise((e=>{const t=setInterval((()=>{this._ready&&(clearInterval(t),e(!0))}),100)}))),this._readyPromise)}async load(e,t,s,o){const a=t.split(".").pop();if(this.mimetype=s||g.getType(a)||"application/octet-stream",this.url="","object"==typeof e&&e.url&&e.mimetype&&e.size)return this.mimetype=e.mimetype,this.size=e.size,this.url=e.url,this._ready=!0,void(o&&(this._source=await jt.Instance.read(this.url,o)));if(Se(e)){const t=await this.getUrlInfo(e);this.mimetype=t.contentType,this.size=t.contentLength;try{const t=await r({method:"get",url:e,responseType:"arraybuffer"});this._source=Buffer.from(t.data,"binary"),this.size=t.data.byteLength;const s=g.getExtension(this.mimetype);this._name.endsWith(`.${s}`)||(this._name+=`.${s}`)}catch{console.error("Error loading binary data from url:",e.url)}return void(this._ready=!0)}const i=await this.getBase64FileInfo(e);if(i){this.mimetype=i.mimetype,this.size=i.size,this._source=i.data;const e=g.getExtension(this.mimetype);return this._name.endsWith(`.${e}`)||(this._name+=`.${e}`),void(this._ready=!0)}if("string"==typeof e)return this._source=Buffer.from(e),this.size=e.length,this.mimetype="text/plain",this._name.endsWith(".txt")||(this._name+=".txt"),void(this._ready=!0);if(Buffer.isBuffer(e)){this._source=e,this.size=(e=>{const t=xe(e);return t?t.byteLength:0})(e);const t=await n.fileTypeFromBuffer(e);this.mimetype=t.mime;const s=g.getExtension(this.mimetype);this._name.endsWith(`.${s}`)||(this._name+=`.${s}`)}this._ready=!0}async getUrlInfo(e){try{const t=await r.head(e),s=t.headers["content-type"];return{contentType:s,contentLength:t.headers["content-length"]}}catch{return{contentType:"",contentLength:0}}}async getBase64FileInfo(e){if(!/data:[^;]+;base64,[A-Za-z0-9+\/]*(={0,2})?$/gm.test(e))return null;const t=e.split(",")[1],s=Buffer.from(t,"base64"),o=s.byteLength,r=await n.fileTypeFromBuffer(s);return{size:o,data:s,mimetype:r?.mime||""}}static from(e,t,s,n){return e instanceof Gt?e:new Gt(e,t,s,n)}async upload(e){if(await this.ready(),!this._uploading)try{if(this._uploading=!0,!this.url){const t=await at.getAccountConnector().getCandidateTeam(e);this.url=`smythfs://${t}.team/${e.id}/_temp/${this._name}`,await jt.Instance.write(this.url,this._source,e),this._uploading=!1}}catch(e){console.error("Error uploading binary data:",e),this._uploading=!1}}async getJsonData(e){return await this.upload(e),{mimetype:this.mimetype,size:this.size,url:this.url,name:this._name}}async readData(e){if(await this.ready(),!this.url)throw new Error("Binary data not ready");return await jt.Instance.read(this.url,e)}async getName(){return await this.ready(),this._name}async getBuffer(){return await this.ready(),this._source}}const Vt={any:async function(e){return e},string:async function(e,t,s){return null==e||"null"===e||"undefined"===e?"":function(e){if(!ie(e))return!1;const t=function(e){return e.replace(/\s|\\n|\\s/g,"")}(e);if(t.length<128)return!1;try{return Buffer.from(t,"base64").toString("base64").replace(/=+$/,"")===t.replace(/=+$/,"")}catch{return!1}}(e)||function(e){return/^data:([\w+\-\.]+\/[\w+\-\.]+);base64,(.*)$/.test(e)}(e)?e:"object"==typeof e||Array.isArray(e)?JSON.stringify(e):String(e)},number:async function(e,t,s){const n=parseFloat(e);if(isNaN(n))throw new Error("Invalid Number value");return n},integer:async function(e,t,s){const n=parseInt(e);if(isNaN(n))throw new Error("Invalid Integer value");return n},boolean:async function(e,t,s){if("boolean"==typeof e)return e;if("string"==typeof e||"number"==typeof e){const t=String(e).toLowerCase();if(["true","1"].includes(t))return!0;if(["false","0"].includes(t))return!1;throw new Error("Invalid Boolean value")}throw new Error("Invalid Boolean value")},array:async function(e,t,s){try{if(Array.isArray(e))return e;if("string"!=typeof e)throw new Error("Invalid Array value");try{return e.trim().startsWith("[")?Dt(e).tryParse():e.split(",")}catch{throw new Error("Invalid Array value")}}catch{throw new Error("Invalid Array value")}},object:async function(e,t,s){try{const t=ve(e)?e:Dt(e).tryParse();if(!ve(t))throw new Error("Invalid Object value");return t}catch{throw new Error("Invalid Object value")}},binary:async function(e,t,s){if(e&&"object"==typeof e&&e?.url){const s=await Gt.from(e.url,ne()+"-"+t,e?.mimetype);return await s.ready(),s}const n=Gt.from(e,ne()+"-"+t);return await n.ready(),n},date:async function(e,t,s){const n="Invalid Date value\nThe date string is expected to be in a format commonly used in English-speaking countries.";if("string"!=typeof e&&"number"!=typeof e)throw new Error(n);let o;if("string"==typeof e&&isNaN(Number(e)))o=d(e).locale("en");else{const t="number"==typeof e?e:Number(e);o=d.unix(t/1e3)}if(!o.isValid())throw new Error(n);return o.toISOString()}};async function Jt(e,t,s){try{if(!t||0===Object.keys(t)?.length)return e;const n={...e},o={};for(const e of t)e?.name&&(o[e.name]={...e});for(const[t,r]of Object.entries(o)){let o=e?.[t]||"";if(!o)continue;const a=r?.type?.toLowerCase()||"any";if(!Vt[a])throw new Error(`Invalid type: ${a} for Input: ${t}`);n[t]=await Vt[a](o,t,s)}return n}catch(e){throw e}}var Ft=Object.defineProperty,zt=(e,t,s)=>((e,t,s)=>t in e?Ft(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Kt{constructor(){zt(this,"hasReadOutput",!1),zt(this,"hasPostProcess",!0),zt(this,"alwaysActive",!1),zt(this,"exclusive",!1),zt(this,"configSchema")}init(){}createComponentLogger(e,t){return Je(t||this.constructor.name,e?.agentRuntime?.debug)}async validateConfig(e){if(!this.configSchema)return{};if(e.data._templateVars)for(let t in e.data._templateVars)this.configSchema=this.configSchema.append({[t]:m.any()});const t=await this.configSchema.validate(e.data);return t.error?{id:e.id,name:e.name,_error:`Schema Validation error: ${t?.error?.message} on component ${e.displayName}:${e.title}`,_debug:`Schema Validation error: ${t?.error?.message} on component ${e.displayName}:${e.title}`}:{}}async process(e,t,s){const n=await Jt(e,t?.inputs,s);for(const[t,s]of Object.entries(n))e[t]=s}async postProcess(e,t,s){return e?.result&&(delete e?.result?._debug,e?.result?._error||delete e?.result?._error),e}async enable(e,t){}async disable(e,t){}readOutput(e,t,s){return null}hasOutput(e,t,s){return!1}}class Ht{static async getTeamKey(e,t){return await at.getVaultConnector().user(Ct.team(t)).get(e)}static async getUserKey(e,t){const s=at.getVaultConnector(),n=await at.getAccountConnector().getCandidateTeam(Ct.user(t));return await s.user(Ct.team(n)).get(e)}static async getAgentKey(e,t){const s=at.getVaultConnector(),n=await at.getAccountConnector().getCandidateTeam(Ct.agent(t));return await s.user(Ct.team(n)).get(e)}}var Wt=Object.defineProperty,Qt=(e,t,s)=>((e,t,s)=>t in e?Wt(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Yt={default:/{{(.*?)}}/g,doubleCurly:/{{(.*?)}}/g,singleCurly:/{(.*?)}/g,doubleCurlyForSingleMatch:/{{(.*?)}}/,templateVariables:/{{([A-Z]+):([\w\s]+):[\[{](.*?)[\]}]}}/gm,prefix:e=>new RegExp(`{{${e}(.*?)}}`,"g"),suffix:e=>new RegExp(`{{(.*?)${e}}}`,"g"),prefSuf:(e,t)=>new RegExp(`{{${e}(.*?)${t}}}`,"g"),fn:e=>new RegExp(`{{${e}\\((.*?)\\)}}`,"g")},Xt={vaultTeam:e=>async t=>{try{return await Ht.getTeamKey(t,e)}catch{return t}},componentTemplateVar:e=>async(t,s)=>{try{const n=s[2];if(!n)return t;const o=Object.values(e).find((e=>e.label==n));return o?`{{${o.id}}}`:t}catch{return t}}};class Zt{constructor(e){this.templateString=e,Qt(this,"_current"),Qt(this,"_promiseQueue",[]),this._current=e}get result(){if(this._promiseQueue.length<=0)return this._current;throw new Error("This template object has async results, you should use .asyncResult with await instead of .result")}get asyncResult(){return new Promise((async(e,t)=>{await Promise.all(this._promiseQueue),e(this._current)}))}static create(e){return new Zt(e)}parse(e,t=Yt.default){return"string"!=typeof this._current||"object"!=typeof e||(this._current=this._current.replace(t,((t,s)=>e[s]||t))),this}parseRaw(e,t=Yt.doubleCurlyForSingleMatch){if("string"!=typeof this._current||"object"!=typeof e)return this;const s=this._current.match(t),n=s?s[1]:"";if(n){const t=e?.[n];this._current=t}return this}parseTeamKeysAsync(e){return this.process(Xt.vaultTeam(e),Yt.fn("KEY"))}parseComponentTemplateVarsAsync(e){return this.process(Xt.componentTemplateVar(e),Yt.templateVariables)}process(e,t=Yt.default){if("string"!=typeof this._current)return this;let s,n={};const o=[];for(;null!==(s=t.exec(this._current));){const t=s[1];n[t]=s[0];const r=e(t,s);r instanceof Promise?(r.then((e=>{if(void 0===e)return s[0];n[t]=e})),o.push(r)):n[t]=r}return o.length>0?(new Promise((async(e,s)=>{await Promise.all(o),this.parse(n,t),e(!0)})),this._promiseQueue.push(Promise.all(o))):this.parse(n,t),this}clean(e=Yt.default){return"string"!=typeof this._current||(this._current=this._current.replace(e,"")),this}}function es(e){return e&&e.replace(/\\/g,"\\\\").replace(/"/g,'\\"').replace(/\n/g,"\\n").replace(/\r/g,"\\r").replace(/\t/g,"\\t")}function ts(e){return Zt.create(e)}var ss=Object.defineProperty,ns=(e,t,s)=>((e,t,s)=>t in e?ss(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);function os(e){return null==e||"string"==typeof e&&""===e.trim()||Array.isArray(e)&&0===e.length||"object"==typeof e&&null!==e&&0===Object.keys(e).length}function rs(e=""){return!(!e||"string"!=typeof e)&&(e?.match(/{{(.*?)}}/g)??[]).length>0}function as(e=""){return!(!e||"string"!=typeof e)&&(e?.match(/{{KEY\((.*?)\)}}/g)??[]).length>0}function is(e="",t){return e.replace(/{{KEY\((.*?)\)}}/g,((e,s)=>"teamid"===s?t:""))}var cs=Object.defineProperty,ls=(e,t,s)=>((e,t,s)=>t in e?cs(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var us=(e=>(e.User="user",e.Assistant="assistant",e.System="system",e.Model="model",e.Tool="tool",e.Function="function",e))(us||{}),ps=(e=>(e.OpenAI="OpenAI",e.AnthropicAI="AnthropicAI",e.GoogleAI="GoogleAI",e.Groq="Groq",e.TogetherAI="TogetherAI",e.Bedrock="Bedrock",e.VertexAI="VertexAI",e))(ps||{});const ms={echo:{llm:"Echo",alias:"Echo"},Echo:{llm:"Echo",tokens:128e3,completionTokens:128e3,enabled:!0,components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot"]},"deepseek-v2.5":{llm:"DeepSeek",baseURL:"https://api.deepseek.com/beta",alias:"deepseek-chat"},"deepseek-chat":{llm:"DeepSeek",baseURL:"https://api.deepseek.com/beta",tokens:128e3,completionTokens:8192,enabled:!0,keyOptions:{tokens:128e3,completionTokens:8192}},"gpt-4o-mini":{llm:"OpenAI",alias:"gpt-4o-mini-2024-07-18",components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot","GPTPlugin"]},"gpt-4o-mini-2024-07-18":{llm:"OpenAI",tokens:2048,completionTokens:2048,enabled:!0,keyOptions:{tokens:128e3,completionTokens:16383}},"gpt-4o":{llm:"OpenAI",alias:"gpt-4o-2024-08-06",components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot","GPTPlugin"]},"gpt-4o-2024-08-06":{llm:"OpenAI",tokens:2048,completionTokens:2048,enabled:!0,keyOptions:{tokens:128e3,completionTokens:16384}},"gpt-4o-2024-05-13":{llm:"OpenAI",tokens:2048,completionTokens:2048,enabled:!0,keyOptions:{tokens:128e3,completionTokens:8192}},"gpt-4-turbo-latest":{llm:"OpenAI",alias:"gpt-4-turbo-2024-04-09",components:["PromptGenerator","LLMAssistant","Classifier"],tags:["legacy"]},"gpt-4-turbo":{llm:"OpenAI",alias:"gpt-4-turbo-2024-04-09",components:["PromptGenerator","LLMAssistant","VisionLLM","AgentPlugin","Chatbot","GPTPlugin"],tags:["legacy"]},"gpt-4-turbo-2024-04-09":{llm:"OpenAI",tokens:1024,completionTokens:1024,enabled:!0,keyOptions:{tokens:128e3,completionTokens:4096}},"gpt-4-latest":{llm:"OpenAI",alias:"gpt-4-0613",enabled:!0,components:["PromptGenerator","LLMAssistant"],tags:["legacy"]},"gpt-4":{llm:"OpenAI",tokens:1024,completionTokens:1024,enabled:!0,keyOptions:{tokens:8192,completionTokens:8192},components:["PromptGenerator","LLMAssistant","Classifier","AgentPlugin","Chatbot","GPTPlugin"],tags:["legacy"]},"gpt-4-0613":{llm:"OpenAI",tokens:1024,completionTokens:1024,enabled:!0,hidden:!0,keyOptions:{tokens:8192,completionTokens:8192}},"gpt-3.5-turbo-latest":{llm:"OpenAI",alias:"gpt-3.5-turbo-0125",components:["PromptGenerator","LLMAssistant","Classifier","AgentPlugin","Chatbot","GPTPlugin"],tags:["legacy"]},"gpt-3.5-turbo":{llm:"OpenAI",alias:"gpt-3.5-turbo-0125",components:["PromptGenerator","LLMAssistant","Classifier","AgentPlugin","Chatbot","GPTPlugin"],tags:["legacy"]},"gpt-3.5-turbo-0125":{llm:"OpenAI",tokens:2048,completionTokens:2048,enabled:!0,keyOptions:{tokens:16385,completionTokens:4096}},"gpt-3.5-turbo-1106":{llm:"OpenAI",tokens:2048,completionTokens:2048,enabled:!0,keyOptions:{tokens:16384,completionTokens:4096},tags:["legacy"]},"gpt-3.5-turbo-16k":{llm:"OpenAI",alias:"gpt-3.5-turbo-0125",tags:["legacy"]},"gpt-3.5-turbo-0613":{llm:"OpenAI",alias:"gpt-3.5-turbo-0125",tags:["deprecated"]},"claude-3.5-haiku":{llm:"AnthropicAI",alias:"claude-3-5-haiku-latest",components:["PromptGenerator","LLMAssistant","Classifier","AgentPlugin","Chatbot"],tags:["new"]},"claude-3-5-haiku-latest":{llm:"AnthropicAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2e5,completionTokens:8192,enabled:!0}},"claude-3.5-sonnet":{llm:"AnthropicAI",alias:"claude-3-5-sonnet-latest",components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot"]},"claude-3-5-sonnet-latest":{llm:"AnthropicAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2e5,completionTokens:8192,enabled:!0}},"claude-3-opus":{llm:"AnthropicAI",alias:"claude-3-opus-20240229",components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot"]},"claude-3-opus-20240229":{llm:"AnthropicAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2e5,completionTokens:4096,enabled:!0}},"claude-3-sonnet":{llm:"AnthropicAI",alias:"claude-3-sonnet-20240229",components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot"],tags:["legacy"]},"claude-3-sonnet-20240229":{llm:"AnthropicAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2e5,completionTokens:4096,enabled:!0}},"claude-3-haiku":{llm:"AnthropicAI",alias:"claude-3-haiku-20240307",components:["PromptGenerator","LLMAssistant","Classifier","VisionLLM","AgentPlugin","Chatbot"]},"claude-3-haiku-20240307":{llm:"AnthropicAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2e5,completionTokens:4096,enabled:!0}},"claude-2.1":{llm:"AnthropicAI",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:2e5,completionTokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant","Classifier"],tags:["legacy"]},"claude-instant-1.2":{llm:"AnthropicAI",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:1e5,completionTokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant","Classifier"],tags:["legacy"]},"gemini-1.5-pro-latest":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2097152,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"],tags:["legacy"]},"gemini-1.5-pro-exp-0801":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2097152,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"]},"gemini-1.5-pro-latest-stable":{llm:"GoogleAI",alias:"gemini-1.5-pro",components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"]},"gemini-1.5-pro-stable":{llm:"GoogleAI",alias:"gemini-1.5-pro-001",components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"]},"gemini-1.5-pro":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2097152,completionTokens:8192,enabled:!0}},"gemini-1.5-pro-001":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:2097152,completionTokens:8192,enabled:!0}},"gemini-1.5-flash-latest":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:1048576,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"],tags:["legacy"]},"gemini-1.5-flash-latest-stable":{llm:"GoogleAI",alias:"gemini-1.5-flash",components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"],tags:["legacy"]},"gemini-1.5-flash-stable":{llm:"GoogleAI",alias:"gemini-1.5-flash-001",components:["PromptGenerator","LLMAssistant","VisionLLM","MultimodalLLM"]},"gemini-1.5-flash":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:1048576,completionTokens:8192,enabled:!0}},"gemini-1.5-flash-001":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:1048576,completionTokens:8192,enabled:!0}},"gemini-1.0-pro-latest":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:30720,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["legacy"]},"gemini-1.0-pro-latest-stable":{llm:"GoogleAI",alias:"gemini-1.0-pro",components:["PromptGenerator","LLMAssistant"],tags:["legacy"]},"gemini-1.0-pro-stable":{llm:"GoogleAI",alias:"gemini-1.0-pro-001",components:["PromptGenerator","LLMAssistant"],tags:["legacy"]},"gemini-1.0-pro":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:30720,completionTokens:8192,enabled:!0}},"gemini-1.0-pro-001":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:30720,completionTokens:8192,enabled:!0}},"gemini-pro-vision":{llm:"GoogleAI",tokens:2048,completionTokens:2048,enabled:!1,keyOptions:{tokens:12288,completionTokens:4096,enabled:!0},components:["VisionLLM"],tags:["legacy"]},"groq-llama-3.1-405b-reasoning":{llm:"Groq",alias:"llama-3.1-405b-reasoning",components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama-3.1-405b-reasoning":{llm:"Groq",tokens:16e3,completionTokens:16e3,enabled:!1,keyOptions:{tokens:131072,completionTokens:131072,enabled:!0}},"groq-llama-3.1-70b-versatile":{llm:"Groq",alias:"llama-3.1-70b-versatile",components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama-3.1-70b-versatile":{llm:"Groq",tokens:8e3,completionTokens:8e3,enabled:!1,keyOptions:{tokens:131072,completionTokens:131072,enabled:!0}},"groq-llama-3.1-8b-instant":{llm:"Groq",alias:"llama-3.1-8b-instant",components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama-3.1-8b-instant":{llm:"Groq",tokens:8e3,completionTokens:8e3,enabled:!1,keyOptions:{tokens:131072,completionTokens:131072,enabled:!0}},"llama3-groq-70b-8192-tool-use-preview":{llm:"Groq",tokens:8192,completionTokens:8192,enabled:!1,keyOptions:{tokens:8192,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama3-groq-8b-8192-tool-use-preview":{llm:"Groq",tokens:8192,completionTokens:8192,enabled:!1,keyOptions:{tokens:8192,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"]},"groq-llama3-8b":{llm:"Groq",alias:"llama3-8b-8192",components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama3-8b-8192":{llm:"Groq",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:8192,completionTokens:8192,enabled:!0}},"groq-llama3-70b":{llm:"Groq",alias:"llama3-70b-8192",components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama3-70b-8192":{llm:"Groq",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:8192,completionTokens:8192,enabled:!0}},"groq-llama2-70b":{llm:"Groq",alias:"llama2-70b-4096",components:["PromptGenerator","LLMAssistant"],tags:["new"]},"llama2-70b-4096":{llm:"Groq",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:4096,completionTokens:4096,enabled:!0}},"groq-mixtral-8x7b":{llm:"Groq",alias:"mixtral-8x7b-32768",components:["PromptGenerator","LLMAssistant"]},"mixtral-8x7b-32768":{llm:"Groq",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:32768,completionTokens:32768,enabled:!0}},"groq-gemma-7b":{llm:"Groq",alias:"gemma-7b-it",components:["PromptGenerator","LLMAssistant"]},"gemma-7b-it":{llm:"Groq",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:8192,completionTokens:8192,enabled:!0}},"groq-gemma2-9b":{llm:"Groq",alias:"gemma2-9b-it",components:["PromptGenerator","LLMAssistant"]},"gemma2-9b-it":{llm:"Groq",tokens:1024,completionTokens:1024,enabled:!1,keyOptions:{tokens:8192,completionTokens:8192,enabled:!0}},"zero-one-ai/Yi-34B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"Austism/chronos-hermes-13b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:2048,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3.1-8B-Instruct-Turbo":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:128e3,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3.1-70B-Instruct-Turbo":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:128e3,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3.1-405B-Instruct-Turbo":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3-8B-Instruct-Turbo":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3-70B-Instruct-Turbo":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3-8B-Instruct-Lite":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Meta-Llama-3-70B-Instruct-Lite":{llm:"TogetherAI",tokens:4096,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["LLMAssistant","PromptGenerator"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"togethercomputer/CodeLlama-13b-Instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},baseURL:"https://api.together.xyz/v1"},"codellama/CodeLlama-13b-Instruct-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"togethercomputer/CodeLlama-34b-Instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},baseURL:"https://api.together.xyz/v1"},"codellama/CodeLlama-34b-Instruct-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"codellama/CodeLlama-70b-Instruct-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"togethercomputer/CodeLlama-7b-Instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},baseURL:"https://api.together.xyz/v1"},"codellama/CodeLlama-7b-Instruct-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:16384,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Llama-2-70b-chat-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Llama-2-13b-chat-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Llama-2-7b-chat-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Llama-3-8b-chat-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"meta-llama/Llama-3-70b-chat-hf":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"togethercomputer/falcon-7b-instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:2048,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"mistralai/Mistral-7B-Instruct-v0.1":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"mistralai/Mistral-7B-Instruct-v0.2":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"mistralai/Mistral-7B-Instruct-v0.3":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant","Classifier"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"mistralai/Mixtral-8x7B-Instruct-v0.1":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant","Classifier"],baseURL:"https://api.together.xyz/v1"},"mistralai/Mixtral-8x22B-Instruct-v0.1":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:65536,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Gryphe/MythoMax-L2-13b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-Llama2-70b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Capybara-7B-V1p9":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-2-Mistral-7B-DPO":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-2-Mixtral-8x7B-DPO":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-2-Mixtral-8x7B-SFT":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-2-Yi-34B":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-llama-2-7b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"NousResearch/Nous-Hermes-Llama2-13b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"openchat/openchat-3.5-1210":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"teknium/OpenHermes-2-Mistral-7B":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"teknium/OpenHermes-2p5-Mistral-7B":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"garage-bAInd/Platypus2-70B-instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"microsoft/WizardLM-2-8x22B":{llm:"TogetherAI",tokens:65536,completionTokens:8192,enabled:!1,keyOptions:{tokens:65536,completionTokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"upstage/SOLAR-10.7B-Instruct-v1.0":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"togethercomputer/StripedHyena-Nous-7B":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"lmsys/vicuna-7b-v1.5":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"lmsys/vicuna-13b-v1.5":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"allenai/OLMo-7B-Twin-2T":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:2048,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"allenai/OLMo-7B":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:2048,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-0.5B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-1.8B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-4B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-7B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-14B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-32B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-72B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Qwen/Qwen1.5-110B-Chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"deepseek-ai/deepseek-coder-33b-instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:16384,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"deepseek-ai/deepseek-llm-67b-chat":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"google/gemma-2b-it":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"google/gemma-7b-it":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"google/gemma-2-9b-it":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"google/gemma-2-27b-it":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Undi95/Toppy-M-7B":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"cognitivecomputations/dolphin-2.5-mixtral-8x7b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"databricks/dbrx-instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Open-Orca/Mistral-7B-OpenOrca":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:8192,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"snorkelai/Snorkel-Mistral-PairRM-DPO":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:32768,enabled:!0},components:["LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"Snowflake/snowflake-arctic-instruct":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],tags:["new"],baseURL:"https://api.together.xyz/v1"},"togethercomputer/alpaca-7b":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:2048,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"WizardLM/WizardLM-13B-V1.2":{llm:"TogetherAI",tokens:1024,enabled:!1,keyOptions:{tokens:4096,enabled:!0},components:["PromptGenerator","LLMAssistant"],baseURL:"https://api.together.xyz/v1"},"dall-e-3":{llm:"OpenAI",alias:"dall-e-3",enabled:!0,components:["ImageGenerator"],tokens:2048,completionTokens:2048,keyOptions:{tokens:128e3,completionTokens:16383}},"dall-e-2":{llm:"OpenAI",alias:"dall-e-2",enabled:!0,components:["ImageGenerator"],tokens:2048,completionTokens:2048,keyOptions:{tokens:128e3,completionTokens:16383}}};var ds=Object.defineProperty;const hs=class e{constructor(e){this.model=e,this.model=e}static getInstance(t){return this.instance||(this.instance=new e(t)),this.instance}static isStandardLLM(e){return this.modelExists(e)}static getModelId(e){return ms?.[e]?.alias||e}static getBaseURL(e){const t=this.getModelId(e);return ms?.[t]?.baseURL||void 0}static getModelKeyOptions(e){const t=this.getModelId(e);return ms?.[t]?.keyOptions||{}}static getProvider(e){const t=this.getModelId(e);return ms?.[t]?.llm}static getModelInfo(t,s=!1){const n=this.getModelId(t),o=ms?.[n]||{};if(s){const t=e.getModelKeyOptions(n);return{...o,...t}}return o}static modelExists(e){if("echo"===e.toLowerCase())return!0;const t=this.getModelId(e);return!!ms?.[t]}static getMaxContextTokens(e,t=!1){return this.getModelInfo(e,t)?.tokens}static getMaxCompletionTokens(e,t=!1){const s=this.getModelInfo(e,t);return s?.completionTokens||s?.tokens}static adjustMaxCompletionTokens(e,t,s=!1){const n=this.getModelInfo(e,s);return Math.min(t,n?.completionTokens||n?.tokens)}static async validateTokensLimit({model:e,promptTokens:t,completionTokens:s,hasAPIKey:n=!1}){const o=this.getMaxContextTokens(e,n),r=t+s;if(r>o)throw new Error(n?`This models' maximum content length is ${o} tokens. (This is the sum of your prompt with all variables and the maximum output tokens you've set in Advanced Settings) However, you requested approx ${r} tokens (${t} in the prompt, ${s} in the output). Please reduce the length of either the input prompt or the Maximum output tokens.`:`Input exceeds max tokens limit of ${o}. Please add your API key to unlock full length.`)}};((e,t,s)=>{((e,t,s)=>{t in e?ds(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s})(e,"symbol"!=typeof t?t+"":t,s)})(hs,"instance",null);let gs=hs;//! ***IMPORTANT***
//! ***IMPORTANT***
const ys={"ai21.jamba-1-5-mini-v1:0":{llm:"Bedrock",label:"AI21 Labs - Jamba 1.5 Mini",tokens:256e3,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["new"]},"ai21.jamba-1-5-large-v1:0":{llm:"Bedrock",label:"AI21 Labs - Jamba 1.5 Large",tokens:256e3,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["new"]},"ai21.jamba-instruct-v1:0":{llm:"Bedrock",label:"AI21 Labs - Jamba-Instruct",tokens:256e3,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"ai21.j2-ultra-v1":{llm:"Bedrock",label:"AI21 Labs - Jurassic-2 Ultra",tokens:8191,completionTokens:8191,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"ai21.j2-mid-v1":{llm:"Bedrock",label:"AI21 Labs - Jurassic-2 Mid",tokens:8191,completionTokens:8191,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"amazon.titan-text-premier-v1:0":{llm:"Bedrock",label:"Amazon - Titan Text Premier",tokens:32e3,completionTokens:3e3,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"amazon.titan-text-express-v1":{llm:"Bedrock",label:"Amazon - Titan Text G1 - Express",tokens:8192,completionTokens:4096,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"amazon.titan-text-lite-v1":{llm:"Bedrock",label:"Amazon - Titan Text G1 - Lite",tokens:4096,completionTokens:4096,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"us.anthropic.claude-3-5-haiku-20241022-v1:0":{llm:"Bedrock",label:"Anthropic - Claude 3.5 Haiku",tokens:2e5,completionTokens:8192,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["v1:0","new"]},"us.anthropic.claude-3-5-sonnet-20241022-v2:0":{llm:"Bedrock",label:"Anthropic - Claude 3.5 Sonnet",tokens:2e5,completionTokens:8192,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["v2:0","new"]},"anthropic.claude-3-5-sonnet-20240620-v1:0":{llm:"Bedrock",label:"Anthropic - Claude 3.5 Sonnet",tokens:2e5,completionTokens:8192,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["v1:0"]},"anthropic.claude-3-sonnet-20240229-v1:0":{llm:"Bedrock",label:"Anthropic - Claude 3 Sonnet",tokens:2e5,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["v1:0"]},"anthropic.claude-3-haiku-20240307-v1:0":{llm:"Bedrock",label:"Anthropic - Claude 3 Haiku",tokens:2e5,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["v1:0"]},"anthropic.claude-3-opus-20240229-v1:0":{llm:"Bedrock",label:"Anthropic - Claude 3 Opus",tokens:2e5,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"],tags:["v1:0"]},"anthropic.claude-v2:1":{llm:"Bedrock",label:"Anthropic - Claude 2.1",tokens:2e5,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"],tags:["v2:1"]},"anthropic.claude-v2":{llm:"Bedrock",label:"Anthropic - Claude 2.0",tokens:1e5,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"anthropic.claude-instant-v1":{llm:"Bedrock",label:"Anthropic - Claude Instant",tokens:1e5,completionTokens:4096,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"cohere.command-r-plus-v1:0":{llm:"Bedrock",label:"Cohere - Command R+",tokens:128e3,completionTokens:4e3,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"]},"cohere.command-r-v1:0":{llm:"Bedrock",label:"Cohere - Command R",tokens:128e3,completionTokens:4e3,supportsSystemPrompt:!0,supportsStreamingToolUse:!0,components:["PromptGenerator","LLMAssistant","AgentPlugin","Chatbot"]},"cohere.command-text-v14":{llm:"Bedrock",label:"Cohere - Command",tokens:4e3,completionTokens:4e3,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"cohere.command-light-text-v14":{llm:"Bedrock",label:"Cohere - Command Light",tokens:4e3,completionTokens:4e3,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"us.meta.llama3-2-1b-instruct-v1:0":{llm:"Bedrock",label:"Meta - Llama 3.2 1B Instruct",tokens:2e5,completionTokens:2048,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"],tags:["new"]},"us.meta.llama3-2-3b-instruct-v1:0":{llm:"Bedrock",label:"Meta - Llama 3.2 3B Instruct",tokens:2e5,completionTokens:2048,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"],tags:["new"]},"meta.llama3-8b-instruct-v1:0":{llm:"Bedrock",label:"Meta - Llama 3 8B Instruct",tokens:8192,completionTokens:2048,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"meta.llama3-70b-instruct-v1:0":{llm:"Bedrock",label:"Meta - Llama 3 70B Instruct",tokens:8192,completionTokens:2048,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"mistral.mistral-7b-instruct-v0:2":{llm:"Bedrock",label:"Mistral AI - Mistral 7B Instruct",tokens:32e3,completionTokens:8192,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"mistral.mixtral-8x7b-instruct-v0:1":{llm:"Bedrock",label:"Mistral AI - Mixtral 8X7B Instruct",tokens:32e3,completionTokens:4096,supportsSystemPrompt:!1,supportsStreamingToolUse:!1,components:["PromptGenerator"]},"mistral.mistral-large-2402-v1:0":{llm:"Bedrock",label:"Mistral AI - Mistral Large",tokens:32e3,completionTokens:8192,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"mistral.mistral-small-2402-v1:0":{llm:"Bedrock",label:"Mistral AI - Mistral Small",tokens:32e3,completionTokens:8192,supportsSystemPrompt:!0,supportsStreamingToolUse:!1,components:["PromptGenerator","LLMAssistant"]},"gemini-1.5-flash":{llm:"VertexAI",label:"Gemini 1.5 Flash",supportsSystemPrompt:!0,tokens:1048576,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},"gemini-1.5-pro":{llm:"VertexAI",label:"Gemini 1.5 Pro",supportsSystemPrompt:!0,tokens:2097152,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},"gemini-1.0-pro":{llm:"VertexAI",label:"Gemini 1.0 Pro",supportsSystemPrompt:!0,tokens:32760,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},"claude-3-5-haiku":{llm:"VertexAI",label:"Claude 3.5 Haiku",supportsSystemPrompt:!0,tokens:2e5,completionTokens:8192,tags:["new"],components:["PromptGenerator","LLMAssistant"]},"claude-3-5-sonnet-v2":{llm:"VertexAI",label:"Claude 3.5 Sonnet",supportsSystemPrompt:!0,tokens:2e5,completionTokens:8192,tags:["v2","new"],components:["PromptGenerator","LLMAssistant"]},"claude-3-5-sonnet":{llm:"VertexAI",label:"Claude 3.5 Sonnet",supportsSystemPrompt:!0,tokens:2e5,completionTokens:8192,tags:["v1"],components:["PromptGenerator","LLMAssistant"]},"claude-3-sonnet":{llm:"VertexAI",label:"Claude 3 Sonnet",supportsSystemPrompt:!0,tokens:2e5,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},"claude-3-opus":{llm:"VertexAI",label:"Claude 3 Opus",supportsSystemPrompt:!0,tokens:2e5,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},"claude-3-haiku":{llm:"VertexAI",label:"Claude 3 Haiku",supportsSystemPrompt:!0,tokens:2e5,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},gemma2:{llm:"VertexAI",label:"Gemma 2",supportsSystemPrompt:!0,tokens:8192,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},gemma:{llm:"VertexAI",label:"Gemma",supportsSystemPrompt:!0,tokens:8192,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},codegemma:{llm:"VertexAI",label:"CodeGemma",supportsSystemPrompt:!0,tokens:8192,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},"llama3-405b-instruct-maas":{llm:"VertexAI",label:"Llama 3.1 API Service",supportsSystemPrompt:!0,tokens:4096,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},llama3_1:{llm:"VertexAI",label:"Llama 3.1",supportsSystemPrompt:!0,tokens:4096,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},"llama-guard":{llm:"VertexAI",label:"Llama Guard",supportsSystemPrompt:!0,tokens:8192,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},llama3:{llm:"VertexAI",label:"Llama 3",supportsSystemPrompt:!0,tokens:8192,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},llama2:{llm:"VertexAI",label:"Llama 2",value:"llama2",supportsSystemPrompt:!0,tokens:4096,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},"mistral-large":{llm:"VertexAI",label:"Mistral Large (2407)",supportsSystemPrompt:!0,tokens:128e3,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},"mistral-nemo":{llm:"VertexAI",label:"Mistral Nemo",supportsSystemPrompt:!0,tokens:128e3,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},codestral:{llm:"VertexAI",label:"Codestral",supportsSystemPrompt:!0,tokens:32e3,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},mixtral:{llm:"VertexAI",label:"Mixtral",supportsSystemPrompt:!0,tokens:32e3,completionTokens:4096,components:["PromptGenerator","LLMAssistant"]},"chat-bison":{llm:"VertexAI",label:"PaLM 2 Chat Bison",supportsSystemPrompt:!0,tokens:4096,completionTokens:2048,components:["PromptGenerator","LLMAssistant"]},"text-bison":{llm:"VertexAI",label:"PaLM 2 Text Bison",supportsSystemPrompt:!0,tokens:32768,completionTokens:2048,components:["PromptGenerator","LLMAssistant"]},phi3:{llm:"VertexAI",label:"Phi-3",supportsSystemPrompt:!0,tokens:128e3,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},qwen2:{llm:"VertexAI",label:"Qwen2",supportsSystemPrompt:!0,tokens:131072,completionTokens:8192,components:["PromptGenerator","LLMAssistant"]},mammut:{llm:"VertexAI",label:"MaMMUT",supportsSystemPrompt:!0,tokens:4096,completionTokens:2048,components:["PromptGenerator","LLMAssistant"]},"lmsys-vicuna-7b":{llm:"VertexAI",label:"Vicuna",supportsSystemPrompt:!0,tokens:4096,completionTokens:2048,components:["PromptGenerator","LLMAssistant"]},"bio-gpt":{llm:"VertexAI",label:"BioGPT",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"microsoft-biomedclip":{llm:"VertexAI",label:"BiomedCLIP",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},mistral:{llm:"VertexAI",label:"Mistral Self-host (7B & Nemo)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},nllb:{llm:"VertexAI",label:"NLLB",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"codellama-7b-hf":{llm:"VertexAI",label:"Code Llama",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"palmyra-med":{llm:"VertexAI",label:"Palmyra Med (Writer)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"llama-2-quantized":{llm:"VertexAI",label:"Llama 2 (Quantized)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"bert-base-uncased":{llm:"VertexAI",label:"BERT (PEFT)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"falcon-instruct-7b-peft":{llm:"VertexAI",label:"Falcon-instruct (PEFT)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},openllama:{llm:"VertexAI",label:"OpenLLaMA (PEFT)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"roberta-large":{llm:"VertexAI",label:"RoBERTa-large (PEFT)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"xlm-roberta-large":{llm:"VertexAI",label:"XLM-RoBERTa-large (PEFT)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"bart-large-cnn":{llm:"VertexAI",label:"Bart-large-cnn",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"dolly-v2":{llm:"VertexAI",label:"Dolly-v2",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},imagetext:{llm:"VertexAI",label:"Imagen for Captioning & VQA",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"codechat-bison":{llm:"VertexAI",label:"Codey for Code Chat",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"code-bison":{llm:"VertexAI",label:"Codey for Code Generation",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"code-gecko":{llm:"VertexAI",label:"Codey for Code Completion",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"text-unicorn":{llm:"VertexAI",label:"PaLM 2 Text Unicorn",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"textembedding-gecko":{llm:"VertexAI",label:"Embeddings for Text",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"t5-flan":{llm:"VertexAI",label:"T5-FLAN",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"t5-1.1":{llm:"VertexAI",label:"T5-1.1",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"blip2-opt-2.7-b":{llm:"VertexAI",label:"BLIP2",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"instruct-pix2pix":{llm:"VertexAI",label:"InstructPix2Pix",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"bert-base":{llm:"VertexAI",label:"BERT",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"mediapipe-mobile-bert-classifier":{llm:"VertexAI",label:"MobileBERT Classifier (MediaPipe)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"mediapipe-average-word-embedding-classifier":{llm:"VertexAI",label:"Average Word Embedding Classifier (MediaPipe)",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},pic2word:{llm:"VertexAI",label:"Pic2Word Composed Image Retrieval",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"text-translation":{llm:"VertexAI",label:"Text Translation",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"language-v1-moderate-text":{llm:"VertexAI",label:"Text Moderation",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"language-v1-analyze-syntax":{llm:"VertexAI",label:"Syntax analysis",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"language-v1-analyze-entity-sentiment":{llm:"VertexAI",label:"Entity sentiment analysis",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"language-v1-analyze-sentiment":{llm:"VertexAI",label:"Sentiment analysis",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"language-v1-classify-text-v1":{llm:"VertexAI",label:"Content classification",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]},"pt-test":{llm:"VertexAI",label:"Entity analysis",supportsSystemPrompt:!1,tokens:4096,completionTokens:4096,components:["PromptGenerator"]}};var fs=Object.defineProperty,bs=(e,t,s)=>((e,t,s)=>t in e?fs(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class ws{constructor(){bs(this,"models",{})}static async getInstance(e){if(!e)throw new Error("Please provide a valid team ID.");const t=new ws;return await t.loadCustomModels(e),t}getProvider(e){const t=this.getModelId(e);return this.models?.[t]?.llm}getModelInfo(e){const t=this.getModelId(e);return this.models?.[t]||{}}getMaxContextTokens(e){return this.getModelInfo(e)?.tokens}async getMaxCompletionTokens(e){const t=this.getModelInfo(e);return t?.completionTokens||t?.tokens}adjustMaxCompletionTokens(e,t){const s=this.getModelInfo(e);return Math.min(t,s?.completionTokens||s?.tokens)}async loadCustomModels(e){const t=await this.getCustomModels(e);this.models={...this.models,...t}}getModelId(e){for(const[t,s]of Object.entries(this.models))if(s.name===e)return t;return e}async getCustomModels(e){const t={};try{const s=await at.getAccountConnector().user(Ct.team(e)).getTeamSetting("custom-llm"),n=JSON.parse(s||"{}");for(const[e,s]of Object.entries(n)){const n=s.settings.foundationModel,o=ys[n]?.supportsSystemPrompt||s.settings.supportsSystemPrompt,r=ys[n]||{};t[e]={id:e,name:s.name,alias:n,llm:s.provider,enabled:!0,tags:s.tags,components:r?.components??[],tokens:r?.tokens??1e5,completionTokens:r?.completionTokens??4096,supportsSystemPrompt:o,provider:s.provider,features:s.features,settings:s.settings}}return t}catch{return{}}}}var As=Object.defineProperty,ks=(e,t,s)=>((e,t,s)=>t in e?As(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class _s{constructor(){ks(this,"model"),ks(this,"llmConnector")}static async getInstance(e,t){const s=new _s;if(gs.isStandardLLM(e)){const t=gs.getProvider(e);s.llmConnector=at.getLLMConnector(t)}else{const n=(await ws.getInstance(t)).getProvider(e);s.llmConnector=at.getLLMConnector(n)}return s.model=e,s}get connector(){return this.llmConnector}async promptRequest(e,t={},s,n={}){const o=n?.messages||[];if(e){const s=this.llmConnector.enhancePrompt(e,t);o.push({role:us.User,content:s})}if(!o?.length)throw new Error("Input prompt is required!");let r=Object.assign(t.data,{...n,messages:o});const a=s instanceof Fo?s.id:s;if(r=this.prepareParams(r)||{},!this.llmConnector)throw new Error(`Model ${r.model} not supported`);try{let e=await this.llmConnector.user(Ct.agent(a)).chatRequest(r);const t=this.llmConnector.postProcess(e?.content);if(t.error)throw"stop"!==e.finishReason?new Error("The model stopped before completing the response, this is usually due to output token limit reached."):new Error(t.error);return t}catch(e){throw console.error("Error in chatRequest: ",e),e}}async visionRequest(e,t,s={},n){const o=n instanceof Fo?n.id:n,r=this.prepareParams(s)||{},a=[],i=[];for(let e of t){const t=Gt.from(e);i.push(t),a.push(t.upload(Ct.agent(o)))}await Promise.all(a),r.fileSources=i;try{e=this.llmConnector.enhancePrompt(e,s);let t=await this.llmConnector.user(Ct.agent(o)).visionRequest(e,r);const n=this.llmConnector.postProcess(t?.content);if(n.error)throw"stop"!==t.finishReason?new Error("The model stopped before completing the response, this is usually due to output token limit reached."):new Error(n.error);return n}catch(e){throw console.error("Error in visionRequest: ",e),e}}async multimodalRequest(e,t,s={},n){const o=n instanceof Fo?n.id:n,r=this.prepareParams(s)||{},a=[],i=[];for(let e of t){const t=Gt.from(e);i.push(t),a.push(t.upload(Ct.agent(o)))}await Promise.all(a),r.fileSources=i;try{e=this.llmConnector.enhancePrompt(e,s);let t=await this.llmConnector.user(Ct.agent(o)).multimodalRequest(e,r);const n=this.llmConnector.postProcess(t?.content);if(n.error)throw"stop"!==t.finishReason?new Error("The model stopped before completing the response, this is usually due to output token limit reached."):new Error(n.error);return n}catch(e){throw console.error("Error in multimodalRequest: ",e),e}}async imageGenRequest(e,t,s){const n=s instanceof Fo?s.id:s;return this.llmConnector.user(Ct.agent(n)).imageGenRequest(e,t)}async toolRequest(e,t){if(!e.messages||!e.messages?.length)throw new Error("Input messages are required.");const s=JSON.parse(JSON.stringify(e));s.model||(s.model=this.model);try{const e=t instanceof Fo?t.id:t;return this.llmConnector.user(Ct.agent(e)).toolRequest(s)}catch(e){throw console.error("Error in toolRequest: ",e),e}}async streamToolRequest(e,t){const s=t instanceof Fo?t.id:t;return this.llmConnector.user(Ct.agent(s)).streamToolRequest(e)}async streamRequest(e,t){const s=t instanceof Fo?t.id:t;try{if(!e.messages||!e.messages?.length)throw new Error("Input messages are required.");const t=JSON.parse(JSON.stringify(e));return t.model||(t.model=this.model),await this.llmConnector.user(Ct.agent(s)).streamRequest(t)}catch(e){console.error("Error in streamRequest:",e);const t=new p;return process.nextTick((()=>{t.emit("error",e),t.emit("end")})),t}}getConsistentMessages(e){if(!e?.length)throw new Error("Input messages are required.");try{return this.llmConnector.getConsistentMessages(e)}catch(t){return console.error("Error in getConsistentMessages: ",t),e}}prepareParams(e){const t=JSON.parse(JSON.stringify(e||{})),s={};for(const[e,n]of Object.entries(t)){let t=n;"stopSequences"===e&&(t=t?t?.split(","):null),"string"==typeof t&&!isNaN(Number(t))&&(t=+t),"messages"===e&&(t=this.getConsistentMessages(t)),s[e]=t}return s?.model||(s.model=this.model),s}}var xs=Object.defineProperty,vs=(e,t,s)=>((e,t,s)=>t in e?xs(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Ss extends Kt{constructor(){super(),vs(this,"configSchema",m.object({model:m.string().max(200).required(),prompt:m.string().required().max(4e6).label("Prompt"),temperature:m.number().min(0).max(5).label("Temperature"),maxTokens:m.number().min(1).label("Maximum Tokens"),stopSequences:m.string().allow("").max(400).label("Stop Sequences"),topP:m.number().min(0).max(1).label("Top P"),topK:m.number().min(0).max(500).label("Top K"),frequencyPenalty:m.number().min(0).max(2).label("Frequency Penalty"),presencePenalty:m.number().min(0).max(2).label("Presence Penalty")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{n.debug("=== LLM Prompt Log ===");let o=s?.teamId;const r=t.data.model||"echo",a=await _s.getInstance(r,o);if(!a.connector)return{_error:`The model '${r}' is not available. Please try a different one.`,_debug:n.output};n.debug(` Model : ${r}`);let i=ts(t.data.prompt).parse(e).result;"[object Object]"===i&&(i=ts(t.data.prompt).parseRaw(e).result),n.debug(" Parsed prompt\n",i,"\n"),t.data.responseFormat=t.data?.responseFormat||"json";const c=await a.promptRequest(i,t,s).catch((e=>({error:e})));if(n.debug(" Enhanced prompt \n",i,"\n"),!c)return{_error:" LLM Error = Empty Response!",_debug:n.output};if(c?.error)return n.error(` LLM Error=${JSON.stringify(c.error)}`),{Reply:c?.data,_error:c?.error+" "+(c?.details||""),_debug:n.output};const l={Reply:c};return l._debug=n.output,l}catch(e){return{_error:e.message,_debug:n.output}}}}async function Is(e,t,s,n){return{data:Dt(ts(e).parse(s.data._templateVars).parse(t).clean().result).tryParse()}}async function Cs(e,t,s,n){if("object"==typeof e){const t=new URLSearchParams;for(const s in e)t.append(s,String(e[s]));return t.toString()}return{data:e}}async function Ts(e,t,s,n){const o=new H,r="string"==typeof e?JSON.parse(e):e;for(const e in r){let n=r[e];if(n="boolean"==typeof n?String(n):n,n=ts(n).parseRaw(t).result,n&&"object"==typeof n&&n?.url){const t=await Gt.from(n.url,"",n?.mimetype),s=await t.getBuffer(),r=new y;r.push(s||null),r.push(null);const a=await t.getName()||e;o.append(e,r,{filename:a})}else if(n instanceof Gt){const t=await n.getBuffer(),s=new y;s.push(t||null),s.push(null);const r=await n.getName()||e;o.append(e,s,{filename:r})}else n=ts(n).parse(s.data._templateVars).parse(t).clean().result,o.append(e,n)}return{data:o,headers:o.getHeaders()}}async function Ls(e,t,s,n){const o=ts(e).parseRaw(t).result;if(o&&"object"==typeof o&&o?.url){const e=await Gt.from(o.url,"",o?.mimetype);return{data:await e.getBuffer(),headers:{"Content-Type":e.mimetype}}}return o&&o instanceof Gt?{data:await o.getBuffer(),headers:{"Content-Type":o.mimetype}}:{data:Buffer.from([]),headers:{}}}async function Ps(e,t,s,n){return{data:"string"==typeof e?e:JSON.stringify(e),headers:{}}}function Rs(e,t,s,n){return{data:ts(e).parse(s.data._templateVars).parse(t).clean().result}}const Os={binary:["image/","multipart/form-data","video/","application/msword","application/octet-stream","application/pdf","application/vnd.ms-excel","application/vnd.ms-powerpoint","application/vnd.oasis.opendocument.text","application/vnd.openxmlformats-officedocument","application/zip","application/x-7z-compressed","application/x-rar-compressed","application/x-tar","application/x-bzip","application/x-bzip2","application/x-gzip","application/vnd.android.package-archive","application/vnd.visio","application/x-deb","application/x-rpm","application/x-executable","font/ttf","font/otf","font/woff","font/woff2","model/"],json:["application/graphql","application/json","application/ld+json","application/vnd.api+json"],text:["text/","application/xml","application/xhtml+xml","application/csv","application/x-www-form-urlencoded","application/x-yaml","application/yaml","application/javascript","application/sql","application/rtf"]},Ms={json:function(e){return JSON.parse(Buffer.from(e).toString("utf8")||"{}")},text:qs,binary:Ds};function qs(e){return Buffer.from(e).toString("utf8")}async function Ds(e,t,s){return await Gt.from(e,null,t).getJsonData(Ct.agent(s))}async function Es(e,t){if(!e?.data)return null;const s=e.data,n=e.headers["content-type"],r=n.split(";")[0];let a=Object.keys(Os).find((e=>Os[e].includes(r)));a||(a=Object.keys(Os).find((e=>Os[e].some((e=>r.startsWith(e))))));const i=Ms[a];return i?i(s,n,t.id):(e=>!!e&&_e.some((t=>e.startsWith(t))))(n)||(e=>{if("string"==typeof e)return!1;try{const t=xe(e);return!!t&&o(t,t.byteLength)}catch{return!1}})(s)?Ds(s,n,t.id):qs(s)}var Ns=Object.defineProperty,$s=(e,t,s)=>((e,t,s)=>t in e?Ns(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const js=Je("AccessTokenManager");let Us;et.on("SRE:Booted",(()=>{Us=at.getManagedVaultConnector("oauth")}));class Bs{constructor(e,t,s,n,o,r,a,i,c,l){$s(this,"clientId"),$s(this,"clientSecret"),$s(this,"primaryToken"),$s(this,"secondaryToken"),$s(this,"tokenUrl"),$s(this,"expires_in"),$s(this,"data"),$s(this,"keyId"),$s(this,"logger"),$s(this,"agent"),this.clientId=e,this.clientSecret=t,this.primaryToken=r,this.secondaryToken=s,this.tokenUrl=n,this.expires_in=o,this.data=a,this.keyId=i,this.logger=c,this.agent=l}async getAccessToken(){try{const e=(new Date).getTime();if(!this.expires_in||e>=Number(this.expires_in)){if(!this.secondaryToken)throw this.logger.debug("Refresh token is missing. Please re authenticate"),js.log("Refresh token is missing. Please re authenticate..."),new Error("Reauthentication required");return this.logger.debug("Access token is expired or missing. Refreshing access token..."),js.log("Access token is expired or missing. Refreshing access token..."),await this.refreshAccessToken()}return js.log("Access token is still valid"),this.logger.debug("Access token is still valid."),this.primaryToken}catch(e){throw js.error("Error fetching access token:",e),this.logger.debug("Error fetching access token"),e}}async refreshAccessToken(){try{const e=await r.post(this.tokenUrl,new URLSearchParams({client_id:this.clientId,client_secret:this.clientSecret,refresh_token:this.secondaryToken,grant_type:"refresh_token"}).toString(),{headers:{"Content-Type":"application/x-www-form-urlencoded"}}),t=e.data.access_token;js.log("Access token refreshed successfully."),this.logger.debug("Access token refreshed successfully.");const s=1e3*e.data.expires_in,n=(new Date).getTime()+s;this.data.primary=t,this.data.expires_in=n?.toString();const o=await Us.user(Ct.agent(this.agent.id)).set(this.keyId,JSON.stringify(this.data));return o&&200===o.status?(js.log("Access token value is updated successfully."),this.logger.debug("Access token value is updated successfully.")):(js.log("Warning: new access token value is not updated."),this.logger.debug("Warning: new access token value is not updated.")),t}catch(e){throw js.error("Failed to refresh access token:",e),this.logger.debug(`Failed to refresh access token: ${e}`),new Error("Failed to refresh access token.")}}}const Gs=Je("OAuth.helper");let Vs;et.on("SRE:Booted",(()=>{Vs=at.getManagedVaultConnector("oauth")}));const Js=async(e,t,s,n,o={},a)=>{let i={};const{responseData:l,data:u,keyId:p}=await(async(e,t)=>{let s=null;try{s=`OAUTH_${t.componentId??t.id}_TOKENS`;try{const n=await Vs.user(Ct.agent(e.id)).get(s),o="object"==typeof n?n:JSON.parse(n);if(!o)throw new Error("Failed to retrieve OAuth tokens from vault. Please authenticate ...");const r=o.primary,a=o.secondary,i=o.type;if("OAuth2 Client Credentials"!==t.data.oauthService&&!r)throw new Error("Retrieved OAuth tokens do not exist, invalid OR incomplete. Please authenticate ...");const c={primaryToken:r,secondaryToken:a,type:i};return"oauth"===i?("consumerKey"in o&&(c.consumerKey=o.consumerKey),"consumerSecret"in o&&(c.consumerSecret=o.consumerSecret),c.team=o.team):"oauth2"===i&&(c.tokenURL=o.tokenURL,"clientID"in o&&(c.clientID=o.clientID),"clientSecret"in o&&(c.clientSecret=o.clientSecret),c.expiresIn=o.expires_in??0,c.team=o.team),{responseData:c,data:o,keyId:s}}catch(e){throw new Error(`Failed to parse retrieved tokens: ${e}`)}}catch(e){throw Gs.error("Error retrieving OAuth tokens:",e),e}})(e,t);try{let m=JSON.stringify({consumerKey:t.data.consumerKey,consumerSecret:t.data.consumerSecret,clientID:t.data.clientID,clientSecret:t.data.clientSecret,tokenURL:t.data.tokenURL});m=await ts(m).parseTeamKeysAsync(l.team||e.teamId).asyncResult;const d=JSON.parse(m);if("OAuth2 Client Credentials"===d.oauthService){const s=await async function(e,t,s,n,o,a){const i=e=>{throw t.debug(e),new Error(e)};try{e=e[s]||{};const{clientID:c,clientSecret:l,tokenURL:u}=o.data,p=(new Date).getTime();if(!n.expiresIn||p>=Number(n.expiresIn)){(!c||!l||!u)&&i("Missing client_id, client_secret OR token_url");const n=new URLSearchParams({grant_type:"client_credentials",client_id:c,client_secret:l}),m=await r.post(u,n.toString(),{headers:{"Content-Type":"application/x-www-form-urlencoded"}});Gs.log("Access token refreshed successfully."),t.debug("Access token refreshed successfully.");const d=m.data.access_token,h=p+1e3*m.data.expires_in;return 0===Object.keys(e).length&&(e={primary:"",secondary:"",type:"oauth2",tokenURL:u,expires_in:"",team:a.teamId,oauth_info:{oauth_keys_prefix:`OAUTH_${o.componentId??o.id}`,service:"oauth2_client_credentials",tokenURL:u,clientID:c,clientSecret:l}}),e.primary=d,e.expires_in=h.toString(),await Vs.user(Ct.agent(a.id)).set(s,e),d}return Gs.log("Access token value is still valid."),t.debug("Access token value is still valid."),n.primaryToken}catch(e){i(`Failed to refresh access token: ${e}`)}}(u,n,p,l,t,e);i.Authorization=`Bearer ${s}`}else if("oauth"===l.type){const e=((e,t,s,n={})=>{const o=new W({consumer:{key:s.consumerKey,secret:s.consumerSecret},signature_method:"HMAC-SHA1",hash_function:(e,t)=>c.createHmac("sha1",t).update(e).digest("base64")}),r={url:e,method:t,...n},a=o.authorize(r,{key:s.token,secret:s.tokenSecret});return o.toHeader(a)})(a,s.method,{consumerKey:d.consumerKey,consumerSecret:d.consumerSecret,token:l.primaryToken,tokenSecret:l.secondaryToken},o);i={...s.headers,...e},n.debug("OAuth1 access token check success.")}else if("oauth2"===l.type){const t=await new Bs(d.clientID,d.clientSecret,l.secondaryToken,d.tokenURL,l.expiresIn,l.primaryToken,u,p,n,e).getAccessToken();i.Authorization=`Bearer ${t}`}return i}catch(e){throw n.error(`Access token check failed: ${e}`),e}};var Fs=Object.defineProperty,zs=(e,t,s)=>((e,t,s)=>t in e?Fs(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var Ks=Object.defineProperty,Hs=(e,t,s)=>((e,t,s)=>t in e?Ks(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var Ws=Object.defineProperty,Qs=(e,t,s)=>((e,t,s)=>t in e?Ws(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Ys=Je("SRE"),Xs=at,Zs=class e{constructor(){Qs(this,"started",!1),Qs(this,"initialized",!1),this.started=!0}static get Instance(){return e.instance||(e.instance=new e),e.instance}init(t){if(this.initialized)throw new Error("SRE already initialized");this.initialized=!0;const s=this.autoConf(t);for(let e in s)for(let t of s[e])Xs.init(e,t.Connector,t.Id,t.Settings,t.Default);return et.emit("SRE:Initialized"),e.Instance}autoConf(e){const t={};for(let s in e){t[s]=[],"object"==typeof e[s]&&(e[s]=[e[s]]);let n=!1;for(let o of e[s])o.Connector?(o.Default&&(n&&console.warn(`Entry ${s} has more than one default Connector ... only the first one will be used`),n=!0),t[s].push(o)):console.warn(`Missing Connector Name in ${s} entry ... it will be ignored`);!n&&t[s].length>0&&(t[s][0].Default=!0)}return t}ready(){return this.initialized}async _stop(){Ys.info("Shutting Down SmythRuntime ..."),Xs._stop(),e.instance=void 0,this.started=!1}};Qs(Zs,"instance");let en=Zs;const tn=Je("SecureConnector");class sn extends Ze{async start(){tn.info(`Starting ${this.name} connector ...`)}async stop(){tn.info(`Stopping ${this.name} connector ...`)}async hasAccess(e){const t=await this.getResourceACL(e.resourceId,e.candidate);if(t.checkExactAccess(e))return!0;const s=vt.clone(e).setLevel(ht.Owner);if(t.checkExactAccess(s))return!0;const n=vt.clone(e).setCandidate(Ct.public());if(t.checkExactAccess(n))return!0;const o=await at.getAccountConnector().getCandidateTeam(e.candidate),r=vt.clone(e).setCandidate(Ct.team(o));if(t.checkExactAccess(r))return!0;const a=vt.clone(r).setLevel(ht.Owner);return!!t.checkExactAccess(a)}async getAccessTicket(e,t){const s=vt.clone(t).resource(e);return{request:t,access:await this.hasAccess(s)?At.Granted:At.Denied}}static AccessControl(e,t,s){const n=s.value;return s.value=async function(...e){const[t,s]=e;if((await this.getAccessTicket(s,t)).access!==At.Granted)throw tn.error(`Access denied for ${t.candidate.id} on ${s}`),new kt("Access Denied");return n.apply(this,e)},s}}class nn extends sn{user(e){return{search:async(t,s,n)=>await this.search(e.readRequest,t,s,n),createDatasource:async(t,s)=>await this.createDatasource(e.writeRequest,t,s),deleteDatasource:async(t,s)=>{await this.deleteDatasource(e.writeRequest,t,s)},listDatasources:async t=>await this.listDatasources(e.readRequest,t),getDatasource:async(t,s)=>await this.getDatasource(e.readRequest,t,s),createNamespace:async(t,s)=>{await this.createNamespace(e.writeRequest,t,s)},deleteNamespace:async t=>{await this.deleteNamespace(e.writeRequest,t)},listNamespaces:async()=>await this.listNamespaces(e.readRequest),namespaceExists:async t=>await this.namespaceExists(e.readRequest,t),getNamespace:async t=>await this.getNamespace(e.readRequest,t)}}static constructNsName(e,t){return`${e}_${t.trim().replace(/\s/g,"_").toLowerCase()}`}static parseNsName(e){const t=e.split("_");return t.length<2?null:{teamId:t[0],name:t.slice(1).join("_")}}}var on=Object.defineProperty,rn=Object.getOwnPropertyDescriptor,an=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?rn(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&on(t,s,r),r},cn=(e,t,s)=>((e,t,s)=>t in e?on(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const ln=Je("Pinecone VectorDB");class un extends nn{constructor(e){if(super(),cn(this,"name","PineconeVectorDB"),cn(this,"id","pinecone"),cn(this,"client"),cn(this,"indexName"),cn(this,"redisCache"),cn(this,"accountConnector"),cn(this,"openaiApiKey"),cn(this,"nkvConnector"),cn(this,"isCustomStorageInstance"),!en.Instance)throw new Error("SRE not initialized");if(!e.pineconeApiKey)throw new Error("Pinecone API key is required");if(!e.indexName)throw new Error("Pinecone index name is required");this.client=new J({apiKey:e.pineconeApiKey}),ln.info("Pinecone client initialized"),ln.info("Pinecone index name:",e.indexName),this.indexName=e.indexName,this.accountConnector=at.getAccountConnector(),this.redisCache=at.getCacheConnector("Redis"),this.nkvConnector=at.getNKVConnector(),this.openaiApiKey=e.openaiApiKey||process.env.OPENAI_API_KEY,this.isCustomStorageInstance=e.isCustomStorageInstance||!1}async getResourceACL(e,t){const s=await this.accountConnector.getCandidateTeam(Ct.clone(t)),n=nn.constructNsName(s,e),o=await this.getACL(Ct.clone(t),n);return o?Rt.from(o):(new Rt).addAccess(t.role,t.id,ht.Owner)}async createNamespace(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate),o=nn.constructNsName(n,t),r=Ct.team(n);if(!await this.nkvConnector.user(r).exists(`vectorDB:${this.id}`,`namespace:${o}`)){const e={namespace:o,displayName:t,teamId:n,metadata:{...s,isOnCustomStorage:this.isCustomStorageInstance,indexName:this.indexName}};await this.nkvConnector.user(r).set(`vectorDB:${this.id}:namespaces`,o,JSON.stringify(e))}const a=(new Rt).addAccess(e.candidate.role,e.candidate.id,ht.Owner).ACL;return await this.setACL(e,o,a),new Promise((e=>e()))}async namespaceExists(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate);return await this.nkvConnector.user(Ct.team(s)).exists(`vectorDB:${this.id}:namespaces`,nn.constructNsName(s,t))}async getNamespace(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate),n=nn.constructNsName(s,t),o=await this.nkvConnector.user(Ct.team(s)).get(`vectorDB:${this.id}:namespaces`,n);return qt.create(o?.toString()).tryParse()}async listNamespaces(e){const t=await this.accountConnector.getCandidateTeam(e.candidate),s=Ct.team(t);return(await this.nkvConnector.user(s).list(`vectorDB:${this.id}:namespaces`)).map((e=>qt.create(e.data?.toString()).tryParse()))}async deleteNamespace(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate),n=Ct.team(s),o=nn.constructNsName(s,t);await this.client.Index(this.indexName).namespace(nn.constructNsName(s,t)).deleteAll().catch((e=>{if("PineconeNotFoundError"!=e?.name)throw e;ln.warn(`Namespace ${t} does not exist and was requested to be deleted`)})),await this.deleteACL(Ct.clone(e.candidate),t),await this.nkvConnector.user(n).delete("vectorDB:pinecone:namespaces",o)}async search(e,t,s,n={}){const o=await this.accountConnector.getCandidateTeam(e.candidate);let r=await this.nkvConnector.user(Ct.team(o)).get(`vectorDB:${this.id}:namespaces`,nn.constructNsName(o,t));if(!r)throw new Error("Namespace does not exist");const a=qt.create(r.toString()).tryParse();if(a.metadata?.isOnCustomStorage&&!this.isCustomStorageInstance)throw new Error("Tried to access namespace on custom storage.");if(!a.metadata?.isOnCustomStorage&&this.isCustomStorageInstance)throw new Error("Tried to access namespace that is not on custom storage.");const i=this.client.Index(this.indexName).namespace(nn.constructNsName(o,t));let c=s;return"string"==typeof s&&(c=await dn.load({openaiApiKey:this.openaiApiKey}).embedText(s)),(await i.query({topK:n?.topK||10,vector:c,includeMetadata:!0,includeValues:!0})).matches.map((e=>(e.metadata?.user&&(e.metadata.user=dn.parseMetadata(e.metadata.user)),{id:e.id,values:e.values,metadata:e.metadata})))}async insert(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);s=Array.isArray(s)?s:[s];const o=dn.load({openaiApiKey:this.openaiApiKey});if(s.some((e=>o.detectSourceType(e.source)!==o.detectSourceType(s[0].source))))throw new Error("All sources must be of the same type");const r=o.detectSourceType(s[0].source);if("unknown"===r||"url"===r)throw new Error("Invalid source type");const a=(await o.transformSource(s,r)).map((e=>({id:e.id,values:e.source,metadata:e.metadata})));await this.client.Index(this.indexName).namespace(nn.constructNsName(n,t)).upsert(a);const i=e.candidate;if(await dn.load({openaiApiKey:this.openaiApiKey}).isNewNs(Ct.clone(i),t)){let s=(new Rt).addAccess(i.role,i.id,ht.Owner).ACL;await this.setACL(e,t,s)}return a.map((e=>e.id))}async delete(e,t,s){const n=Array.isArray(s)?s:[s],o=await this.accountConnector.getCandidateTeam(e.candidate);await this.client.Index(this.indexName).namespace(nn.constructNsName(o,t)).deleteMany(n)}async createDatasource(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate),o=nn.constructNsName(n,t),r=await dn.chunkText(s.text,{chunkSize:s.chunkSize,chunkOverlap:s.chunkOverlap}),a=Array.from({length:r.length},((e,t)=>c.randomUUID())),i=r.map(((e,t)=>({id:a[t],source:e,metadata:{user:dn.stringifyMetadata(s.metadata)}})));if(!await this.nkvConnector.user(Ct.team(n)).exists(`vectorDB:${this.id}:namespaces`,nn.constructNsName(n,t)))throw new Error("Namespace does not exist");const l=await this.insert(e,t,i),u=s.id||c.randomUUID(),p={namespaceId:o,teamId:n,name:s.label||"Untitled",metadata:dn.stringifyMetadata(s.metadata),text:s.text,embeddingIds:l};return await this.nkvConnector.user(Ct.team(n)).set(`vectorDB:${this.id}:namespaces:${o}:datasources`,u,JSON.stringify(p)),{id:u,vectorIds:l}}async deleteDatasource(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate),o=nn.constructNsName(n,t);let r=qt.create((await this.nkvConnector.user(Ct.team(n)).get(`vectorDB:${this.id}:namespaces:${o}:datasources`,s))?.toString()).tryParse();if(!r||"object"!=typeof r)throw new Error(`Data source not found with id: ${s}`);if(!await this.nkvConnector.user(Ct.team(n)).exists(`vectorDB:${this.id}:namespaces`,nn.constructNsName(n,t)))throw new Error("Namespace does not exist");await this.delete(e,t,r.embeddingIds||[]),await this.nkvConnector.user(Ct.team(n)).delete(`vectorDB:${this.id}:namespaces:${o}:datasources`,s)}async listDatasources(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate),n=nn.constructNsName(s,t);return(await this.nkvConnector.user(Ct.team(s)).list(`vectorDB:${this.id}:namespaces:${n}:datasources`)).map((e=>({id:e.key,data:qt.create(e.data?.toString()).tryParse()})))}async getDatasource(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate),o=nn.constructNsName(n,t);return qt.create((await this.nkvConnector.user(Ct.team(n)).get(`vectorDB:${this.id}:namespaces:${o}:datasources`,s))?.toString()).tryParse()}async setACL(e,t,s){await this.redisCache.user(Ct.clone(e.candidate)).set(`vectorDB:pinecone:namespace:${t}:acl`,JSON.stringify(s))}async getACL(e,t){let s=await this.redisCache.user(e).get(`vectorDB:pinecone:namespace:${t}:acl`);return qt.create(s?.toString?.()).tryParse()}async deleteACL(e,t){this.redisCache.user(Ct.clone(e)).delete(`vectorDB:pinecone:namespace:${t}:acl`)}}an([sn.AccessControl],un.prototype,"createNamespace",1),an([sn.AccessControl],un.prototype,"namespaceExists",1),an([sn.AccessControl],un.prototype,"getNamespace",1),an([sn.AccessControl],un.prototype,"listNamespaces",1),an([sn.AccessControl],un.prototype,"deleteNamespace",1),an([sn.AccessControl],un.prototype,"search",1),an([sn.AccessControl],un.prototype,"insert",1),an([sn.AccessControl],un.prototype,"delete",1),an([sn.AccessControl],un.prototype,"createDatasource",1),an([sn.AccessControl],un.prototype,"deleteDatasource",1),an([sn.AccessControl],un.prototype,"listDatasources",1),an([sn.AccessControl],un.prototype,"getDatasource",1);var pn=Object.defineProperty,mn=(e,t,s)=>((e,t,s)=>t in e?pn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class dn{constructor(e,t={}){mn(this,"_vectorDBconnector"),mn(this,"embeddingsProvider"),mn(this,"_vectorDimention"),mn(this,"_vaultConnector"),mn(this,"cusStorageKeyName"),mn(this,"isCustomStorageInstance",!1),mn(this,"openaiApiKey"),this._vectorDBconnector=at.getVectorDBConnector(e),this.openaiApiKey=t.openaiApiKey||process.env.OPENAI_API_KEY,this.embeddingsProvider=new F({apiKey:this.openaiApiKey}),this._vectorDimention&&!isNaN(this._vectorDimention)&&(this.embeddingsProvider.dimensions=this._vectorDimention),this._vaultConnector=at.getVaultConnector(),this.cusStorageKeyName=`vectorDB:customStorage:${this._vectorDBconnector.id}`}static load(e={}){const t=new dn(e.connectorName,{openaiApiKey:e.openaiApiKey});return e.vectorDimention&&t.setVectorDimention(e.vectorDimention),t}setVectorDimention(e){this._vectorDimention=e}static async chunkText(e,{chunkSize:t=4e3,chunkOverlap:s=500}={}){return await new z({chunkSize:t,chunkOverlap:s}).splitText(e)}async isNewNs(e,t){return!await this._vectorDBconnector.user(e).namespaceExists(t)}async embedText(e){return this.embeddingsProvider.embedQuery(e)}async embedTexts(e){return this.embeddingsProvider.embedDocuments(e)}static stringifyMetadata(e){try{return f(JSON.stringify(e))}catch{return e}}static parseMetadata(e){try{return JSON.parse(e)}catch{return e}}async getTeamConnector(e){const t=await this.getCustomStorageConfig(e).catch((e=>null));return t?this._vectorDBconnector.instance({...t,isCustomStorageInstance:!0}):null}async getCustomStorageConfig(e){const t=await this._vaultConnector.user(Ct.team(e)).get(this.cusStorageKeyName);return t?qt.create(t).tryParse():(this._vectorDBconnector,null)}async isNamespaceOnCustomStorage(e,t){return(await this._vectorDBconnector.user(Ct.team(e)).getNamespace(t)).metadata?.isOnCustomStorage??!1}detectSourceType(e){return"string"==typeof e?Se(e)?"url":"text":Array.isArray(e)&&e.every((e=>"number"==typeof e))?"vector":"unknown"}transformSource(e,t){switch(t){case"text":{const t=e.map((e=>e.source));return dn.load({openaiApiKey:this.openaiApiKey}).embedTexts(t).then((s=>e.map(((e,n)=>({...e,source:s[n],metadata:{...e.metadata,text:t[n]}})))))}case"vector":return e}}}var hn=Object.defineProperty,gn=(e,t,s)=>((e,t,s)=>t in e?hn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class yn{static async getInstance(e){throw new Error("Method not implemented.")}}var fn=Object.defineProperty,bn=(e,t,s)=>((e,t,s)=>t in e?fn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class wn extends Kt{constructor(){super(),bn(this,"MAX_ALLOWED_URLS_PER_INPUT",20),bn(this,"configSchema",m.object({namespace:m.string().max(50).allow(""),id:m.string().custom(Pe,"id custom validation").allow("").label("source identifier"),name:m.string().max(50).allow("").label("label"),metadata:m.string().allow(null).allow("").max(1e4).label("metadata")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=s.teamId;s.id;let o=s.agentRuntime?.debug?"== Source Indexer Log ==\n":null;try{const s={...t.data,name:ts(t.data.name).parse(e).result,id:ts(t.data.id).parse(e).result,metadata:ts(t.data.metadata).parse(e).result},r={};for(let e of t.outputs)e.default||(r[e.name]=e?.description?`<${e?.description}>`:"");const a=s.namespace.split("_").slice(1).join("_")||s.namespace;o+=`[Selected namespace id] \n${a}\n\n`;const i=await dn.load().getTeamConnector(n)||at.getVectorDBConnector();if(!await i.user(Ct.team(n)).namespaceExists(a)){o+=`[Created namespace] \n${await i.user(Ct.team(n)).createNamespace(a)}\n\n`}const c=this.validateInput(e);if(c.error)throw new Error(`Input validation error: ${c.error}\n EXITING...`);const l=s.id,u=/^[a-zA-Z0-9\-\_\.]+$/;if(!l)throw new Error("Id is required");if(!u.test(l))throw new Error("Invalid id. Accepted characters: 'a-z', 'A-Z', '0-9', '-', '_', '.'");let p=null;//! DISABLE URL ARRAY PARSING FOR NOW UNTIL WE HAVE A GOOD WAY TO HANDLE BULK INDEXING
const m=wn.genDsId(l,n,a);if(Se(c.value.Source))throw o+="STEP: Parsing input as url\n\n",new Error("URLs are not supported yet");return o+="STEP: Parsing input as text\n\n",p=await this.addDSFromText({teamId:n,namespaceId:a,text:c.value.Source,name:s.name||"Untitled",metadata:s.metadata||null,sourceId:m}),o+="Created datasource successfully\n\n",{_debug:o,Success:{result:p?.data?.dataSource||!0,id:s.id}}}catch(e){return o+=`Error: ${e?.message||"Couldn't index data source"}\n\n`,{_debug:o,_error:e?.message||"Couldn't index data source"}}}validateInput(e){return m.object({Source:m.any().required()}).unknown(!0).validate(e)}async addDSFromText({teamId:e,sourceId:t,namespaceId:s,text:n,name:o,metadata:r}){let a=dn.load(),i=at.getVectorDBConnector();if(await a.isNamespaceOnCustomStorage(e,s)){const t=await a.getTeamConnector(e);t&&(i=t)}return await i.user(Ct.team(e)).createDatasource(s,{text:n,metadata:r,id:t,label:o})}static genDsId(e,t,s){return`${t}::${s}::${e}`}async addDSFromUrl({teamId:e,namespaceId:t,dsId:s,type:n,url:o,name:r,metadata:a}){throw new Error("URLs are not supported yet")}}var An=Object.defineProperty,kn=(e,t,s)=>((e,t,s)=>t in e?An(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var _n=Object.defineProperty,xn=(e,t,s)=>((e,t,s)=>t in e?_n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var vn=Object.defineProperty,Sn=(e,t,s)=>((e,t,s)=>t in e?vn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);function In(e){return(t,s)=>{const n=Number(t),o=s.schema._flags.label||s.state.path[s.state.path.length-1];if(isNaN(n))throw new Error(`The value for '${o}' must be a number`);if(void 0!==e.min&&void 0!==e.max){if(n<e.min||n>e.max)throw new Error(`The value for '${o}' must be from ${e.min} to ${e.max}`)}else if(void 0!==e.min){if(n<e.min)throw new Error(`The value for '${o}' must be greater or equal to ${e.min}`)}else if(void 0!==e.max&&n>e.max)throw new Error(`The value for '${o}' must be less or equal to ${e.max}`);return t}}var Cn=Object.defineProperty,Tn=(e,t,s)=>((e,t,s)=>t in e?Cn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);function Ln(e){return(t,s)=>{const n=Number(t),o=s.schema._flags.label||s.state.path[s.state.path.length-1];if(isNaN(n))throw new Error(`The value for '${o}' must be a number`);if(void 0!==e.min&&void 0!==e.max){if(n<e.min||n>e.max)throw new Error(`The value for '${o}' must be from ${e.min} to ${e.max}`)}else if(void 0!==e.min){if(n<e.min)throw new Error(`The value for '${o}' must be greater or equal to ${e.min}`)}else if(void 0!==e.max&&n>e.max)throw new Error(`The value for '${o}' must be less or equal to ${e.max}`);return t}}var Pn=Object.defineProperty,Rn=(e,t,s)=>((e,t,s)=>t in e?Pn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class On{constructor(e){this.agentData=e,Rn(this,"agent"),Rn(this,"_loadPromise"),this.initAgent(e)}async initAgent(e){let t,s;if("object"==typeof e)t=e,t.components&&t.connections&&(t={data:t,version:"1.0"}),s=t.data.id||"tmp-"+ne();else{const n=/^{.*}$/g,o=e.match(n)?.[0],r=/^[a-zA-Z0-9\-]+$/g;s=e.match(r)?.[0],s&&(t=await at.getAgentDataConnector().getAgentData(s,"latest")),!t&&o&&(t=JSON.parse(o),s=t.id||"tmp-"+ne(),t.components&&t.connections&&(t={data:t,version:"1.0"}))}const n=new dt(s);this.agent=new Fo(s,t,n)}async ready(){return this._loadPromise?this._loadPromise:this._loadPromise=new Promise((e=>{let t=1e4;const s=setInterval((()=>{this.agent&&(clearInterval(s),e(!0)),t-=100,t<=0&&(clearInterval(s),e(!1))}),100)}))}static load(e){return new On(e)}async run(e){if(await this.ready(),!this.agent)throw new Error("Failed to load agent");let t=this.parseReqConfig(e);this.agent.setRequest(t);const s=t.path.match(/(^\/v[0-9]+\.[0-9]+?)?(\/api\/(.+)?)/);if(!s||!s[2])return{status:404,data:{error:"Endpoint not found"}};const n=s[2],o="GET"==t.method?t.query:t.body;return{data:await this.agent.process(n,o).catch((e=>({error:e.message})))}}reset(){this.initAgent(this.agentData)}parseReqConfig(e){return e instanceof ee?e:Array.isArray(e)?this.parseCLI(e):new ee(e)}parseCLI(e){const t=at.getCLIConnector().parse(e,["endpoint","post","get","put","delete","patch","head","options","headers","session"]),s=["get","post","put","delete","patch","head","options"].find((e=>t[e])),o=new ee;switch(o.method=s?.toUpperCase()||"GET",o.body={},o.query={},s){case"get":case"delete":case"head":case"options":o.query=t[s];break;case"post":case"put":case"patch":o.body=t[s]}o.path=`/api/${t.endpoint}`,o.params=t.endpoint?.split("/"),o.headers=t.headers||{};for(let e in o.headers)o.headers[e.toLowerCase()]=o.headers[e],delete o.headers[e];if(o.sessionID=t.session||ne(),o.files=[],o.body)for(let e in o.body){let t=o.body[e];const s=T.join(process.cwd(),t),r=T.basename(s);if(L.existsSync(s))try{const t=L.readFileSync(s),a=r.split(".").pop(),i={fieldname:e,originalname:r,buffer:t,mimetype:g.getType(a)||"application/octet-stream"};delete o.body[e],o.files.push(i),n.fileTypeFromBuffer(t).then((e=>{e&&(i.mimetype=e.mime)}))}catch(e){console.warn("Coud not read file",s,e.message)}}return o}async post(e,t,s){return this.run({method:"POST",path:e,body:t||{},headers:s})}async get(e,t,s){return this.run({method:"GET",path:e,query:t,headers:s})}async readDebugState(e,t){if(await this.ready(),!this.agent)throw new Error("Failed to load agent");let s=this.parseReqConfig(t);return this.agent.setRequest(s),this.agent.agentRuntime.readState(e,!0)}}var Mn=Object.defineProperty,qn=(e,t,s)=>((e,t,s)=>t in e?Mn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Dn{constructor(e,t="",s){this.llmInference=e,qn(this,"_systemPrompt",""),qn(this,"_llmContextStore"),qn(this,"contextLength"),qn(this,"_messages",[]),this._systemPrompt=t,s&&(this._llmContextStore=s,this._llmContextStore.load().then((e=>{this._messages=e})))}get systemPrompt(){return this._systemPrompt}set systemPrompt(e){this._systemPrompt=e}get messages(){return this._messages}get model(){return this.llmInference.model}push(...e){this._messages.push(...e),this._llmContextStore&&this._llmContextStore.save(this._messages)}addUserMessage(e,t){this.push({role:"user",content:e,__smyth_data__:{message_id:t}})}addAssistantMessage(e,t){this.push({role:"assistant",content:e,__smyth_data__:{message_id:t}})}addToolMessage(e,t,s){this.push({messageBlock:e,toolsData:t,__smyth_data__:{message_id:s}})}async getContextWindow(e,t=256){let s;s=gs.isStandardLLM(this.model)?gs.getMaxContextTokens(this.model,!0):(await ws.getInstance(this.model)).getMaxContextTokens(this.model);let n=Math.min(e,s);n+t>s&&(n-=n+t-s);let o=[];const r={role:"system",content:this._systemPrompt};let a=v([r],"gpt-4o").length;for(let e=this._messages.length-1;e>=0;e--){let t;t=this._messages[e]?.messageBlock&&this._messages[e]?.toolsData?this.llmInference.connector.transformToolMessageBlocks({messageBlock:this._messages[e]?.messageBlock,toolsData:this._messages[e]?.toolsData}).reverse():[this._messages[e]];for(let e of t){if("system"===e.role)continue;if(!e.content){o.unshift(e);continue}delete e.__smyth_data__;const t="string"==typeof e.content?e.content:JSON.stringify(e.content),s=S(t);if(a+=s.length,a>n){if("string"!=typeof e.content)break;const t=(a-n)/s.length;e.content=e.content.slice(0,Math.floor(e.content.length*(1-t))-200),e.content+="...\n\nWARNING : The context window has been truncated to fit the maximum token limit.",a-=s.length,a+=v([e],"gpt-4").length}o.unshift(e)}}return o.unshift(r),o}}const En=async(e,t=e)=>{if("object"!=typeof e||null===e)return e;if(e.$ref){const s=e.$ref,n=s.replace(/^#\//,"").split("/");let o=t;for(const e of n){if(void 0===o[e])throw new Error(`Could not resolve $ref: ${s}`);o=o[e]}return En(o,t)}if(Array.isArray(e))return Promise.all(e.map((e=>En(e,t))));const s={};for(const n of Object.keys(e))s[n]=await En(e[n],t);return s};class Nn{static mapReqMethods(e){const t=new Map;for(const s in e){const n=e[s];for(const e in n){const s=n[e];ue.includes(e.toUpperCase())&&t.set(s?.operationId,e)}}return t}static mapEndpoints(e){const t=new Map;for(const s in e){const n=e[s];for(const e in n){const o=n[e];ue.includes(e.toUpperCase())&&t.set(o?.operationId,s)}}return t}static async yamlToJson(e){const t=K.load(e);return await En(t)}static async getJson(e){try{let t=e;return"string"==typeof e&&(t=JSON.parse(e)),await En(t)}catch{try{return await Nn.yamlToJson(e)}catch{throw new Error("Invalid OpenAPI specification or JSON data format")}}}static async getJsonFromUrl(e){const t=(await r.get(e)).data;return Nn.getJson(t)}static isValidOpenAPI(e){return e?.openapi&&e?.paths&&e?.servers}}var $n=Object.defineProperty,jn=(e,t,s)=>((e,t,s)=>t in e?$n(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Un=Je("ConversationHelper");class Bn extends u{constructor(e,t,s){super(),this._model=e,this._specSource=t,this._settings=s,jn(this,"_agentId",""),jn(this,"_systemPrompt"),jn(this,"userDefinedSystemPrompt",""),jn(this,"toolChoice","auto"),jn(this,"assistantName"),jn(this,"_reqMethods"),jn(this,"_toolsConfig"),jn(this,"_endpoints"),jn(this,"_baseUrl"),jn(this,"_status",""),jn(this,"_currentWaitPromise"),jn(this,"_llmContextStore"),jn(this,"_context"),jn(this,"_maxContextSize",16384),jn(this,"_maxOutputTokens",1024),jn(this,"_lastError"),jn(this,"_spec"),jn(this,"_customToolsDeclarations",[]),jn(this,"_customToolsHandlers",{}),jn(this,"stop",!1),this.on("error",(e=>{this._lastError=e,Un.warn("Conversation Error: ",e?.message)})),s?.maxContextSize&&(this._maxContextSize=s.maxContextSize),s?.maxOutputTokens&&(this._maxOutputTokens=s.maxOutputTokens),s?.systemPrompt&&(this.userDefinedSystemPrompt=s.systemPrompt),s?.toolChoice&&(this.toolChoice=s.toolChoice),t?this.loadSpecFromSource(t).then((e=>{if(!e)throw this._status="error",this.emit("error","Unable to parse OpenAPI specifications"),new Error("Invalid OpenAPI specification data format");this._spec=e,this.updateModel(this._model),this._status="ready"})).catch((e=>{this._status="error",this.emit("error",e)})):(this.updateModel(this._model),this._status="ready")}get systemPrompt(){return this._systemPrompt}set systemPrompt(e){this._systemPrompt=e,this._context&&(this._context.systemPrompt=e)}get context(){return this._context}set spec(e){this.ready.then((()=>{this._status="",this.loadSpecFromSource(e).then((e=>{if(!e)throw this._status="error",this.emit("error","Invalid OpenAPI specification data format"),new Error("Invalid OpenAPI specification data format");this._spec=e,this.updateModel(this._model),this._status="ready"}))}))}set model(e){this.ready.then((()=>{this._status="",this.updateModel(e),this._status="ready"}))}get model(){return this._model}get ready(){return this._currentWaitPromise||(this._currentWaitPromise=new Promise(((e,t)=>{if(this._status)return e(this._status);let s=0;const n=setInterval((()=>this._status?(clearInterval(n),e(this._status)):(s+=100,s>=3e4?(clearInterval(n),t("Timeout: Failed to prepare data")):void 0)),100)}))),this._currentWaitPromise}async prompt(e,t={}){if(this.stop)return;await this.ready;const s=this._reqMethods,n=this._toolsConfig,o=this._endpoints,r=this._baseUrl,a="msg_"+ne();Un.debug("Request to LLM with the given model, messages and functions properties.",{model:this.model,message:e,toolsConfig:n});const i=await _s.getInstance(this.model);e&&this._context.addUserMessage(e,a);const c=await this._context.getContextWindow(this._maxContextSize,this._maxOutputTokens),{data:l}=await i.toolRequest({model:this.model,messages:c,toolsConfig:this._settings?.toolsStrategy?this._settings.toolsStrategy(n):n,maxTokens:this._maxOutputTokens},this._agentId).catch((e=>{throw new Error("[LLM Request Error]\n"+JSON.stringify({code:e?.name||"LLMRequestFailed",message:e?.message||"Something went wrong while calling LLM."}))}));if(l?.useTool){Un.debug({type:"ToolsData",message:"Tool(s) is available for use.",toolsData:l?.toolsData});const e=[];for(const n of l?.toolsData){const a=o?.get(n?.name)||n?.name,i=Dt(n?.arguments).tryParse();let c="string"==typeof n?.arguments?i||{}:n?.arguments;if(c?.error)throw new Error("[Tool] Arguments Parsing Error\n"+JSON.stringify({message:c?.error}));const l={type:n?.type,method:s?.get(n?.name),endpoint:a,args:c,baseUrl:r,headers:t};Un.debug({type:"UseTool",message:"As LLM returned a tool to use, so use it with the provided arguments.",plugin_url:{baseUrl:r,endpoint:a,args:c},arguments:c}),this.emit("beforeToolCall",{tool:n,args:c});let{data:u,error:p}=await this.useTool(l);p&&(this.emit("toolCallError",l,p),u="object"==typeof p&&null!==typeof p?JSON.stringify(p):p),u="object"==typeof u&&null!==typeof u?JSON.stringify(u):u,Un.debug({type:"ToolResult",message:"Result from the tool",response:u}),this.emit("afterToolCall",l,u),e.push({...n,result:u})}return this._context.addToolMessage(l?.message,e,a),this.prompt(null,t)}this._context.addAssistantMessage(l?.message?.content,a);let u=Dt(l?.content).tryParse();return Un.debug({type:"FinalResult",message:"Here is the final result after processing all the tools and LLM response.",response:u}),u}async streamPrompt(e,t={},s=4){if(this.stop)return;await this.ready;let n="";const o=this._reqMethods,r=this._toolsConfig,a=this._endpoints,i=this._baseUrl,c="msg_"+ne(),l=await _s.getInstance(this.model);e&&this._context.addUserMessage(e,c);const u=await this._context.getContextWindow(this._maxContextSize,this._maxOutputTokens),p=await l.streamRequest({model:this.model,messages:u,toolsConfig:this._settings?.toolsStrategy?this._settings.toolsStrategy(r):r,maxTokens:this._maxOutputTokens,cache:this._settings?.experimentalCache},this._agentId).catch((e=>{Un.error("Error on streamRequest: ",e)}));if(!p||p.error)throw new Error("[LLM Request Error]");e&&this.emit("start"),p.on("data",(e=>{this.emit("data",e)})),p.on("content",(e=>{n+=e,this.emit("content",e)}));const m=await new Promise(((e,r)=>{let l=!1,u=!1;p.on("error",(e=>{u=!0,r(e)})),p.on("toolsData",(async u=>{l=!0;let p={role:"assistant",content:n,tool_calls:[]};p.tool_calls=u.map((e=>({id:e.id,type:e.type,function:{name:e.name,arguments:e.arguments}}))),this.emit("toolInfo",u);const m=u.map((e=>async()=>{const s=a?.get(e?.name)||e?.name;let n="string"==typeof e?.arguments?Dt(e?.arguments).tryParse()||{}:e?.arguments;if(n?.error)throw new Error("[Tool] Arguments Parsing Error\n"+JSON.stringify({message:n?.error}));this.emit("beforeToolCall",{tool:e,args:n});const r={type:e?.type,method:o?.get(e?.name),endpoint:s,args:n,baseUrl:i,headers:t};let{data:c,error:l}=await this.useTool(r);return l&&(c="object"==typeof l&&null!==typeof l?JSON.stringify(l):l),c="object"==typeof c&&null!==typeof c?JSON.stringify(c):c,this.emit("afterToolCall",{tool:e,args:n},c),{...e,result:c}})),d=await oe(m,s);this._context.addToolMessage(p,d,c),this.streamPrompt(null,t,s).then(e).catch(r)})),p.on("end",(async(t,s)=>{s&&this.emit("usage",s),!u&&(l||(this._context.addAssistantMessage(n,c),e("")))}))})).catch((e=>(Un.error("Error in toolsPromise: ",e),this.emit("error",e),"")));n+=m;let d=Dt(n).tryParse();return e&&this.emit("end"),d}resolveToolEndpoint(e,t,s,n){let o={};if(n){const e=this._spec?.paths?.[s]?.[t.toLowerCase()]?.parameters||[];for(let t of e)"path"===t.in&&(o[t.name]=n[t.name]||"",delete n[t.name])}const r=ts(s).parse(o,Yt.singleCurly).clean().result,a=new URL(r,e);return Object.keys(n).forEach((e=>{a.searchParams.append(e,n[e])})),a.toString()}async useTool(e){const{type:t,endpoint:s,args:n,method:o,baseUrl:a,headers:i={}}=e;if("function"===t){const e=this._customToolsHandlers[s];if(e)try{return{data:await e(n),error:null}}catch(e){return{data:null,error:e?.message||"Custom tool handler failed"}}try{const e={method:o,url:this.resolveToolEndpoint(a,o,s,"get"==o?n:{}),headers:{...i}};return"get"!==o&&(Object.keys(n).length&&(e.data=n),e.headers["Content-Type"]="application/json"),Un.debug("Calling tool: ",e),e.url.includes("localhost")?{data:(await On.load(e.headers["X-AGENT-ID"]).run(e)).data,error:null}:{data:(await r.request(e)).data,error:null}}catch(e){return Un.warn("Failed to call Tool: ",a,s),Un.warn("  ====>",e),{data:null,error:e?.response?.data||e?.message}}}return{data:null,error:`'${t}' tool type not supported at the moment`}}async addTool(e){const t=Object.values(e.arguments).map((e=>e.required?e.name:null)).filter((e=>null!==e)),s={};for(let t in e.arguments)s[t]={type:typeof e.arguments[t],description:e.arguments[t].description};const n={name:e.name,description:e.description,properties:s,requiredFields:t};this._customToolsDeclarations.push(n),this._customToolsHandlers[e.name]=e.handler;const o=(await _s.getInstance(this.model)).connector.formatToolsConfig({type:"function",toolDefinitions:[n],toolChoice:this.toolChoice});this._toolsConfig?this._toolsConfig.tools.push(...o?.tools):this._toolsConfig=o}async updateModel(e){try{if(this._model=e,this._spec){this._reqMethods=Nn.mapReqMethods(this._spec?.paths),this._endpoints=Nn.mapEndpoints(this._spec?.paths),this._baseUrl=this._spec?.servers?.[0].url;const e=this.getFunctionDeclarations(this._spec);e.push(...this._customToolsDeclarations);const t=await _s.getInstance(this._model);this._toolsConfig=t.connector.formatToolsConfig({type:"function",toolDefinitions:e,toolChoice:this.toolChoice});let s=[];this._context&&(s=this._context.messages),this._context=new Dn(t,this.systemPrompt,this._llmContextStore)}else this._toolsConfig=null,this._reqMethods=null,this._endpoints=null,this._baseUrl=null}catch(e){this.emit("error",e)}}patchSpec(e){const t=e?.paths;for(const e in t){const s=t[e];for(const t in s){const n=s[t];n?.operationId||(n.operationId=e.replace(/\//g,"_").replace(/{|}/g,"").replace(/\./g,"_"))}}return e}async loadSpecFromSource(e){if("object"==typeof e)return Nn.isValidOpenAPI(e)?this.patchSpec(e):e?.behavior&&e?.components&&e?.connections?await this.loadSpecFromAgent(e):null;if("string"==typeof e){if(Se(e)){const t=await Nn.getJsonFromUrl(e);t.info?.description&&(this.systemPrompt=t.info.description),this.userDefinedSystemPrompt&&(this.systemPrompt=this.userDefinedSystemPrompt),t.info?.title&&(this.assistantName=t.info.title);const s=new URL(e),n=s.origin;return t?.servers||(t.servers=[{url:n}]),0==t.servers?.length&&(t.servers=[{url:n}]),this.assistantName&&(this.systemPrompt=`Assistant Name : ${this.assistantName}\n\n${this.systemPrompt}`),this._agentId=s.hostname,this.patchSpec(t)}const t=at.getAgentDataConnector(),s=e,n=await t.getAgentData(s).catch((e=>null));return n?(this._agentId=s,await this.loadSpecFromAgent(n)):null}}async loadSpecFromAgent(e){const t=at.getAgentDataConnector();this.systemPrompt=e?.data?.behavior||this.systemPrompt,this.userDefinedSystemPrompt&&(this.systemPrompt=this.userDefinedSystemPrompt),this.assistantName=e?.data?.name||e?.data?.templateInfo?.name||this.assistantName,this.assistantName&&(this.systemPrompt=`Assistant Name : ${this.assistantName}\n\n${this.systemPrompt}`);const s=await t.getOpenAPIJSON(e,"http://localhost/","latest",!0).catch((e=>null));return this.patchSpec(s)}getFunctionDeclarations(e){const t=e?.paths,s=Nn.mapReqMethods(t);let n=[];for(const e in t){const o=t[e];for(const e in o){const t=o[e];let r={},a=[];if("get"===(s.get(t?.operationId)||"get").toLowerCase()){const e=t?.parameters||[];for(const t of e)r[t.name]={...t.schema,description:t.description},!0===t.required&&a.push(t?.name||"")}else{r=t?.requestBody?.content?.["application/json"]?.schema?.properties,a=t?.requestBody?.content?.["application/json"]?.schema?.required;for(const e in r)delete r[e]?.required}r||(r={}),a||(a=[]);const i={name:t?.operationId,description:t?.description||t?.summary||"",properties:r,requiredFields:a};n.push(i)}}return n}}var Gn=Object.defineProperty,Vn=(e,t,s)=>((e,t,s)=>t in e?Gn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var Jn=Object.defineProperty,Fn=(e,t,s)=>((e,t,s)=>t in e?Jn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);let zn;function Kn(){return zn||(zn=at.getCacheConnector()),zn}var Hn=Object.defineProperty,Wn=(e,t,s)=>((e,t,s)=>t in e?Hn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("ForkedAgent");class Qn{constructor(e,t){this.parent=e,Wn(this,"agent");const s=function(e,t){const s=[],n=[];Yn(e,t,{},s,n);const o=s.find((e=>e.id==t));if(o&&"APIEndpoint"!==o.name){const r={id:`${t}_ENDPOINT`,name:"APIEndpoint",outputs:[{name:"headers",index:0,default:!0},{name:"body",index:1,default:!0},{name:"query",index:2,default:!0}],inputs:[],data:{endpoint:t,description:"",method:"POST"},displayName:"APIEndpoint",title:"APIEndpoint",description:""};s.push(r);const a=e.connections.filter((e=>e.targetId===t));let i=3;for(let e of a){const t=o.inputs.find((t=>t.index==e.targetIndex)),s=JSON.parse(JSON.stringify(t));r.inputs.push(s);const a={name:t.name,expression:`body.${t.name}`,optional:!1,index:i++,default:!1};r.outputs.push(a),n.push({sourceId:r.id,targetId:o.id,sourceIndex:a.index,targetIndex:t.index})}}return{components:s,connections:n}}(this.parent.data,t),n={name:this.parent.name,data:s,teamId:this.parent.teamId,debugSessionEnabled:!1,version:this.parent.version},o=new ee(this.parent.agentRequest.req);o.headers=[],this.agent=new Fo(this.parent.id,n,this.parent.agentSettings,o);const r=t+"-"+ne();this.agent.jobID=r}get agentRequest(){return this.agent.agentRequest}get components(){return this.agent.components}get agentRuntime(){return this.agent.agentRuntime}get jobID(){return this.agent.jobID}process(e,t){return this.agent.process(e,t)}}function Yn(e,t,s,n,o){const r=e.components.find((e=>e.id===t));if(!r)return;const a=function(e){const t=JSON.parse(JSON.stringify(e));return t.id=e.id,t}(r);s[t]=a.id,n.push(a),e.connections.filter((e=>e.sourceId===t)).forEach((t=>{const r=JSON.parse(JSON.stringify(t));r.sourceId=a.id,s[t.targetId]||Yn(e,t.targetId,s,n,o),r.targetId=s[t.targetId],o.push(r)}))}var Xn=Object.defineProperty,Zn=(e,t,s)=>((e,t,s)=>t in e?Xn(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const eo=class e extends Kt{constructor(){super(),Zn(this,"configSchema",null)}init(){}async process(t,s,n){await super.process(t,s,n),this.createComponentLogger(n,s.name);const o=s.data.forked;try{if(o){let e={JobID:n.jobID};for(let s in t)e[s]=t[s];return e}{const o=new Qn(n,s.id),r=o.jobID;o.agent.async=!0,o.agent.jobID=r,this.cleanJobIDBranch(o.agent);if(o.components[s.id].data.forked=!0,o.agentRequest.body={...t},e.JOBS[n.id]||(e.JOBS[n.id]={}),e.JOBS[n.id][r]={status:"pending"},n.debugSessionEnabled){const e=Object.keys(o.components);n.agentRuntime.updateComponent(s.id,{_job_components:e})}return o.process(`/api/${s.id}`,t).then((t=>{e.JOBS[n.id][r].result=t,e.JOBS[n.id][r].status="done"})).finally((async()=>{"done"!==e.JOBS[n.id][r].status&&(e.JOBS[n.id][r].status="failed"),n.debugSessionEnabled&&(await ae(1e3),n.agentRuntime.reloadCtxData(),n.agentRuntime.updateComponent(s.id,{_job_components:[]}))})),{JobID:r}}}catch{}return{}}cleanJobIDBranch(e){const t=Object.values(e.components).find((e=>"Async"===e.name));if(!t)return;const s=t.outputs.findIndex((e=>"JobID"===e.name));-1!==s&&(e.connections=e.connections.filter((n=>!(n.sourceId===t.id&&n.sourceIndex===s&&!e.components[n.targetId].async))),this.removeOrphanedBranches(e))}removeOrphanedBranches(e){const t=[];for(let s in e.components){const n=e.components[s];"APIEndpoint"!==n.name&&(e.connections.some((e=>e.targetId===n.id))||t.push(n.id))}for(let s of t)this.removeComponent(e,s)}removeComponent(e,t){e.components[t],delete e.components[t],e.connections=e.connections.filter((e=>e.sourceId!==t)),this.removeOrphanedBranches(e)}};Zn(eo,"JOBS",{}),Zn(eo,"ForkedAgent");let to=eo;var so=Object.defineProperty,no=(e,t,s)=>((e,t,s)=>t in e?so(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const oo=class e extends Kt{constructor(){super(),no(this,"configSchema",m.object({jobs_count:m.number().min(1).max(100).default(1).label("Jobs Count"),max_time:m.number().min(1).max(21600).default(1).label("Max time")}))}init(){}async process(t,s,n){await super.process(t,s,n);const o=this.createComponentLogger(n,s.name);try{let r={},a=parseInt(s.data.jobs_count||1),i=parseInt(s.data.max_time||1);const c=Array.isArray(t.Jobs)?t.Jobs:[t.Jobs];e.WAITS[n.id]||(e.WAITS[n.id]={}),e.WAITS[n.id][s.id]||(e.WAITS[n.id][s.id]={}),e.WAITS[n.id][s.id][n.agentRuntime.workflowReqId]||(e.WAITS[n.id][s.id][n.agentRuntime.workflowReqId]=[]);for(let t of c)e.WAITS[n.id][s.id][n.agentRuntime.workflowReqId].push(t);o.debug("Jobs",c),o.debug("Waiting for jobs to finish"),await new Promise(((e,t)=>{let s=setInterval((()=>{if(i<0)return clearInterval(s),e(!0);let t=!0,o=0;for(let e of c){if("pending"==to.JOBS?.[n.id]?.[e]?.status){t=!1;break}o++}if(o>=a&&(t=!0),t)return clearInterval(s),e(!0);i-=1}),1e3)})),o.debug("Jobs finished, collecting results");for(let e of c)r[e]={output:to.JOBS?.[n.id]?.[e]?.result,status:to.JOBS?.[n.id]?.[e]?.status||"unknown_job"};return delete e.WAITS[n.id][s.id][n.agentRuntime.workflowReqId],o.debug("Results",r),{Results:r,_error:null,_debug:o.output,_debug_time:o.elapsedTime}}catch(t){const r=t?.response?.data||t?.message||t.toString();return o.error(` Error running code \n${r}\n`),delete e.WAITS[n.id][s.id][n.agentRuntime.workflowReqId],{Output:void 0,_error:r,_debug:o.output,_debug_time:o.elapsedTime}}}};no(oo,"WAITS",{});let ro=oo;var ao=Object.defineProperty,io=(e,t,s)=>((e,t,s)=>t in e?ao(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);function co(e){return"object"!=typeof e||(e._debug&&delete e._debug,e._error&&delete e._error,e._temp_result&&delete e._temp_result,e._in_progress&&delete e._in_progress),e}var lo=Object.defineProperty,uo=(e,t,s)=>((e,t,s)=>t in e?lo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var po={"text-classification":{inputs:{Text:{type:"string",desc:"(required) a string to be classified",request_parameter_name:"inputs",request_parameter_type:"string"}},formatRequest:'inputs: "{{text}}"'},"token-classification":{inputs:{Text:{type:"string",desc:"(required) a string to be classified",request_parameter_name:"inputs",request_parameter_type:"string"}},parameters:{aggregation_strategy:{type:"string",default:"simple",desc:"(Default: simple). There are several aggregation strategies:",supportedValues:[{value:"none",desc:"Every token gets classified without further aggregation."},{value:"simple",desc:"Entities are grouped according to the default schema (B-, I- tags get merged when the tag is similar)."},{value:"first",desc:"Same as the simple strategy except words cannot end up with different tags. Words will use the tag of the first token when there is ambiguity."},{value:"average",desc:"Same as the simple strategy except words cannot end up with different tags. Scores are averaged across tokens and then the maximum label is applied."},{value:"max",desc:"Same as the simple strategy except words cannot end up with different tags. Word entity will be the token with the maximum score."}]}},formatRequest:'inputs: "{{text}}"'},"table-question-answering":{inputs:{Query:{type:"string",desc:"(required) The query in plain text that you want to ask the table",request_parameter_name:"query",request_parameter_type:"string"},Table:{type:"string",desc:"(required) A table of data represented as a dict of list where entries are headers and the lists are all the values, all lists must have the same size.",request_parameter_name:"table",request_parameter_type:"Record<string, string[]>"}},formatRequest:'inputs: { query: "{{query}}", table: {{table}} }'},"question-answering":{inputs:{Question:{type:"string",request_parameter_name:"question",request_parameter_type:"string"},Context:{type:"string",request_parameter_name:"context",request_parameter_type:"string"}},formatRequest:'inputs: { context: "{{context}}", question: "{{question}}" }'},"document-question-answering":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"image",request_parameter_type:"Blob | ArrayBuffer"},Question:{type:"string",desc:"(required) Question about document image.",request_parameter_name:"question",request_parameter_type:"string"}},formatRequest:'inputs: { image: {{image}}, question: "{{question}}" }'},"visual-question-answering":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"image",request_parameter_type:"Blob | ArrayBuffer"},Question:{type:"string",desc:"(required) Question about visual image.",request_parameter_name:"question",request_parameter_type:"string"}},formatRequest:'inputs: { image: {{image}}, question: "{{question}}" }'},"zero-shot-classification":{inputs:{Text:{type:"string",desc:"(required) a string or list of strings",request_parameter_name:"inputs",request_parameter_type:"string | string[]"}},parameters:{candidate_labels:{type:"string[]",default:[],desc:"(required) a list of strings that are potential classes for inputs. (max 10 candidate_labels, for more, simply run multiple requests, results are going to be misleading if using too many candidate_labels anyway. If you want to keep the exact same, you can simply run multi_label=true and do the scaling on your end. )"},multi_label:{type:"boolean",default:!1,desc:"(Default: false) Boolean that is set to True if classes can overlap"}},formatRequest:'inputs: "{{text}}", parameters: { candidate_labels: [{{candidate_labels}}] }'},translation:{inputs:{Text:{type:"string",desc:"(required) a string to be translated in the original languages",request_parameter_name:"inputs",request_parameter_type:"string"}},formatRequest:'inputs: "{{text}}"'},summarization:{inputs:{Text:{type:"string",desc:"(required) a string to be summarized",request_parameter_name:"inputs",request_parameter_type:"string"}},parameters:{min_length:{type:"number",default:"None",desc:"(Default: None). Integer to define the minimum length in tokens of the output summary."},max_length:{type:"number",default:"None",desc:"(Default: None). Integer to define the maximum length in tokens of the output summary."},top_k:{type:"number",default:"None",desc:"(Default: None). Integer to define the top tokens considered within the sample operation to create new text."},top_p:{type:"number",default:"None",desc:"(Default: None). Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p."},temperature:{type:"number",default:1,desc:"(Default: 1.0). Float (0.0-100.0). The temperature of the sampling operation. 1 means regular sampling, 0 means always take the highest score, 100.0 is getting closer to uniform probability."},repetition_penalty:{type:"number",default:"None",desc:"(Default: None). Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes."},max_time:{type:"number",default:"None",desc:"(Default: None). Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit."}},formatRequest:'inputs: "{{text}}"'},conversational:{inputs:{Text:{type:"string",desc:"(required) The last input from the user in the conversation.",request_parameter_name:"text",request_parameter_type:"string"},Generated_responses:{type:"string[]",desc:"A list of strings corresponding to the earlier replies from the model.",request_parameter_name:"generated_responses",request_parameter_type:"string[]"},Past_user_inputs:{type:"string[]",desc:"A list of strings corresponding to the earlier replies from the user. Should be of the same length of generated_responses.",request_parameter_name:"past_user_inputs",request_parameter_type:"string[]"}},parameters:{min_length:{type:"number",default:"None",desc:"(Default: None). Integer to define the minimum length in tokens of the output summary."},max_length:{type:"number",default:"None",desc:"(Default: None). Integer to define the maximum length in tokens of the output summary."},top_k:{type:"number",default:"None",desc:"(Default: None). Integer to define the top tokens considered within the sample operation to create new text."},top_p:{type:"number",default:"None",desc:"(Default: None). Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p."},temperature:{type:"number",default:1,desc:"(Default: 1.0). Float (0.0-100.0). The temperature of the sampling operation. 1 means regular sampling, 0 means always take the highest score, 100.0 is getting closer to uniform probability."},repetition_penalty:{type:"number",default:"None",desc:"(Default: None). Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes."},max_time:{type:"number",default:"None",desc:"(Default: None). Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit."}},formatRequest:'inputs: "{{text}}", past_user_inputs: [{{past_user_inputs}}], generated_responses: [{{generated_responses}}] }'},"text-generation":{inputs:{Text:{type:"string",desc:"(required) a string to be generated from",request_parameter_name:"inputs",request_parameter_type:"string"}},parameters:{do_sample:{type:"boolean",default:!0,desc:"(Optional: true). Bool. Whether or not to use sampling, use greedy decoding otherwise."},max_time:{type:"number",default:"None",desc:"(Default: None). Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit."},num_return_sequences:{type:"number",default:1,desc:"(Default: 1). Integer. The number of proposition you want to be returned."},repetition_penalty:{type:"number",default:"None",desc:"(Default: None). Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes."},return_full_text:{type:"boolean",default:!0,desc:"(Default: true). Bool. If set to False, the return results will not contain the original query making it easier for prompting."},temperature:{type:"number",default:1,desc:"(Default: 1.0). Float (0.0-100.0). The temperature of the sampling operation. 1 means regular sampling, 0 means always take the highest score, 100.0 is getting closer to uniform probability."},max_new_tokens:{type:"number",default:"None",desc:"(Default: None). Int (0-250). The amount of new tokens to be generated, this does not include the input length it is a estimate of the size of generated text you want. Each new tokens slows down the request, so look for balance between response times and length of text generated."},top_k:{type:"number",default:"None",desc:"(Default: None). Integer to define the top tokens considered within the sample operation to create new text."},top_p:{type:"number",default:"None",desc:"(Default: None). Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p."},truncate:{type:"number",default:"None",desc:"(Default: None). Integer. The maximum number of tokens from the input."}},formatRequest:'inputs: "{{text}}"'},"text2text-generation":{inputs:{Text:{type:"string",desc:"(required) a string to be generated from",request_parameter_name:"inputs",request_parameter_type:"string"}},parameters:{max_time:{type:"number",default:"None",desc:"(Default: None). Float (0-120.0). The amount of time in seconds that the query should take maximum. Network can cause some overhead so it will be a soft limit."},num_return_sequences:{type:"number",default:1,desc:"(Default: 1). Integer. The number of proposition you want to be returned."},repetition_penalty:{type:"number",default:"None",desc:"(Default: None). Float (0.0-100.0). The more a token is used within generation the more it is penalized to not be picked in successive generation passes."},temperature:{type:"number",default:1,desc:"(Default: 1.0). Float (0.0-100.0). The temperature of the sampling operation. 1 means regular sampling, 0 means always take the highest score, 100.0 is getting closer to uniform probability."},max_new_tokens:{type:"number",default:"None",desc:"(Default: None). Int (0-250). The amount of new tokens to be generated, this does not include the input length it is a estimate of the size of generated text you want. Each new tokens slows down the request, so look for balance between response times and length of text generated."},top_k:{type:"number",default:"None",desc:"(Default: None). Integer to define the top tokens considered within the sample operation to create new text."},top_p:{type:"number",default:"None",desc:"(Default: None). Float to define the tokens that are within the sample operation of text generation. Add tokens in the sample for more probable to least probable until the sum of the probabilities is greater than top_p."}},formatRequest:'inputs: "{{text}}"'},"fill-mask":{inputs:{Text:{type:"string",desc:"(required) a string to be filled from, must contain the [MASK] token (check model card for exact name of the mask)",request_parameter_name:"inputs",request_parameter_type:"string"}},formatRequest:'inputs: "{{text}}"'},"sentence-similarity":{inputs:{Source_sentence:{type:"string",desc:"(required) The string that you wish to compare the other strings with. This can be a phrase, sentence, or longer passage, depending on the model being used.",request_parameter_name:"source_sentence",request_parameter_type:"string"},Sentences:{type:"string[]",desc:"(required) A list of strings which will be compared against the source_sentence.",request_parameter_name:"sentences",request_parameter_type:"string[]"}},formatRequest:'inputs: { source_sentence: "{{source_sentence}}", sentences: [{{sentences}}] }'},"text-to-image":{inputs:{Text:{type:"string",desc:"(required) prompt to generate image from",request_parameter_name:"inputs",request_parameter_type:"string"}},formatRequest:'inputs: "{{text}}"'},"image-to-text":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{image}} "},"image-classification":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{image}}"},"object-detection":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{image}}"},"image-segmentation":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{image}}"},"zero-shot-image-classification":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"image",request_parameter_type:"Blob | ArrayBuffer"}},parameters:{candidate_labels:{type:"string[]",desc:"A list of strings that are potential classes for inputs. (max 10)"}},formatRequest:"inputs: { image: {{image}}, parameters: { candidate_labels: [{{candidate_labels}}] } }"},"image-to-image":{inputs:{Image:{type:"URL | base64 | file | SmythFileObject",desc:"(required) image URL, base64 string, uploaded image, or linked image output",request_parameter_name:"inputs",request_parameter_type:"Blob | ArrayBuffer"}},parameters:{prompt:{type:"string",desc:"(Optional) The text prompt to guide the image generation",default:"None"},strength:{type:"number",default:0,desc:"(Optional) The 'strength' parameter is effective only for SD img2img and alt diffusion img2img models. It conceptually indicates the extent of transformation applied to the reference 'image,' with values between 0 and 1. A higher 'strength' adds more noise to the initial 'image,' and the denoising process runs for the specified number of iterations in 'num_inference_steps.' A 'strength' of 1 ignores the 'image,' applying maximum added noise and running denoising for the full set of iterations."},negative_prompt:{type:"string",default:"None",desc:"(Optional) A negative prompt for the image generation"},height:{type:"number",default:"None",desc:"(Optional) The height in pixels of the generated image"},width:{type:"number",default:"None",desc:"(Optional) The width in pixels of the generated image"},num_inference_steps:{type:"number",default:"None",desc:"(Optional) The number of denoising steps. More denoising steps usually lead to a higher quality image at the expense of slower inference."},guidance_scale:{type:"number",default:"None",desc:"(Optional) Guidance scale: Higher guidance scale encourages to generate images that are closely linked to the text `prompt`, usually at the expense of lower image quality."},guess_mode:{type:"boolean",default:"None",desc:"(Optional) guess_mode only works for ControlNet models, defaults to False In this mode, the ControlNet encoder will try best to recognize the content of the input image even if you remove all prompts. The `guidance_scale` between 3.0 and 5.0 is recommended."}},formatRequest:"inputs: {{image}}"},"text-to-speech":{inputs:{Text:{type:"string",desc:"(required) a string to be converted to speech",request_parameter_name:"inputs",request_parameter_type:"string"}},formatRequest:'inputs: "{{text}}"'},"automatic-speech-recognition":{inputs:{Audio:{type:"URL | base64 | SmythFileObject",desc:"(required) audio URL, base64 string, SmythFileObject",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{audio}}"},"audio-to-audio":{inputs:{Audio:{type:"URL | base64 | SmythFileObject",desc:"(required) audio URL, base64 string, SmythFileObject",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{audio}}"},"audio-classification":{inputs:{Audio:{type:"URL | base64 | SmythFileObject",desc:"(required) audio URL, base64 string, SmythFileObject",request_parameter_name:"data",request_parameter_type:"Blob | ArrayBuffer"}},formatRequest:"data: {{audio}}"},"feature-extraction":{inputs:{Text:{type:"string | string[]",desc:"(required) a string or a list of strings to get the features from.",request_parameter_name:"inputs",request_parameter_type:"string | string[]"}},formatRequest:'inputs: "{{text}}"'}},mo=Object.defineProperty,ho=(e,t,s)=>((e,t,s)=>t in e?mo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);function go(e,t){let s=null;try{s=JSON.parse(e)}catch{return t.error("string.invalidJson",{value:e})}if("object"!=typeof s||null===s)return t.error("string.notJsonObject",{value:e});for(const n in s)if(""===n.trim())return t.error("object.emptyKey",{value:e});return s}var yo=Object.defineProperty,fo=(e,t,s)=>((e,t,s)=>t in e?yo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);function bo(e,t){let s=null;try{s=JSON.parse(e)}catch{return t.error("string.invalidJson",{value:e})}if("object"!=typeof s||null===s)return t.error("string.notJsonObject",{value:e});for(const n in s)if(""===n.trim())return t.error("object.emptyKey",{value:e});return s}var wo=Object.defineProperty,Ao=(e,t,s)=>((e,t,s)=>t in e?wo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var ko=Object.defineProperty,_o=(e,t,s)=>((e,t,s)=>t in e?ko(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var xo=Object.defineProperty,vo=(e,t,s)=>((e,t,s)=>t in e?xo(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);var So=Object.defineProperty,Io=(e,t,s)=>((e,t,s)=>t in e?So(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Co={Component:new Kt,Note:new Kt,APIEndpoint:new class extends Kt{constructor(){super(),ns(this,"configSchema",m.object({endpoint:m.string().pattern(/^[a-zA-Z0-9]+([-_][a-zA-Z0-9]+)*$/).max(50).required(),method:m.string().valid("POST","GET").allow(""),description:m.string().max(5e3).allow(""),summary:m.string().max(1e3).allow(""),doc:m.string().max(1e3).allow(""),ai_exposed:m.boolean().default(!0)}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=s.agentRequest,o=this.createComponentLogger(s,t.name),r=n?n.headers:{};let a=n?n.body:e;const i=n?n.params:{};let c=n?n.query:{};const l=n?n._agent_authinfo:void 0;for(const[t,n]of Object.entries(a))as(n)?a[t]=await is(n,s?.teamId):rs(n)&&(a[t]=ts(n).parse(e).result);for(const[t,n]of Object.entries(c))as(n)?c[t]=await is(n,s?.teamId):rs(n)&&(c[t]=ts(n).parse(e).result);const u=t.inputs.filter((e=>void 0!==e.defaultVal&&""!==e.defaultVal&&null!==e.defaultVal)),p=[],m=[];for(const e of t.outputs){const t=e?.expression||e?.name,s=t?.split(".")[1];s&&(t?.includes("body")&&p.push(s),t?.includes("query")&&m.push(s))}for(const t of u){const s=t?.name;let n=e[s];p.includes(s)&&os(a[s])&&(a[s]=n),m.includes(s)&&os(c[s])&&(c[s]=n)}if(void 0!==n.header("X-Debug-Inj")&&s.agentRuntime.debug&&Object.values(e).length>0)if("GET"===t.data.method)for(const[t,s]of Object.entries(e))s instanceof Gt?o.debug("[WARNING] Binary files are not supported for GET requests. Key:",t):c[t]=s;else a=e;a=await Jt(a,t.inputs,s),c=await Jt(c,t.inputs,s),o.debug("Parsing inputs"),o.debug(" Headers",r),o.debug(" Body",a),o.debug(" Params",i),o.debug(" Query",c),o.debug("Parsing body json input");for(let e in a){const t=a[e];if("string"==typeof t&&t.trim().startsWith("{")&&t.trim().endsWith("}"))try{const t=JSON.parse(f(a[e]));a[e]=t}catch{}}o.debug("Parsed body json input",a),o.debug("Parsing query json input");for(let e in c){const t=c[e];if("string"==typeof t&&t.trim().startsWith("{")&&t.trim().endsWith("}"))try{const t=JSON.parse(f(c[e]));c[e]=t}catch{}}o.debug("Parsed query json input",c);for(let e of t.inputs){if(!e.isFile&&"binary"!==e?.type?.toLowerCase())continue;const t=e.name;o.debug("Parsing file input ",t);let r=a[t];if(!(r instanceof Gt)&&n.files?.length>0){const e=n.files.find((e=>e.fieldname===t));if(!e)continue;r=new Gt(e.buffer,ne()+"-"+e.originalname,e.mimetype)}r instanceof Gt&&(a[t]=await r.getJsonData(Ct.agent(s.id)))}return{headers:r,body:a,query:c,params:i,_authInfo:l,_debug:o.output}}},APIOutput:new class extends Kt{constructor(){super(),ls(this,"configSchema",m.object({format:m.string().valid("full","minimal").required().label("Output Format")})),ls(this,"hasPostProcess",!0)}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);let o={};n.debug(" Processing outputs ");for(let s in e)t.inputs.find((e=>e.name==s))&&(o[s]=e[s]);if("raw"===t.data.format){let s="";for(let n in e)t.inputs.find((e=>e.name==n))&&(s+=e[n]);o=s}return{Output:o,_error:void 0,_debug:n.output}}async postProcess(e,t,s){for(let t in s.agentVariables)delete e?.result?.Output?.[t];if("minimal"==t?.data?.format){if(e?.result?.Output)return e?.result?.Output;if(e?.result?._error)return e?.result?._error;delete e.id,delete e.name}return e}},PromptGenerator:new Ss,LLMPrompt:new Ss,APICall:new class extends Kt{constructor(){super(),zs(this,"configSchema",m.object({method:m.string().valid("GET","POST","PUT","PATCH","DELETE","HEAD","OPTIONS").required().label("Method"),url:m.string().max(8192).required().label("URL"),headers:m.string().allow("").label("Headers"),contentType:m.string().valid("none","application/json","multipart/form-data","binary","application/x-www-form-urlencoded","text/plain","application/xml").label("Content-Type"),body:m.string().allow("").label("Body"),_templateSettings:m.object().allow(null).label("Template Settings"),_templateVars:m.object().allow(null).label("Template Variables"),proxy:m.string().allow("").label("Proxy"),oauthService:m.string().allow("").label("OAuth Service"),scope:m.string().allow("").label("Scope"),authorizationURL:m.string().allow("").label("Authorization URL"),tokenURL:m.string().allow("").label("Token URL"),clientID:m.string().allow("").label("Client ID"),clientSecret:m.string().allow("").label("Client Secret"),oauth2CallbackURL:m.string().allow("").label("OAuth2 Callback URL"),callbackURL:m.string().allow("").label("Callback URL"),requestTokenURL:m.string().allow("").label("Request Token URL"),accessTokenURL:m.string().allow("").label("Access Token URL"),userAuthorizationURL:m.string().allow("").label("User Authorization URL"),consumerKey:m.string().allow("").label("Consumer Key"),consumerSecret:m.string().allow("").label("Consumer Secret"),oauth1CallbackURL:m.string().allow("").label("OAuth1 Callback URL"),authenticate:m.string().allow("").label("Authenticate")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{n.debug("=== API Call Log ===");const o=t?.data?.method||"get",i={};i.method=o,i.url=await async function(e,t,s){const n=s?s.teamId:null,o=t?.template?.settings||{};let r=t?.data?.url;return r=decodeURIComponent(r),t.data._templateVars&&o&&(r=await ts(r).parseComponentTemplateVarsAsync(o).asyncResult,r=await ts(r).parse(t.data._templateVars).result),r=await ts(r).parseTeamKeysAsync(n).asyncResult,r=ts(r).parse(e).clean().result,r=decodeURIComponent(r),new URL(r).href}(e,t,s);const{data:l,headers:u}=await async function(e,t,s){const n=s?s.teamId:null,o=t?.template?.settings||{},r=t?.data?.contentType||pe;let a="string"==typeof t?.data?.body?t?.data?.body?.trim():t?.data?.body;if(!a)return{data:null,headers:{}};t.data._templateVars&&o&&(a=await ts(a).parseComponentTemplateVarsAsync(o).asyncResult),a=await ts(a).parseTeamKeysAsync(n).asyncResult;const i={[he]:Is,[me]:Cs,[de]:Ts,[ye]:Ls,[ge]:Rs,[pe]:Ps}[r]||Ps,{data:c=null,headers:l={}}=await i(a,e,t,s);return{data:c,headers:l}}(e,t,s);i.data=l,i.headers=(await async function(e,t,s){const n=s?s.teamId:null,o=t?.template?.settings||{},r=t?.data?.contentType||pe;let i=t?.data?.headers||"{}";t.data._templateVars&&o&&(i=await ts(i).parseComponentTemplateVarsAsync(o).asyncResult,i=await ts(i).parse(t.data._templateVars).result),i=await ts(i).parseTeamKeysAsync(n).asyncResult,i=ts(i).parse(e).clean().result;let c=Dt(i).tryParse();return"object"!=typeof c&&(c={"x-smyth-error":"Error parsing headers"}),c=Object.fromEntries(Object.entries(c).map((([e,t])=>[e.toLowerCase(),t]))),!c["content-type"]&&"none"!==r&&(c["content-type"]=r),new a(c)}(e,t,s)).concat({...u}),i.proxy=await async function(e,t,s){const n=s?s.teamId:null,o=t?.template?.settings||{};let r=t?.data?.proxy;if(!r)return!1;r=decodeURIComponent(r),t.data._templateVars&&o&&(r=await ts(r).parseComponentTemplateVarsAsync(o).parse(t.data._templateVars).asyncResult),r=await ts(r).parseTeamKeysAsync(n).asyncResult,r=ts(r).parse(e).clean().result;const a=new URL(r);return{host:a.hostname,port:parseInt(a.port),auth:a.username?{username:a.username,password:a.password}:void 0}}(e,t,s);let p,m={},d={};try{if(""!==t?.data?.oauthService&&"None"!==t?.data?.oauthService){const e=new URL(i.url).origin,o=function(e={}){let t={};const s=new URL(e.url).searchParams;t=Object.fromEntries(s.entries());const n=e.headers?.["Content-Type"]||"";if(n===me){if("string"==typeof e.data){const s=new URLSearchParams(e.data);t={...t,...Object.fromEntries(s)}}}else if(n===he){if(e.data){const s=c.createHash("sha1").update(JSON.stringify(e.data)).digest("base64");t.oauth_body_hash=s}}else if(n===de){const s=e.data;for(const[e,n]of s.entries())"object"==typeof n&&null!==n&&"size"in n&&"type"in n||(t[e]=n)}return t}(i),r=await Js(s,t,i,n,o,e);i.headers=i.headers.concat({...r})}n.debug("Making API call",i),i.responseType="arraybuffer";const e=await r.request(i);m=await Es(e,s),d=Object.fromEntries(Object.entries(e.headers))}catch(e){n.debug(`Error making API call: ${e.message}`),d=e?.response?.headers?Object.fromEntries(Object.entries(e.response.headers)):{},m=await Es(e.response,s),p=e.message}return{Response:m,Headers:d,_error:p,_debug:n.output}}catch(e){return{_error:e.message,_debug:n.output}}}},VisionLLM:new class extends Kt{constructor(){super(),Hs(this,"configSchema",m.object({prompt:m.string().required().max(4e6).label("Prompt"),maxTokens:m.number().min(1).label("Maximum Tokens"),model:m.string().max(200).required()}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{n.debug("=== Vision LLM Log ===");const o=t.data.model||"gpt-4o-mini",r=await _s.getInstance(o);if(!r.connector)return{_error:`The model '${o}' is not available. Please try a different one.`,_debug:n.output};let a=ts(t.data.prompt).parse(e).result;n.debug(" Parsed prompt\n",a,"\n");const i=Array.isArray(e.Images)?e.Images:[e.Images],c=await r.visionRequest(a,i,t,s);if(n.debug(" Enhanced prompt \n",a,"\n"),!c)return{_error:" LLM Error = Empty Response!",_debug:n.output};if(c?.error)return n.error(` LLM Error=${JSON.stringify(c.error)}`),{Reply:c?.data,_error:c?.error+" "+c?.details,_debug:n.output};const l={Reply:c};return l._debug=n.output,l}catch(e){return{_error:e.message,_debug:n.output}}}},FSleep:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{const s=parseInt(t.data.delay||1),o=e.Input;return n.debug(`Sleeping for ${s} seconds`),await new Promise((e=>setTimeout(e,1e3*s))),{Output:o,_error:void 0,_debug:n.output,_debug_time:n.elapsedTime}}catch(e){const t=e?.response?.data||e?.message||e.toString();return n.error(` Error processing data \n${t}\n`),{hash:void 0,_error:t,_debug:n.output,_debug_time:n.elapsedTime}}}},FHash:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{const s=e.Data,o=t.data.algorithm,r=t.data.encoding;n.debug(` Generating hash using ${o} algorithm and ${r} encoding`);const a=c.createHash(o);a.update(s);const i=a.digest(r);return n.debug(` Generated hash: ${i}`),{Hash:i,_error:void 0,_debug:n.output}}catch(e){const t=e?.response?.data||e?.message||e.toString();return n.error(` Error generating hash \n${t}\n`),{hash:void 0,_error:t,_debug:n.output}}}},FEncDec:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{const s=e.Data,o=t.data.action||"Encode",r=t.data.encoding;return n.debug(`${r} ${o} data`),{Output:"Encode"==o?Buffer.from(s).toString(r):Buffer.from(s,r).toString("utf8"),_error:void 0,_debug:n.output}}catch(e){const t=e?.response?.data||e?.message||e.toString();return n.error(` Error processing data \n${t}\n`),{hash:void 0,_error:t,_debug:n.output}}}},FSign:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{const o=s?s.teamId:null;let r=e.Data,a=e.Key||t.data.key;a=await ts(a).parse(e).parseTeamKeysAsync(o).asyncResult;const i=t.data.signMethod||"HMAC",c=t.data.dataTransform||"None",l=t.data.hashType||"md5",u=t.data.RSA_padding,p=t.data.RSA_saltLength,m=t.data.encoding||"hex";if("string"!=typeof r)switch(c){case"Stringify":r=JSON.stringify(r);break;case"Querystring":r=Y.stringify(r)}n.debug(" Data to sign = ",r),n.debug(` Signing data using ${i} algorithm and ${m} encoding`);const d=this.signData(r,a,i,m,{hashType:l,RSA_padding:u,RSA_saltLength:p});return n.debug(` Signature generated: ${d}`),{Signature:d,_error:void 0,_debug:n.output}}catch(e){const t=e?.response?.data||e?.message||e.toString();return n.error(` Error generating hash \n${t}\n`),{hash:void 0,_error:t,_debug:n.output}}}signData(e,t,s,n="hex",o={}){switch(s){case"RSA":const r=`${s}-${o.hashType||"md5"}`.toUpperCase(),a=c.createSign(r);a.update(e);const i={key:t,padding:o.RSA_padding?c.constants[o.RSA_padding]:void 0,saltLength:o.RSA_saltLength?c.constants[o.RSA_saltLength]:void 0};return a.sign(i,n.toLowerCase());case"HMAC":const l=c.createHmac(o.hashType,t);return l.update(e),l.digest(n)}return null}},FTimestamp:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{t.data.format;const e=Date.now();return n.debug(`Timestamp : ${e}`),{Timestamp:e,_error:void 0,_debug:n.output,_debug_time:n.elapsedTime}}catch(e){const t=e?.response?.data||e?.message||e.toString();return n.error(` Error processing data \n${t}\n`),{hash:void 0,_error:t,_debug:n.output,_debug_time:n.elapsedTime}}}},DataSourceLookup:new class extends Kt{constructor(){super(),gn(this,"configSchema",m.object({topK:m.string().custom(Re({min:0}),"custom range validation").label("Result Count"),model:m.string().valid("gpt-4o-mini","gpt-4","gpt-3.5-turbo","gpt-4","gpt-3.5-turbo-16k").optional(),prompt:m.string().max(3e4).allow("").label("Prompt").optional(),postprocess:m.boolean().strict().optional(),includeMetadata:m.boolean().strict().optional(),namespace:m.string().allow("").max(80).messages({"string.max":"The length of the 'namespace' name must be 50 characters or fewer."})}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=t.id;s.components[n];const o=s.teamId;let r=s.agentRuntime?.debug?"== Data Source Lookup Log ==\n":null;const a={};for(let e of t.outputs)e.default||(a[e.name]="");const i=t.data.namespace.split("_").slice(1).join("_")||t.data.namespace,c=t.data?.model||"gpt-4o-mini",l=t.data?.prompt?.trim?.()||"",u=t.data?.postprocess||!1,p=t.data?.includeMetadata||!1,m="string"==typeof e.Query?e.Query:JSON.stringify(e.Query),d=Math.max(t.data?.topK||50,50);let h,g,y=await dn.load().getTeamConnector(o)||at.getVectorDBConnector(),f=await y.user(Ct.team(o)).getNamespace(i);f?f.metadata.isOnCustomStorage||(y=at.getVectorDBConnector()):(await y.user(Ct.team(o)).createNamespace(i),r+=`[Created namespace] \n${i}\n\n`);try{h=(await y.user(Ct.team(o)).search(i,m,{topK:d,includeMetadata:!0})).slice(0,t.data.topK).map((e=>({content:e.metadata?.text,metadata:e.metadata}))),h=p?h.map((e=>({content:e.content,metadata:this.parseMetadata(e.metadata?.user||e.metadata?.metadata)}))):h.map((e=>e.content)),r+=`[Results] \nLoaded ${h.length} results from namespace: ${i}\n\n`}catch(e){g=e.toString()}if(u&&l){const t=[];for(let t of h)ts(l.replace(/{{result}}/g,JSON.stringify(t))).parse(e).result,await yn.getInstance(c);h=await Promise.all(t);for(let e=0;e<h.length;e++)"string"==typeof h[e]&&(h[e]=Dt(h[e]).tryParse())}return r+=`[Total Length] \n${JSON.stringify(h).length}\n\n`,{Results:h,_error:g,_debug:r}}parseMetadata(e){try{return JSON.parse(f(e))}catch{return e}}},DataSourceIndexer:new wn,DataSourceCleaner:new class extends Kt{constructor(){super(),kn(this,"configSchema",m.object({namespaceId:m.string().max(50).allow("").label("namespace"),id:m.string().custom(Pe,"custom validation characterSet").allow("").label("source identifier")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=s.teamId;s.id;let o=s.agentRuntime?.debug?"== Source Indexer Log ==\n":null;try{const s=this.validateConfigData(t.data);if(s.error)throw new Error(`Config data validation error: ${s.error}\n EXITING...`);const r={};for(let e of t.outputs)e.default||(r[e.name]=e?.description?`<${e?.description}>`:"");const a=this.validateInput(e);if(a.error)throw new Error(`Input validation error: ${a.error}\n EXITING...`);const i=s.value.namespaceId.split("_")?.slice(1).join("_")||s.value.namespaceId;let c=await dn.load().getTeamConnector(n)||at.getVectorDBConnector(),l=await c.user(Ct.team(n)).getNamespace(i);l?l.metadata.isOnCustomStorage||(c=at.getVectorDBConnector()):(await c.user(Ct.team(n)).createNamespace(i),o+=`[Created namespace] \n${i}\n\n`);const u=ts(t.data.id).parse(e).result;if(!/^[a-zA-Z0-9\-\_\.]+$/.test(u))throw new Error("Invalid id. Accepted characters: 'a-z', 'A-Z', '0-9', '-', '_', '.'");o+=`Searching for data source with id: ${u}\n`;const p=wn.genDsId(u,n,i);return await c.user(Ct.team(n)).deleteDatasource(i,p),o+=`Deleted data source with id: ${u}\n`,{_debug:o,Success:!0}}catch(e){return o+=`Failed to delete data source: \n Error: ${e?.message}\n`,{_debug:o,_error:e?.message||"Couldn't delete data source"}}}validateInput(e){return m.object({}).unknown(!0).validate(e)}validateConfigData(e){return m.object({namespaceId:m.string().required(),id:m.string().optional().allow("").allow(null)}).unknown(!0).validate(e)}},JSONFilter:new class extends Kt{constructor(){super(),xn(this,"configSchema",m.object({fields:m.string().max(3e4).allow("").label("Prompt")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== JSONFilter Log ===");let o={},r=null;try{t.id;const s=t.data.fields;o=function(e,t){const s=t?.split(",").map((e=>e.trim()));function n(e){return Array.isArray(e)?e.map(n):null!==e&&"object"==typeof e?Object.keys(e).filter((e=>s.includes(e))).reduce(((t,s)=>(t[s]=n(e[s]),t)),{}):e}return n(e)}(e.Input,s),n.debug("Output filtered")}catch(e){r=e,n.error(` JSONFilter Error \n ${e.toString()}`)}return{Output:o,_error:r,_debug:n.output}}},LogicAND:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s),this.createComponentLogger(s,t.name);const n={Output:!0};for(let s of t.inputs)if(!e[s.name]){n.Output=void 0;break}return n.Verified=void 0!==n.Output,n.Unverified=!n.Verified,n.Verified||delete n.Verified,n.Unverified||delete n.Unverified,n}},LogicOR:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n={Output:void 0};console.log(e),console.log(t);for(let s of t.inputs)if(e[s.name]){n.Output=!0;break}return n.Verified=void 0!==n.Output,n.Unverified=!n.Verified,n.Verified||delete n.Verified,n.Unverified||delete n.Unverified,n}},LogicXOR:new class extends Kt{constructor(){super()}init(){}async process(e,t,s){await super.process(e,t,s);const n={Output:void 0};let o=0;for(let s of t.inputs)e[s.name]&&o++;return 1===o&&(n.Output=!0),n.Verified=void 0!==n.Output,n.Unverified=!n.Verified,n.Verified||delete n.Verified,n.Unverified||delete n.Unverified,n}},LogicAtLeast:new class extends Kt{constructor(){super(),Sn(this,"configSchema",m.object({minSetInputs:m.string().custom(In({min:0,max:9}),"custom range validation").label("Minimum Inputs")}))}init(){}async process(e,t,s){await super.process(e,t,s),this.createComponentLogger(s,t.name);const n={Output:void 0};if("string"!=typeof t.data.minSetInputs||""===t.data.minSetInputs.trim()||isNaN(Number(t.data.minSetInputs)))return n;const o=Number(t.data.minSetInputs);if(t.inputs.length<o)return n;let r=0;for(let s of t.inputs)e[s.name]&&r++;return r>=o&&(n.Output=!0),n.Verified=void 0!==n.Output,n.Unverified=!n.Verified,n.Verified||delete n.Verified,n.Unverified||delete n.Unverified,n}},LogicAtMost:new class extends Kt{constructor(){super(),Tn(this,"configSchema",m.object({maxSetInputs:m.string().custom(Ln({min:0,max:9}),"custom range validation").label("Maximum Inputs")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n={Output:void 0};if("string"!=typeof t.data.maxSetInputs||""===t.data.maxSetInputs.trim()||isNaN(Number(t.data.maxSetInputs)))return n;const o=Number(t.data.maxSetInputs);if(t.inputs.length<o)return n;let r=0;for(let s of t.inputs)if(e[s.name]&&(r++,r>o))break;return r<=o&&(n.Output=!0),n.Verified=void 0!==n.Output,n.Unverified=!n.Verified,n.Verified||delete n.Verified,n.Unverified||delete n.Unverified,n}},AgentPlugin:new class extends Kt{constructor(){super(),Vn(this,"configSchema",m.object({agentId:m.string().max(200).required(),openAiModel:m.string().max(200).required(),model:m.string().max(200).required(),descForModel:m.string().max(5e3).allow("").label("Description for Model"),id:m.string().max(200),name:m.string().max(500),desc:m.string().max(5e3).allow("").label("Description"),logoUrl:m.string().max(8192).allow(""),version:m.string().max(100).allow(""),domain:m.string().max(253).allow("")}))}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== Agent Plugin Log ===");try{const o=t.data?.agentId;if(!o)return{_error:"Agent Component ID is required!",_debug:n.output};const r=s.agentRuntime?.reqTag,a=t?.data?.model||t?.data?.openAiModel,i=ts(t?.data?.descForModel).parse(e).result,c="string"==typeof e?.Prompt?e?.Prompt:JSON.stringify(e?.Prompt),l=at.getAgentDataConnector(),u=await l.isDeployed(o);let p=t.data?.version||"";if(n.debug("Version: ",p),"same-as-parent"===p)if(await l.isDeployed(s?.id)){if(!u)return{_error:`Call failed, Agent '${t.data?.name}' (${o}) is not deployed. Please deploy the agent and try again.`,_debug:n.output};p="latest"}else p="";else if("dev-latest"===p)p="";else if("prod-latest"===p){if(!u)return{_error:`Call failed, Agent '${t.data?.name}' (${o}) is not deployed. Please deploy the agent and try again.`,_debug:n.output};p="latest"}const m=await new Bn(a,o,{systemPrompt:i}).prompt(c,{"X-AGENT-ID":o,"X-AGENT-VERSION":p,"X-REQUEST-TAG":r,"x-caller-session-id":s.callerSessionId});return n.debug("Response:\n",m,"\n"),{Response:m,_debug:n.output}}catch(e){return console.error("Error on running Agent Component: ",e),{_error:`Error on running Agent Component!\n${e?.message||JSON.stringify(e)}`,_debug:n.output}}}},LLMAssistant:new class extends Kt{constructor(){super(),Fn(this,"configSchema",m.object({model:m.string().max(200).required(),behavior:m.string().max(3e4).allow("").label("Behavior")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{n.debug("== LLM Assistant Log ==\n");const o=t.data.model||"echo",r=t.data.ttl||void 0;let a=s?.teamId;const i=await _s.getInstance(o,a);if(!i.connector)return{_error:`The model '${o}' is not available. Please try a different one.`,_debug:n.output};n.debug(` Model : ${o}`);const c=e.UserInput,l=e.UserId,u=e.ConversationId;let p=ts(t.data.behavior).parse(e).result;n.debug(`[Parsed Behavior] \n${p}\n\n`);let m=2048;if(gs.isStandardLLM(o)){const e=gs.getProvider(o),t=await Ht.getAgentKey(e,s?.id);m=gs.getMaxCompletionTokens(o,!!t)}else m=await(await ws.getInstance(a)).getMaxCompletionTokens(o);const d=await async function(e,t,s,n=2048){if(!t&&!s)return[];const o=Kn(),r=`${e}:conv-u${t}-c${s}`,a=await(o.user(Ct.agent(e))?.get(r)),i=a?Dt(a).tryParse():[],c=[];let l=0;"system"==i[0]?.role&&(l+=S(i[0]?.content).length+3);for(let e=i.length-1;e>=0;e--){if("system"==i[e].role)continue;const t=i[e],s=S(t?.content).length+3;if(l+s>n)break;c.unshift(t),l+=s}return"system"==i[0]?.role&&c.unshift(i[0]),c}(s.id,l,u,Math.round(m/2));d.push({role:us.User,content:c}),d[0]?.role!=us.System&&d.unshift({role:us.System,content:p});const h={messages:d},g=await i.promptRequest(null,t,s,h).catch((e=>({error:e})));if(!g)return{_error:" LLM Error = Empty Response!",_debug:n.output};if(g?.error)return n.error(` LLM Error=${JSON.stringify(g.error)}`),{Response:g?.data,_error:g?.error+" "+g?.details,_debug:n.output};d.push({role:"assistant",content:g}),async function(e,t,s,n,o){if(!t&&!s)return;const r=`${e}:conv-u${t}-c${s}`;Kn().user(Ct.agent(e)).set(r,JSON.stringify(n),null,null,o)}(s.id,l,u,d,r);const y={Response:g};return y._debug=n.output,y}catch(e){return{_error:e.message,_debug:n.output}}}},Async:new to,Await:new ro,ForEach:new class extends Kt{constructor(){super(),io(this,"configSchema",null)}init(){}async process(e,t,s){await super.process(e,t,s);let n,o,r={},a=null,i=!0;const c=this.createComponentLogger(s,t.name);try{const n=e.Input;let a=Array.isArray(n)?n:[n];!Array.isArray(a)&&"object"==typeof a&&(a=Object.values(a));const l=s.agentRuntime.getRuntimeData(t.id)._LoopData||{parentId:t.id,loopIndex:0,loopLength:a.length};c.debug(`Loop: ${l.loopIndex} / ${l.loopLength}`),delete l.branches,l.result&&(o=l.result,c.debug(`  => Loop Result : ${JSON.stringify(r,null,2)}`),c.debug("---------------------------------------------------")),r=a[l.loopIndex],c.debug(`  => Loop Data : ${JSON.stringify(r,null,2)}`),i=void 0!==r,i&&l.loopIndex++,l._in_progress=i,s.agentRuntime.updateRuntimeData(t.id,{_LoopData:l})}catch(e){a=e,c.error(e)}if(!i)switch(n=o||[],t?.data?.format){case"minimal":n=n.map((e=>co(e.result)));break;case"results-array":n=n.map((e=>Object.values(co(e.result)))).flat(1/0)}return{Loop:r,Result:n,_temp_result:o,_error:a,_in_progress:i,_debug:c.output}}async postProcess(e,t,s){return e=await super.postProcess(e,t,s),e?.result&&(delete e.result._temp_result,delete e.result._in_progress,delete e.result.Loop),e}},Code:new class extends Kt{constructor(){super(),uo(this,"configSchema",m.object({code_vars:m.string().max(1e3).allow("").label("Variables"),code_body:m.string().max(5e5).allow("").label("Code"),_templateSettings:m.object().allow(null).label("Template Settings"),_templateVars:m.object().allow(null).label("Template Variables")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);try{let s,o={};const a=Oe.env.CODE_SANDBOX_URL+"/run-js";let i={};for(let t in e)if("string"==typeof e[t]){const s=Buffer.from(e[t]).toString("base64");i[t]=`___internal.b64decode('${s}')`}else i[t]=e[t];let c=Zt.create(t.data.code_vars||"").parse(i).result,l=t.data.code_body;t.data._templateVars&&(l=Zt.create(l).parse(t.data._templateVars).result);const u=c+"\n"+l;n.debug(` Running code \n${u}\n`);const p=await r.post(a,{code:u}).catch((e=>({error:e})));return p.error?(s=p.error?.response?.data||p.error?.message||p.error.toString(),n.error(` Error running code \n${s}\n`),o=void 0):(n.debug(` Code result \n${JSON.stringify(p.data,null,2)}\n`),o=p.data?.Output),{Output:o,_error:s,_debug:n.output}}catch(e){const t=e?.response?.data||e?.message||e.toString();return n.error(` Error running code \n${t}\n`),{Output:void 0,_error:t,_debug:n.output}}}},HuggingFace:new class extends Kt{constructor(){super(),ho(this,"configSchema",m.object({accessToken:m.string().max(350).required().label("Access Token"),modelName:m.string().max(100).required(),modelTask:m.string().max(100).required(),inputConfig:m.string().allow(""),parameters:m.string().custom(go,"custom JSON validation").allow(""),name:m.string().max(100).required(),displayName:m.string().max(100).required(),desc:m.string().max(5e3).required().allow(""),logoUrl:m.string().max(500).allow(""),disableCache:m.boolean().strict()}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== Hugging Face Log ===");const o=s?.teamId,r=await Zt.create(t?.data?.accessToken).parseTeamKeysAsync(o).asyncResult;if(!r)return{_error:"Please provide a valid Hugging Face Access Token",_debug:n.output};const a=new Q(r),i=t?.data?.modelTask;if(!i)return{_error:"Hugging Face Task is required!",_debug:n.output};n.debug(`Task: ${le(i)}`);let c=(e=>e&&"string"==typeof e?e.replace(/-([a-z])/g,(function(e,t){return t.toUpperCase()})):e)(i);if("text2textGeneration"===c&&(c="textGeneration"),!a?.[c])return{_error:`Inference API does not support for this task - ${le(i)}`,_debug:n.output};const l=t?.data?.modelName;if(!l)return{_error:"Hugging Face Model is required!",_debug:n.output};n.debug(`Model Name: ${l}`);let u={};const p=po?.[i]?.formatRequest,m=po?.[i]?.inputs;if(m&&Object.keys(m).length>0){for(const e in m){const t=m[e];u[e]=t}"object"==typeof u&&null!==u&&(u={...u,formatRequest:p})}(!u||0===Object.keys(u)?.length)&&console.log("No inputs config found for Hugging Face Model!");let d={};if(!e||0===Object.keys(e)?.length)return{_error:"Please provide a valid input!",_debug:n.output};if("object"!=typeof e)return{_error:"Invalid input!",_debug:n.output};if("object"==typeof e&&Object.keys(e)?.length>0)for(const t in e)if(u?.[t]){let s=e[t],o=u[t].request_parameter_name,r=u[t].request_parameter_type;if(r&&r?.includes("Blob"))try{const e=await Gt.from(s).getBuffer(),t=new Blob([e]);d[o]=t}catch(e){return{_error:e?.message||JSON.stringify(e),_debug:n.output}}else d[o]=s}const h=function(e){const t=e?.trim();return/^(inputs|data):\s*{(?![{])/.test(t)}(u.formatRequest)?{inputs:d}:d;let g;if(h.inputs&&"object"==typeof h.inputs){g={...h.inputs};for(const[e,t]of Object.entries(h.inputs||{}))t instanceof Blob&&(g[e]=`Blob size=${t.size}`)}else g=h;n.debug("Inputs: ",g);let y=JSON.parse(t?.data?.parameters||"{}");y=ce(y);let f={};if(y&&Object.keys(y)?.length>0)for(const t in y){const s=y[t];if("string"==typeof s){if("none"===s?.toLowerCase())continue;f[t]=Zt.create(s).parse(e).result}else f[t]=s}let b={model:l,...h};const w={};t?.data?.disableCache&&(w.use_cache=!1),Object.keys(f)?.length>0&&(b.parameters=f,n.debug("Parameters: \n",f));const A=async({retryCount:e=0,retryLimit:t=2,retryDelay:n=1e3})=>{try{("function"!=typeof a[c]||e===t)&&(c="request");const n=await a[c](b,w);let o;return o=n instanceof Blob?await Gt.from(n).getJsonData(Ct.agent(s.id)):Array.isArray(n)?await Promise.all(n.map((async e=>{if(e.blob instanceof Blob||"string"==typeof e.blob&&Ae(e.blob)){let t;t=e.blob instanceof Blob?Gt.from(e.blob):Gt.from(e.blob,void 0,e["content-type"]);const n=await t.getJsonData(Ct.agent(s.id));return{...e,blob:n}}return e}))):n,o}catch(s){if(e<t)return await ae(n),A({retryCount:e+1,retryLimit:t,retryDelay:2*n});throw s}};try{const e=await A({retryCount:0,retryLimit:2,retryDelay:5e3});return n.debug("Output: \n",e),{Output:e,_debug:n.output}}catch(e){return console.log("Error on running Hugging Face Model!",e),console.log("Error: args, options ",b,w),{_error:`Error from Hugging Face: \n${e?.message||JSON.stringify(e)}`,_debug:n.output}}}},ZapierAction:new class extends Kt{constructor(){super(),fo(this,"configSchema",m.object({actionName:m.string().max(100).required(),actionId:m.string().max(100).required(),logoUrl:m.string().max(500).allow(""),apiKey:m.string().max(350).required(),params:m.string().custom(bo,"custom JSON validation").allow("")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== Zapier Action Log ===");const o=s?.teamId,a=await Zt.create(t?.data?.apiKey).parseTeamKeysAsync(o).asyncResult;if(!a)return{_error:"You are not authorized to run the Zapier Action!",_debug:n.output};const i=t?.data?.actionId;if(!i)return{_error:"Zapier Action ID is required!",_debug:n.output};if(!Object.keys(e||{})?.length)return{_error:"Give a plain english description of exact action you want to do!",_debug:n.output};let c={},l=[];for(const[t,n]of Object.entries(e))if(Ie(n)){const e=await jt.Instance.genTempUrl(n?.url,Ct.agent(s.id));l.push(e),c[t]={...n,url:e}}else c[t]=n;try{const e=`https://actions.zapier.com/api/v1/exposed/${i}/execute/?api_key=${a}`,t=await r.post(e,{...c});return n.debug("Output:\n",t?.data),Promise.all(l.map((e=>jt.Instance.destroyTempUrl(e)))).then((()=>{console.log("Cleaned up all temp urls")})).catch((e=>{console.log("Error cleaning up temp urls",e)})),{Output:t?.data,_debug:n.output}}catch(t){console.log("Error Running Zapier Action: \n",t);let s=Object.keys(t?.response?.data||{})?.length?t?.response?.data:t?.message;return"object"==typeof s&&(s=JSON.stringify(s)),n.error("Error running Zapier Action!",s),n.error("Error Inputs ",e),Promise.all(l.map((e=>jt.Instance.destroyTempUrl(e)))).then((()=>{console.log("Cleaned up all temp urls")})).catch((e=>{console.log("Error cleaning up temp urls",e)})),{_error:`Zapier Error: ${s}`,_debug:n.output}}}},GPTPlugin:new class extends Kt{constructor(){super(),Ao(this,"configSchema",m.object({model:m.string().optional(),openAiModel:m.string().required(),specUrl:m.string().max(2048).uri().required().description("URL of the OpenAPI specification"),descForModel:m.string().max(5e3).required().allow("").label("Description for Model"),name:m.string().max(500).required().allow(""),desc:m.string().max(5e3).required().allow("").label("Description"),logoUrl:m.string().max(8192).allow(""),id:m.string().max(200),version:m.string().max(100).allow(""),domain:m.string().max(253).allow("")}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== GPT Plugin Log ===");try{const s=t?.data?.specUrl;if(!s)return{_error:"Please provide a Open API Specification URL!",_debug:n.output};const o=t?.data?.model||t?.data?.openAiModel,r=ts(t?.data?.descForModel).parse(e).result;let a="";if(e?.Prompt?a="string"==typeof e?.Prompt?e?.Prompt:JSON.stringify(e?.Prompt):e?.Query&&(a="string"==typeof e?.Query?e?.Query:JSON.stringify(e?.Query)),!a)return{_error:"Please provide a prompt",_debug:n.output};const i=await new Bn(o,s,{systemPrompt:r}).prompt(a);return n.debug("Response:\n",i,"\n"),{Output:i,_debug:n.output}}catch(e){return console.error("Error on running GPT Plugin: ",e),{_error:`Error on running GPT Plugin!\n${e?.message||JSON.stringify(e)}`,_debug:n.output}}}},ImageGenerator:new class extends Kt{constructor(){super(),_o(this,"configSchema",m.object({model:m.string().valid("dall-e-2","dall-e-3").required(),prompt:m.string().optional().max(4e6).label("Prompt"),sizeDalle2:m.string().valid("256x256","512x512","1024x1024").required(),sizeDalle3:m.string().valid("1024x1024","1792x1024","1024x1792").required(),quality:m.string().valid("standard","hd").required(),style:m.string().valid("vivid","natural").required(),isRawInputPrompt:m.boolean().strict()}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== Image Generator Log ===");let o=t?.data?.model;if(!o)return{_error:"Model Not Found: Either DALL·E 3 or DALL·E 2 is required!",_debug:n.output};let r=t.data?.prompt||e?.Prompt;if(r="string"==typeof r?r:JSON.stringify(r),r=ts(r).parse(e).result,!r)return{_error:"Please provide a prompt or Image",_debug:n.output};let a=r;n.debug("Prompt: \n",r);const i=t?.data?.responseFormat||"url";let c={responseFormat:i,model:o};if("dall-e-3"===o){const s=t?.data?.sizeDalle3||"1024x1024",n=t?.data?.quality||"standard",o=t?.data?.style||"vivid";c.size=s,c.quality=n,c.style=o,t?.data?.isRawInputPrompt&&(a=`I NEED to test how the tool works with extremely simple prompts. DO NOT add any detail, just use it AS-IS: ${e?.Prompt}`)}else if("dall-e-2"===o){const e=t?.data?.sizeDalle2||"256x256",s=parseInt(t?.data?.numberOfImages)||1;c.size=e,c.n=s}try{const e=await _s.getInstance(o);if(!e.connector)return{_error:`The model '${o}' is not available. Please try a different one.`,_debug:n.output};const t=await e.imageGenRequest(a,c,s).catch((e=>({error:e})));let l=t?.data?.[0]?.[i];const u=t?.data?.[0]?.revised_prompt;return u&&r!==u&&n.debug(`Revised Prompt:\n${u}`),n.debug("Output:",l),{Output:l,_debug:n.output}}catch(e){return{_error:`Generating Image(s)\n${e?.message||JSON.stringify(e)}`,_debug:n.output}}}},Classifier:new class extends Kt{constructor(){super(),vo(this,"configSchema",m.object({model:m.string().max(200).required(),prompt:m.string().max(3e4).allow("").label("Prompt")}))}init(){}escapeJSONString(e){return e.replace(/\{/g,"<[<(").replace(/\}/g,")>]>").replace(/"/g,"`")}unescapeJSONString(e){return e.replace(/<\[<\(/g,"{").replace(/\)>]>/g,"}").replace(/`/g,'"')}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name),o=JSON.parse(JSON.stringify(e));for(let e in o)"string"==typeof o[e]?o[e]=this.escapeJSONString(o[e]):"object"==typeof o[e]&&(o[e]=JSON.stringify(o[e]),o[e]=this.escapeJSONString(o[e]));const r="string"==typeof e?e:JSON.stringify(o,null,2),a={};for(let e of t.outputs)a[e.name]=e.description||"";const i={};for(let e of t.outputs)i[e.name]="<Boolean|String>";const c=t.data.model;n.log(` Selected model : ${c}`);let l="";const u=["_debug","_error"],p=Object.keys(i).filter((e=>!u.includes(e)));if(p.length>0&&(p.forEach((e=>i[e])),l=`${t.data.prompt}\n${r}\n\n---\nCategories: \n${JSON.stringify(a,null,2)}`,l=ts(l).parse(e).result),n.log(` Enhanced prompt \n${l}\n`),!l)return n.error(" Missing information, Cannot run classifier"),{_error:"Missing information, Cannot run classifier",_debug:n.output};const m=await _s.getInstance(c||"echo");if(!m.connector)return{_error:`The model '${c}' is not available. Please try a different one.`,_debug:n.output};try{let e=await m.promptRequest(l,t,s).catch((e=>({error:e})));if(e.error)return n.error(" LLM Error=",e.error),{_error:e.error.toString(),_debug:n.output};let o="string"==typeof e?qt.create(e).tryParse():e;for(let e in o)if(o[e]){if("string"==typeof o[e]){o[e]=this.unescapeJSONString(o[e]);const t=qt.create(o[e]).tryParse();"object"==typeof t&&!t.error&&(o[e]=t)}}else delete o[e];return o.error&&(o._error=o.error,n.warn(` Post process error=${o.error}`),delete o.error),n.log(" Classifier result",o),o._debug=n.output,o}catch(e){return{_error:e.message,_debug:n.output}}}},MultimodalLLM:new class extends Kt{constructor(){super(),Io(this,"configSchema",m.object({prompt:m.string().required().max(4e6).label("Prompt"),maxTokens:m.number().min(1).label("Maximum Tokens"),model:m.string().max(200).required()}))}init(){}async process(e,t,s){await super.process(e,t,s);const n=this.createComponentLogger(s,t.name);n.debug("=== Multimodal LLM Log ===");try{const o=t.data.model||"gpt-4o-mini",r=await _s.getInstance(o,s.teamId);if(!r.connector)return{_error:`The model '${o}' is not available. Please try a different one.`,_debug:n.output};n.debug(` Model : ${o}`);let a=ts(t.data.prompt).parse(e).result;n.debug(" Parsed prompt\n",a,"\n");const i={};for(let e of t.outputs)e.default||(i[e.name]=e?.description?`<${e?.description}>`:"");const c=["_debug","_error"],l=Object.keys(i).filter((e=>!c.includes(e)));if(l.length>0){const e={};l.forEach((t=>e[t]="<value>")),a+="\n\nExpected output format = "+JSON.stringify(e)+"\n\n The output JSON should only use the entries from the output format.",n.debug(`[Component enhanced prompt]\n${a}\n\n`)}const u=Array.isArray(e.Input)?e.Input:[e.Input],p=await r.multimodalRequest(a,u,t,s);if(n.debug(" Enhanced prompt \n",a,"\n"),!p)return{_error:" LLM Error = Empty Response!",_debug:n.output};if(p?.error)return n.error(` LLM Error=${JSON.stringify(p.error)}`),{Reply:p?.data,_error:p?.error+" "+p?.details,_debug:n.output};const m={Reply:p};return m._debug=n.output,m}catch(e){return n.error(`Error processing File(s)!\n${JSON.stringify(e)}`),{_error:`${e?.error||""} ${e?.details||""}`.trim()||e?.message||"Something went wrong!",_debug:n.output}}}}};var To=Object.defineProperty;Je("AgentLogger");const Lo=class e{constructor(e){this.agent=e}static async cleanup(){const t=Object.keys(e.transactions);for(const s of t)e.transactions[s].canDelete()&&delete e.transactions[s]}static log(e,t,s){return t||(t="log-"+ne()),t}static async logTask(e,t){}};((e,t,s)=>{((e,t,s)=>{t in e?To(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s})(e,"symbol"!=typeof t?t+"":t,s)})(Lo,"transactions",{});let Po=Lo;var Ro=Object.defineProperty,Oo=(e,t,s)=>((e,t,s)=>t in e?Ro(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Mo=Je("RuntimeContext");class qo extends u{constructor(e){super(),this.runtime=e,Oo(this,"circularLimitReached",!1),Oo(this,"step",0),Oo(this,"sessionResult",!1),Oo(this,"sessionResults"),Oo(this,"components",{}),Oo(this,"checkRuntimeContext",null),Oo(this,"ctxFile",""),Oo(this,"_runtimeFileReady");const t=e.agent,s=T.join(Oe.env.DATA_PATH||T.join(C.tmpdir(),".smyth"),`/debug/${t.id}/`);L.existsSync(s)||L.mkdirSync(s,{recursive:!0});const n=(e.processID?.split(":")[0]||"")==e.xDebugId?"":"."+ne()+e.reqTag;this.ctxFile=T.join(s,`${e.xDebugId}${n}${t.jobID?`-job-${t.jobID}`:""}.json`),this.initRuntimeContext()}serialize(){return{step:this.step,sessionResult:this.sessionResult,sessionResults:this.sessionResults,components:this.components}}deserialize(e){this.step=e.step,this.sessionResult=e.sessionResult,this.sessionResults=e.sessionResults,this.components=e.components}reset(){this.step=0,this.sessionResult=!1,this.sessionResults=null,this.components={}}initRuntimeContext(){if(this._runtimeFileReady)return;const e=this.runtime.xDebugId?.startsWith("dbg-");Mo.debug("Init ctxFile",this.ctxFile);const t=this.runtime.agent;let s=(t.agentRequest.method||"POST").toUpperCase();const n=t.endpoints?.[t.agentRequest.path]?.[s];let o={};if(L.existsSync(this.ctxFile))o=JSON.parse(L.readFileSync(this.ctxFile,"utf8")),o.step||(o.step=0);else{o=JSON.parse(JSON.stringify({components:t.components,connections:t.connections,timestamp:Date.now()})),o.step||(o.step=0);for(let t in o.components){o.components[t]={id:t,name:o.components[t].name,ctx:{active:!1,name:o.components[t].name}};const s=o.components[t];n&&null!=n.id&&s.id==n.id&&e&&(s.ctx.active=!0)}L.writeFileSync(this.ctxFile,JSON.stringify(o,null,2))}this.deserialize(o),this._runtimeFileReady=!0,this.emit("ready")}async sync(){if(this.ctxFile)if(this.emit("syncing"),this.runtime.sessionClosed)this.runtime.debug&&L.existsSync(this.ctxFile)&&await ae(6e4),L.existsSync(this.ctxFile)&&L.unlinkSync(this.ctxFile);else{const e=this.serialize();e&&L.writeFileSync(this.ctxFile,JSON.stringify(e,null,2))}}incStep(){this.step++,this.sync()}updateComponent(e,t){const s=this;if(!s)return;const n=s.components[e];n||(Mo.log(">>>>>>> updateComponent Component debug data not found",e,n),Mo.log(">>> ctxFile",this.ctxFile),Mo.log(">>> ctxData",s)),n.ctx={...n.ctx,...t,step:this.step},this.sync()}resetComponent(e){const t=this.components[e];t||(Mo.log(">>>>>>> resetComponent Component debug data not found",e,t),Mo.log(">>> ctxFile",this.ctxFile),Mo.log(">>> ctxData",this)),t.ctx.runtimeData={},t.ctx.active=!1,this.sync()}getComponentData(e){const t=this;if(!t)return null;const s=t.components[e];return s||(Mo.log(">>>>>>> getComponentData Component debug data not found",e,s),Mo.log(">>> ctxFile",this.ctxFile),Mo.log(">>> ctxData",t)),s.ctx}}var Do=Object.defineProperty,Eo=(e,t,s)=>((e,t,s)=>t in e?Do(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const No=Je("AgentRuntime"),$o=new Proxy({},{get:function(e,t,s){return"function"==typeof e[t]?e[t]:function(){No.warn(`AgentRuntime Unavailable tried to call : ${t.toString()}`)}}}),jo=class e{constructor(t){this.agent=t,Eo(this,"agentContext"),Eo(this,"xDebugRun",""),Eo(this,"xDebugInject",""),Eo(this,"xDebugRead",""),Eo(this,"xDebugStop",""),Eo(this,"xDebugPendingInject",null),Eo(this,"xDebugId",""),Eo(this,"xDebugCmd",""),Eo(this,"_debugActive",!1),Eo(this,"_runtimeFileReady",!1),Eo(this,"sessionClosed",!1),Eo(this,"reqTagOwner",!1),Eo(this,"reqTag"),Eo(this,"processID"),Eo(this,"workflowReqId"),Eo(this,"alwaysActiveComponents",{}),Eo(this,"exclusiveComponents",{}),Eo(this,"checkRuntimeContext",null),this.reqTag=t.agentRequest.header("X-REQUEST-TAG");const s=!!this.reqTag;this.reqTag?(this.xDebugStop=void 0,this.xDebugRun=void 0,this.xDebugInject=void 0,this.xDebugRead=void 0):(this.xDebugStop=t.agentRequest.header("X-DEBUG-STOP"),this.xDebugRun=t.agentRequest.header("X-DEBUG-RUN"),this.xDebugInject=t.agentRequest.header("X-DEBUG-INJ"),this.xDebugRead=t.agentRequest.header("X-DEBUG-READ"),this.reqTag="xTAG-"+ne(),this.reqTagOwner=!0),this.xDebugId=this.xDebugStop||this.xDebugRun||this.xDebugRead,!this.xDebugId&&t.agentRequest.body&&(null!=this.xDebugInject&&null!=this.xDebugInject?(this.xDebugPendingInject=t.agentRequest.body,this.xDebugRun=this.xDebugInject||"inj-"+ne()):""==this.xDebugRun&&(this.xDebugRun="dbg-"+ne()),this.xDebugId=this.xDebugRun),this.processID=this.xDebugId,this.xDebugId||(this.xDebugId=t.sessionId,this.processID=this.reqTag),s&&(this.processID+=`:${Math.floor(1e3+9e3*Math.random())}`),this.workflowReqId=this.xDebugRun||this.xDebugStop||this.reqTag,e.tagsData[this.reqTag]||(e.tagsData[this.reqTag]={}),e.processResults[this.processID]||(e.processResults[this.processID]={timestamp:Date.now(),errorResults:[],sessionResults:[]}),this.agentContext=new qo(this),this.agentContext.on("ready",(()=>{this.alwaysActiveComponents={},this.exclusiveComponents={};for(let e of this.agent.data.components){const t=Co[e.name];if(t){if(t.alwaysActive){this.alwaysActiveComponents[e.id]=t,this.updateComponent(e.id,{active:!0,alwaysActive:!0});const s={...this.getRuntimeData(e.id)};this.saveRuntimeComponentData(e.id,s)}if(t.exclusive){this.exclusiveComponents[e.id]=t,this.updateComponent(e.id,{exclusive:!0});const s={...this.getRuntimeData(e.id)};this.saveRuntimeComponentData(e.id,s)}}else No.warn(`Component ${e.name} Exists in agent but has no implementation`)}})),this._debugActive=this.xDebugId!=t.sessionId}get circularLimitReached(){return this.agentContext?.circularLimitReached||!1}set circularLimitReached(e){this.agentContext&&(this.agentContext.circularLimitReached=e)}get debug(){return this._debugActive}get curStep(){return this.agentContext?.step||0}destroy(){this.sessionClosed=!0,this.sync()}incTag(t){e.tagsData[this.reqTag][t]||(e.tagsData[this.reqTag][t]=0),e.tagsData[this.reqTag][t]++}async sync(){(this.reqTagOwner&&this.sessionClosed||this.circularLimitReached)&&(No.log(">>>>>>>>>>>> deleting tagsData",this.reqTag),delete e.tagsData[this.reqTag]),this.agentContext.sync()}getWaitingComponents(){const e=this.agentContext;return Object.values(e?.components||[]).filter((e=>1==e?.ctx?.active)).filter((e=>e?.ctx?.status&&void 0!==typeof e?.ctx?.output))}getExclusiveActiveComponents(){const e=this.agentContext;return Object.values(e?.components||[]).filter((e=>1==e?.ctx?.active)).filter((e=>1==e?.ctx?.exclusive))}readState(e,t=!1){if(!this._debugActive||!e)return null;const s=this,n=this.agent,o=s.agentContext,r=s.xDebugPendingInject||Object.values(o?.components||[]);let a;a=r.filter((e=>1==e?.ctx?.active&&1==e?.ctx?.exclusive)),(!a||0==a.length)&&(a=r.filter((e=>1==e?.ctx?.active||!e?.ctx?.output?._error&&Array.isArray(e?.ctx?._job_components)&&e?.ctx?._job_components.length>0))),r.filter((e=>1==e?.ctx?.active&&e?.ctx?.status&&void 0!==typeof e?.ctx?.output)),r.filter((e=>1==e?.ctx?.active&&!e?.ctx?.status));let i={};for(let e of r)i[e.id]=e.ctx;let c=e;(!a||0==a.length)&&(c=null,s.sessionClosed=!0);const l=Object.values(o?.components||[]).filter((e=>1==e?.ctx?.active&&!e?.ctx?.alwaysActive)),u=Object.values(o?.components||[]).filter((e=>!e?.ctx?.output?._error&&Array.isArray(e?.ctx?._job_components)&&e?.ctx?._job_components.length>0));if(0==l.length&&0==u.length&&(s.sessionClosed=!0),s.circularLimitReached){const e=`Circular Calls Limit Reached on ${s.checkCircularLimit()}. Current agent circular limit is ${n.circularLimit}`;return s.sessionClosed=!0,{state:i,dbgSession:c,sessionClosed:s.sessionClosed,error:e}}const p=this.curStep>=1?this.curStep-1:0;if(t){const e={};for(let t in i){const s=i[t];s.step>=p&&(e[t]=s)}i=e}return{state:i,dbgSession:c,sessionClosed:s.sessionClosed,step:p}}async runCycle(){No.debug(`runCycle agentId=${this.agent.id} wfReqId=${this.workflowReqId}  reqTag=${this.reqTag} session=${this.xDebugRun} cycleId=${this.processID}`);const t=this,s=this.agent,n=t.agentContext,o=t.xDebugPendingInject||Object.values(n?.components||[]);let r;r=o.filter((e=>1==e?.ctx?.active&&1==e?.ctx?.exclusive)),(!r||0==r.length)&&(r=o.filter((e=>1==e?.ctx?.active||!e?.ctx?.output?._error&&Array.isArray(e?.ctx?._job_components)&&e?.ctx?._job_components.length>0)));const a=o.filter((e=>1==e?.ctx?.active&&e?.ctx?.status&&void 0!==typeof e?.ctx?.output)),i=o.filter((e=>1==e?.ctx?.active&&!e?.ctx?.status||!e?.ctx?.output?._error&&Array.isArray(e?.ctx?._job_components)&&e?.ctx?._job_components.length>0));let c;if((!r||0==r.length)&&(t.sessionClosed=!0,c={state:{sessionClosed:!0},dbgSession:null,expiredDbgSession:t.xDebugId,sessionClosed:!0}),!c&&r.length==a.length&&n.sessionResult&&(t.sessionClosed=!0,c={state:{sessionClosed:!0},dbgSession:null,expiredDbgSession:t.xDebugId,sessionClosed:!0}),!c&&i.length>0){const e=[];for(let n of i){const o=t.xDebugPendingInject?n.ctx.input:void 0;e.push(s.callComponent(n.ctx.sourceId,n.id,o))}const r=await Promise.all(e),a=1==r.length?r[0]:r;t.xDebugPendingInject=null;const l=Object.values(n?.components||[]).filter((e=>1==e?.ctx?.active)),u=Object.values(n?.components||[]).filter((e=>!e?.ctx?.output?._error&&Array.isArray(e?.ctx?._job_components)&&e?.ctx?._job_components.length>0));o.filter((e=>e?.ctx?.status&&void 0!==typeof e?.ctx?.output)).length==l.length&&(n.sessionResult=!0);let p=r.flat().filter((e=>e.id&&e.result&&!e.result._missing_inputs&&!s.connections.find((t=>t.sourceId==e.id)))),m=r.flat().filter((e=>e.id&&(e.error||e.result?._error)));m=m.filter((e=>!n?.components?.[e.id]?.ctx?.runtimeData?._ChildLoopData)),n.sessionResult&&0==p.length&&t.sessionClosed&&(p=m),n.sessionResults=p,c={state:a,dbgSession:t.xDebugRun,sessionResult:t.agentContext.sessionResult,sessionResults:t.agentContext.sessionResults,errorResults:m,sessionClosed:0==l.length&&0==u.length}}else t.sessionClosed=!0,c={state:{sessionClosed:!0},dbgSession:null,expiredDbgSession:t.xDebugId,sessionClosed:!0};if(this.checkCircularLimit(),c.sessionResults&&e.processResults[this.processID].sessionResults.push(c.sessionResults),c.errorResults&&e.processResults[this.processID].errorResults.push(c.errorResults),c?.sessionClosed||this.circularLimitReached){const e=this.processResults();c.finalResult=e,t.sessionClosed=!0}return this.incStep(),this.sync(),c}processResults(){let t={error:"Error processing results"};const s=e.processResults[this.processID].sessionResults,n=e.processResults[this.processID].errorResults;if(this.circularLimitReached)t={error:`Circular Calls Limit Reached on ${this.circularLimitReached}. Current circular limit is ${this.agent.circularLimit}`};else{let e=[s,n].flat(1/0);(!e||0==e.length)&&(e=n.flat(1/0)),t=e.reduce(((e,t)=>(e.seen[t.id]||(e.result.push(t),e.seen[t.id]=!0),e)),{seen:{},result:[]}).result.filter((e=>!e.result?._exclude))}return delete e.processResults[this.processID],this.sync(),t}checkCircularLimit(){if(this.circularLimitReached)return this.agentContext.circularLimitReached;for(let t in e.tagsData[this.reqTag])if(e.tagsData[this.reqTag][t]>this.agent.circularLimit)return this.sessionClosed=!0,this.agentContext.circularLimitReached=t,t;return!1}async injectDebugOutput(e){if(this.xDebugPendingInject){const t=this.xDebugPendingInject.find((t=>t.id==e));if(t?.ctx?.output){let e=!0;for(let s in t.ctx.output)if(""!=t.ctx.output[s]){e=!1;break}return e?null:t.ctx.output}}}getRuntimeData(e){const t=this.getComponentData(e);return t&&t.runtimeData||{}}updateRuntimeData(e,t){const s=this.getComponentData(e);s&&(s.runtimeData={...s.runtimeData,...t},this.sync())}saveRuntimeComponentData(e,t){this.updateComponent(e,{runtimeData:t})}incStep(){this.agentContext.incStep()}updateComponent(e,t){this.agentContext.updateComponent(e,t)}resetComponent(e){this.agentContext.resetComponent(e)}getComponentData(e){return this.agentContext.getComponentData(e)}};Eo(jo,"processResults",{}),Eo(jo,"tagsData",{}),Eo(jo,"dummy",$o);let Uo=jo;!function(){const e=C.totalmem(),t=C.freemem(),s=e-t;(e/1024**3).toFixed(2),(t/1024**3).toFixed(2),(s/1024**3).toFixed(2),(s/e*100).toFixed(2)}();const Bo=function(){const e=C.cpus();let t=0,s=0,n=0,o=0,r=0,a=0;for(let a of e)t+=a.times.user,s+=a.times.nice,n+=a.times.sys,o+=a.times.idle,r+=a.times.irq;return a=t+s+n+o+r,{user:t/a*100,sys:n/a*100,idle:o/a*100,load:100-o/a*100}}();var Go=Object.defineProperty,Vo=(e,t,s)=>((e,t,s)=>t in e?Go(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Jo=Je("Agent");class Fo{constructor(e,t,s,n){this.id=e,this.agentSettings=s,Vo(this,"name"),Vo(this,"data"),Vo(this,"teamId"),Vo(this,"components"),Vo(this,"connections"),Vo(this,"endpoints",{}),Vo(this,"sessionId"),Vo(this,"sessionTag",""),Vo(this,"callerSessionId"),Vo(this,"apiBasePath","/api"),Vo(this,"agentRuntime"),Vo(this,"usingTestDomain",!1),Vo(this,"domain",""),Vo(this,"debugSessionEnabled",!1),Vo(this,"circularLimit",100),Vo(this,"version",""),Vo(this,"agentVariables",{}),Vo(this,"_kill",!1),Vo(this,"async",!1),Vo(this,"jobID",""),Vo(this,"planInfo",{}),Vo(this,"agentRequest");const o="string"==typeof t?JSON.parse(t):t;this.data=o.data,this.name=this.data.name,this.version=this.data.agentVersion||"",this.teamId=this.data.teamId,this.connections=this.data.connections,this.debugSessionEnabled=this.data.debugSessionEnabled,this.agentVariables=this.data.variables||{};const r=this.data.components.filter((e=>"APIEndpoint"==e.name));for(let e of r){let t=e.data.method||"POST";t=t.toUpperCase(),this.endpoints[`${this.apiBasePath}/${e.data.endpoint}`]||(this.endpoints[`${this.apiBasePath}/${e.data.endpoint}`]={}),this.endpoints[`${this.apiBasePath}/${e.data.endpoint}`][t]=e}this.components={};for(let e of this.data.components)this.components[e.id]=e;for(let e of this.data.connections){const t=this.components[e.sourceId],s=this.components[e.targetId],n=e.sourceIndex,o=e.targetIndex;t.outputs[n].next||(t.outputs[n].next=[]),t.outputs[n].next.push(s.id),s.inputs[o].prev||(s.inputs[o].prev=[]),s.inputs[o].prev.push(t.id)}this.tagAsyncComponents(),n&&this.setRequest(n)}setRequest(e){if(this.agentRequest)return;this.agentRequest=e,this.agentRequest=e;const t=function(){const e=new Date;return`${e.getFullYear()}-${String(e.getMonth()+1).padStart(2,"0")}-${String(e.getDate()).padStart(2,"0")}-${String(e.getHours()).padStart(2,"0")}-${String(e.getMinutes()).padStart(2,"0")}-${String(e.getSeconds()).padStart(2,"0")}`}();this.sessionId="rt-"+(this.agentRequest.sessionID||t+"."+ne());const s=this?.agentRequest?.headers["x-session-tag"];s&&(this.sessionTag+=this.sessionTag?`,${s}`:s);var n=new RegExp(`^/v[0-9]+(.[0-9]+)?${this.apiBasePath}/(.*)`);this.agentRequest?.path?.startsWith(`${this.apiBasePath}/`)||this.agentRequest?.path?.match(n)?(this.agentRuntime=new Uo(this),this.callerSessionId=this?.agentRequest?.headers["x-caller-session-id"]?.substring(0,256)||this.agentRuntime.workflowReqId||this.sessionId):this.agentRuntime=Uo.dummy}kill(){this._kill=!0}async parseVariables(){if("object"==typeof this.agentVariables)for(let e in this.agentVariables){const t=this.agentVariables[e];t.startsWith("{{")&&t.endsWith("}}")&&(this.agentVariables[e]=await ts(t).parseTeamKeysAsync(this.teamId).asyncResult)}}async process(e,t){let s;const n=Po.log(this,null,{sourceId:e,componentId:"AGENT",domain:this.domain,input:t,workflowID:this.agentRuntime.workflowReqId,processID:this.agentRuntime.processID,inputTimestamp:(new Date).toISOString(),sessionID:this.callerSessionId,tags:this.sessionTag}),o=this.agentRequest.method.toUpperCase(),r=this.endpoints[e]?.[o];if(this.agentRuntime.debug){if(!r&&"/api/"!=this.agentRequest.path)throw n&&Po.log(this,n,{error:`Endpoint ${o} ${e} Not Found`}),new Error(`Endpoint ${o} ${e} Not Found`);let t;if(t||(t=await this.agentRuntime.runCycle()),t&&typeof t?.state<"u")return this.agentRuntime.sync(),t?.finalResult&&(t.finalResult=await this.postProcess(t.finalResult).catch((e=>({error:e})))),t}if(!r)throw n&&Po.log(this,n,{error:`Endpoint ${o} ${e} Not Found`}),new Error(`Endpoint ${o} ${e} Not Found`);let a;this.agentRuntime.updateComponent(r.id,{active:!0,input:t,sourceId:null});do{a=await this.agentRuntime.runCycle();const e=Math.floor(Bo.load*this.planInfo?.maxLatency||0);await ae(30+e)}while(!a?.finalResult&&!this._kill);if(this._kill)return Jo.warn(`Agent ${this.id} was killed`),{error:"Agent killed"};if(s=await this.postProcess(a?.finalResult).catch((e=>({error:e}))),this.agentRuntime.circularLimitReached){const e=this.agentRuntime.circularLimitReached;throw s={error:`Circular Calls Limit Reached on ${e}. Current circular limit is ${this.circularLimit}`},new Error(`Circular Calls Limit Reached on ${e}. Current circular limit is ${this.circularLimit}`)}return n&&Po.log(this,n,{outputTimestamp:""+Date.now(),result:s}),this.updateTasksCount(),this.agentRuntime.debug?{state:s,dbgSession:null,sessionClosed:!1}:s}async updateTasksCount(){}async postProcess(e){Array.isArray(e)&&(e=e.flat(1/0)),Array.isArray(e)||(e=[e]);for(let t=0;t<e.length;t++){const s=e[t];if(!s)continue;s._debug&&delete s._debug,s._debug_time&&delete s._debug_time;const n=this.components[s.id];if(!n)continue;const o=Co[n.name];if(!o)continue;const r=await o.postProcess(s,n,this).catch((e=>({error:e})));e[t]=r}return 1==e.length&&(e=e[0]),e}hasLoopAncestor(e){if(!e.prev)return!1;for(let t of e.prev){const e=this.components[t];if("ForEach"==e.name)return!0;for(let t of e.inputs)if(this.hasLoopAncestor(t))return!0}}clearChildLoopRuntimeComponentData(e){const t=this.components[e],s=this.agentRuntime.getRuntimeData(e);if(s._ChildLoopData)for(let e of t.inputs)this.hasLoopAncestor(e)&&delete s.input[e.name]}getComponentMissingInputs(e,t){let s=[];const n=this.components[e];if(Co[n.name].alwaysActive)return s;const o=this.findReadablePredecessors(e),r={};for(let e of o)e&&(r[e.input.name]=e);const a=this.connections.filter((t=>t.targetId==e)).map((e=>e.targetIndex)),i=n.inputs.filter((e=>a.includes(e.index)));if(Array.isArray(i)&&i.length>0)for(let e of i)if(!e.optional){if(r[e.name]){const t=r[e.name],s=t.component,n=this.components[t.id];if(s.hasOutput(t.output.name,n,this))continue}typeof t[e.name]>"u"&&s.push(e.name)}return s}findReadablePredecessors(e){const t=this.components[e];return t.name,this.connections.filter((t=>t.targetId==e)).map((e=>{const s=this.components[e.sourceId],n=Co[s.name],o=s.outputs[e.sourceIndex],r=t.inputs[e.targetIndex];return n.hasReadOutput?{output:o,input:r,component:n,id:e.sourceId}:null})).filter((e=>null!=e))}updateStep(e,t){const s=this.agentRuntime,n=s.curStep;s.getComponentData(t),s.updateComponent(t,{step:n})}async callComponent(e,t,s){const n=this.agentRuntime,o=this.components[t],r=Co[o.name];if(this._kill)return Jo.warn(`Agent ${this.id} was killed, skipping component ${o.name}`),{id:o.id,name:o.displayName,result:null,error:"Agent killed"};if(!r)throw new Error(`Component ${o.name} not found`);if(this.agentRuntime.incTag(t),this.agentRuntime.checkCircularLimit(),this.agentRuntime.circularLimitReached)return{error:"Circular Calls Reached"};n.getComponentData(t)?.output?._missing_inputs&&n.updateComponent(t,{output:{}});const a=this.prepareComponentInput(t,s),i=Po.log(this,null,{sourceId:e||"AGENT",componentId:t,domain:this.domain,workflowID:this.agentRuntime.workflowReqId,processID:this.agentRuntime.processID,input:"APIEndpoint"==o.name?"GET"==this.agentRequest.method?this.agentRequest.query:this.agentRequest.body:a,inputTimestamp:(new Date).toISOString(),sessionID:this.callerSessionId,tags:this.sessionTag});let c=null,l=[];if(this.updateStep(e,t),n.debug&&(c=await n.injectDebugOutput(t)),!c){if(l=this.getComponentMissingInputs(t,a),l.length>0){n.updateComponent(t,{active:!0,status:"waiting"});const e=this.connections.filter((e=>e.sourceId==t))||[];for(let t of e)if("_error"==o.outputs[t.sourceIndex].name)break;c={_error:"Missing inputs : "+JSON.stringify(l),_missing_inputs:l}}if(!c){const e=await r.validateConfig(o);if(e._error)c=e;else try{await this.parseVariables(),c=await r.process({...this.agentVariables,...a},o,this),Jo.log(c)}catch(e){Jo.error("Error on component process: ",{componentId:t,name:o.name,input:a},e),c=e?.message?{Response:void 0,_error:e.message,_debug:e.message}:{Response:void 0,_error:e.toString(),_debug:e.toString()}}}}const u=this.agentRuntime.getRuntimeData(t);if(n.updateComponent(t,{output:c}),c._in_progress&&n.updateComponent(t,{active:!0,status:"in_progress"}),(c.error||c._error)&&(u?._ChildLoopData?._in_progress||this.agentRuntime.resetComponent(t),i&&Po.log(this,i,{error:c.error||c._error}),c.error))return[{id:o.id,name:o.displayName,result:null,error:c.error||c._error,_debug:c.error||c._error}];let p=[];if(c&&!c._missing_inputs){if(Po.logTask(this,1),p=await this.callNextComponents(t,c).catch((e=>({error:e,id:o.id,name:o.displayName}))),u._LoopData&&c._in_progress&&null==u._LoopData.branches){const e=Array.isArray(p)?p.length:1;c._in_progress&&(u._LoopData.branches=e,n.updateRuntimeData(t,{_LoopData:u._LoopData}))}if(p._is_leaf){delete p._is_leaf;const e=u._ChildLoopData;if(e&&e.parentId){const t=e.parentId,s=this.agentRuntime.getRuntimeData(t)._LoopData;if(s){s.result||(s.result=[]);let e=JSON.parse(JSON.stringify(p));p.result&&(p.result._exclude=!0),e=await r.postProcess(e,o,this),s.result.push(e),s.branches--,s.branches<=0&&n.updateComponent(t,{active:!0,status:""}),n.updateRuntimeData(t,{_LoopData:s})}}else{const e=this.agentRuntime.getRuntimeData(t)._LoopData;e&&1==e.loopIndex&&(e._in_progress=!1,c._in_progress=!1,n.updateComponent(t,{active:!0,status:""}),n.updateRuntimeData(t,{_LoopData:e}))}}}return!c._missing_inputs&&!c._in_progress&&(u?._ChildLoopData?._in_progress&&u._ChildLoopData?.loopIndex<u._ChildLoopData?.loopLength?(this.clearChildLoopRuntimeComponentData(t),n.updateComponent(t,{active:!0,status:"waiting"})):this.agentRuntime.resetComponent(t)),Array.isArray(p)&&(p=p.flat(1/0).filter((e=>null!=e.result))),i&&Po.log(this,i,{output:c,outputTimestamp:""+Date.now()}),[p,{id:o.id,name:o.displayName,result:c}]}JSONExpression(e,t){const s=t.split(/\.|\[|\]\.|\]\[|\]/).filter(Boolean);let n=e;for(let e of s){if(null==n)return;n=n[e]}return n}async callNextComponents(e,t){const s=this.agentRuntime,n=this.components[e];n.name;let o=this.connections.filter((t=>t.sourceId==e)).map((e=>({...e,output:t,componentData:n})));const r=s.getWaitingComponents(),a=r.map((e=>e.id)),i=Object.keys(this.agentRuntime.alwaysActiveComponents),c=this.connections.filter((e=>i.includes(e.sourceId)&&a.includes(e.targetId))).map((e=>{const t={};r.find((t=>t.id==e.targetId));const s=this.components[e.sourceId],n=Co[s.name],o=s.outputs[e.sourceIndex];return t[o.name]=n.readOutput(o.name,s,this),{...e,output:t,componentData:this.components[e.sourceId]}}));if(o=[...o,...c],!Array.isArray(o)||0==o.length)return{id:n.id,name:n.name,result:t,_is_leaf:!0};const l=o.reduce(((e,t)=>{let s=t.targetId;return e[s]||(e[s]=[]),e[s].push(t),e}),{}),u=[];for(let t in l){const n=this.components[t];if(!this.async&&n.async&&"Async"!==n.name)continue;n.name;const o=l[t];if(Array.isArray(o)&&o.length>0){const r={};for(let e of o){const t=e.output,s=e.componentData,o=s.outputs[e.sourceIndex],a=n.inputs[e.targetIndex],i=o.expression||o.name,c=i.split("."),l=s.outputs.find((e=>e.default));let u;if(o.default?u=t[o.name]:l&&(u=t[l.name]?.[o.name]),void 0===u&&c.length>=1){let e=this.JSONExpression(t,i);void 0!==e&&(u=e)}if(void 0!==u){let e=zo(r[a.name],u).filter((e=>void 0!==e));r[a.name]=1===e.length?e[0]:e}}if(!r||"{}"==JSON.stringify(r))continue;const a=this.prepareComponentInput(t,r),i=this.components[t],c=this.getComponentMissingInputs(t,a).length>0?"waiting":void 0,l=this.agentRuntime.getRuntimeData(e);let p=l._LoopData;(!p||!p._in_progress)&&(p=l._ChildLoopData),s.updateComponent(t,{active:!0,input:r,sourceId:e,status:c}),s.updateRuntimeData(t,{_ChildLoopData:p,_LoopData:null}),u.push({id:t,name:i.name,inputs:r}),c&&Po.log(this,null,{sourceId:e,componentId:t,step:this.agentRuntime.curStep+1,domain:this.domain,workflowID:this.agentRuntime.workflowReqId,processID:this.agentRuntime.processID,input:{__action:"status_update",__status:c,data:r},inputTimestamp:(new Date).toISOString(),sessionID:this.callerSessionId,tags:this.sessionTag})}}if(0==u.length)return{id:n.id,name:n.name,result:t,_is_leaf:!0};const p=await Promise.all(u);return 1==p.length?p[0]:p}prepareComponentInput(e,t){const s=this.agentRuntime.getRuntimeData(e),n=this.components[e],o=s?.input||{};let r={...o};if(t)for(let e in t){let s=t[e];r[e]=zo(o[e],s).filter((e=>void 0!==e)),1==r[e].length&&(r[e]=r[e][0])}const a=this.findReadablePredecessors(e);for(let e of a)if(e){const t=this.components[e.id],s=e.component.readOutput(e.output.name,t,this);s&&e.input?.name&&(r||(r={}),r[e.input.name]=s)}this.agentRuntime.updateRuntimeData(e,{input:r});for(let e of n.inputs)e.defaultVal&&void 0===r[e.name]&&(r[e.name]=ts(e.defaultVal).parse(this.agentVariables).result);return r}getConnectionSource(e){return this.components[e.sourceId].inputs.find((t=>t.index===e.sourceIndex))}getConnectionTarget(e){return this.components[e.targetId].inputs.find((t=>t.index===e.targetIndex))}recursiveTagAsyncComponents(e){const t=this;for(let s of e.outputs){if("Async"==e.name&&"JobID"===s.name)continue;const n=t.connections.filter((t=>t.sourceId===e.id&&t.sourceIndex===s.index));if(n)for(let e of n){const s=t.components[e.targetId];s&&(s.async=!0,this.recursiveTagAsyncComponents(s))}}}tagAsyncComponents(){const e=Object.values(this.components).filter((e=>"Async"===e.name));if(e&&0!=e.length)for(let t of e)t.async=!0,this.recursiveTagAsyncComponents(t)}}function zo(e,t){return void 0===e?[t]:(Array.isArray(e)||(e=[e]),[...e,t])}class Ko extends sn{user(e){return{write:async(t,s,n,o)=>await this.write(e.writeRequest,t,s,n,o),read:async t=>await this.read(e.readRequest,t),delete:async t=>{await this.delete(e.readRequest,t)},exists:async t=>await this.exists(e.readRequest,t),getMetadata:async t=>await this.getMetadata(e.readRequest,t),setMetadata:async(t,s)=>{await this.setMetadata(e.writeRequest,t,s)},getACL:async t=>await this.getACL(e.readRequest,t),setACL:async(t,s)=>await this.setACL(e.writeRequest,t,s)}}}var Ho=Object.defineProperty,Wo=Object.getOwnPropertyDescriptor,Qo=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?Wo(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&Ho(t,s,r),r},Yo=(e,t,s)=>((e,t,s)=>t in e?Ho(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Object.defineProperty(global,"crypto",{value:{getRandomValues:e=>c.randomBytes(e.length)}});const Xo=Je("S3Storage");class Zo extends Ko{constructor(e){if(super(),Yo(this,"name","S3Storage"),Yo(this,"client"),Yo(this,"bucket"),!en.Instance)throw new Error("SRE not initialized");this.bucket=e.bucket;const t={};e.region&&(t.region=e.region),e.accessKeyId&&e.secretAccessKey&&(t.credentials={accessKeyId:e.accessKeyId,secretAccessKey:e.secretAccessKey}),this.client=new b(t)}async read(e,t){const s=new w({Bucket:this.bucket,Key:t});try{const e=await this.client.send(s);return await ke(e.Body)}catch(e){if("NotFound"===e.name||"NoSuchKey"===e.name)return;throw Xo.error("Error reading object from S3",e.name,e.message),e}}async getMetadata(e,t){try{return await this.getS3Metadata(t)}catch(e){throw Xo.error("Error getting access rights in S3",e.name,e.message),e}}async setMetadata(e,t,s){try{let e=await this.getS3Metadata(t);e||(e={}),e={...e,...s},await this.setS3Metadata(t,e)}catch(e){throw Xo.error("Error setting access rights in S3",e),e}}async write(e,t,s,n,o){const r=e.candidate;let a={...o,"x-amz-meta-acl":Rt.from(n).addAccess(r.role,r.id,ht.Owner).ACL};const i=new A({Bucket:this.bucket,Key:t,Body:s,Metadata:this.serializeS3Metadata(a),ContentType:a.ContentType});try{await this.client.send(i)}catch(e){throw Xo.error("Error writing object to S3",e.name,e.message),e}}async delete(e,t){const s=new k({Bucket:this.bucket,Key:t});try{await this.client.send(s)}catch(e){throw Xo.error("Error deleting object from S3",e.name,e.message),e}}async exists(e,t){const s=new _({Bucket:this.bucket,Key:t});try{return await this.client.send(s),!0}catch(e){if("NotFound"===e.name||"NoSuchKey"===e.name)return!1;throw Xo.error("Error checking object existence in S3",e.name,e.message),e}}async getResourceACL(e,t){const s=await this.getS3Metadata(e);return void 0!==s?Rt.from(s?.["x-amz-meta-acl"]):(new Rt).addAccess(t.role,t.id,ht.Owner)}async getACL(e,t){try{const e=await this.getS3Metadata(t);return Rt.from(e?.["x-amz-meta-acl"])}catch(e){throw Xo.error("Error getting access rights in S3",e.name,e.message),e}}async setACL(e,t,s){try{let n=await this.getS3Metadata(t);n||(n={}),n["x-amz-meta-acl"]=Rt.from(s).addAccess(e.candidate.role,e.candidate.id,ht.Owner).ACL,await this.setS3Metadata(t,n)}catch(e){throw Xo.error("Error setting access rights in S3",e),e}}migrateMetadata(e){if(!e.agentid&&!e.teamid&&!e.userid)return e;{const t=["agentid","teamid","userid"],s=new Rt;for(let n of t){if(!e[n])continue;const t="agentid"===n?gt.Agent:"teamid"===n?gt.Team:gt.User;s.addAccess(t,e[n].toString(),[ht.Owner,ht.Read,ht.Write]),delete e[n]}s.migrated=!0;const n={"x-amz-meta-acl":s.ACL};for(let t in e)n[t]=e[t];return n}}serializeS3Metadata(e){let t={};e["x-amz-meta-acl"]&&(e["x-amz-meta-acl"]&&(t["x-amz-meta-acl"]="string"==typeof e["x-amz-meta-acl"]?e["x-amz-meta-acl"]:Rt.from(e["x-amz-meta-acl"]).serializedACL),delete e["x-amz-meta-acl"]);for(let s in e)"ContentType"!=s&&(t[s]="string"==typeof e[s]?e[s]:JSON.stringify(e[s]));return t}deserializeS3Metadata(e){let t={};for(let s in e)if("x-amz-meta-acl"!==s)try{t[s]=JSON.parse(e[s])}catch{t[s]=e[s]}else t[s]=Rt.from(e[s]).ACL;return t=this.migrateMetadata(t),t}async getS3Metadata(e){try{const t=new _({Bucket:this.bucket,Key:e}),s=await this.client.send(t),n=s.Metadata;if(!n||0===Object.keys(n).length)return{};let o=this.deserializeS3Metadata(n);return o.ContentType||(o.ContentType=s.ContentType?s.ContentType:"application/octet-stream"),o}catch(e){if("NotFound"===e.name||"NoSuchKey"===e.name)return;throw Xo.error("Error reading object metadata from S3",e.name,e.message),e}}async setS3Metadata(e,t){try{const s=new w({Bucket:this.bucket,Key:e}),n=await this.client.send(s),o=await ke(n.Body),r=this.serializeS3Metadata(t),a=new A({Bucket:this.bucket,Key:e,Body:o,Metadata:r});await this.client.send(a)}catch(e){throw Xo.error("Error setting object metadata in S3",e.name,e.message),e}}}Qo([sn.AccessControl],Zo.prototype,"read",1),Qo([sn.AccessControl],Zo.prototype,"getMetadata",1),Qo([sn.AccessControl],Zo.prototype,"setMetadata",1),Qo([sn.AccessControl],Zo.prototype,"write",1),Qo([sn.AccessControl],Zo.prototype,"delete",1),Qo([sn.AccessControl],Zo.prototype,"exists",1),Qo([sn.AccessControl],Zo.prototype,"getACL",1),Qo([sn.AccessControl],Zo.prototype,"setACL",1);class er extends it{register(){at.register(se.Storage,"S3",Zo)}}Je("LLMConnector");class tr extends Ze{user(e){if("agent"!==e.role)throw new Error("Only agents can use LLM connector");return{chatRequest:async t=>{const s=await this.prepareParams(e,t);return this.chatRequest(e.readRequest,s)},visionRequest:async(t,s)=>{const n=await this.prepareParams(e,s);return this.visionRequest(e.readRequest,t,n,e.id)},multimodalRequest:async(t,s)=>{const n=await this.prepareParams(e,s);return this.multimodalRequest(e.readRequest,t,n,e.id)},imageGenRequest:async(t,s)=>{const n=await this.prepareParams(e,s);return this.imageGenRequest(e.readRequest,t,n)},toolRequest:async t=>{const s=await this.prepareParams(e,t);return this.toolRequest(e.readRequest,s)},streamToolRequest:async t=>{const s=await this.prepareParams(e,t);return this.streamToolRequest(e.readRequest,s)},streamRequest:async t=>{const s=await this.prepareParams(e,t);return this.streamRequest(e.readRequest,s)}}}enhancePrompt(e,t){if(!e)return e;let s=e;const n={};if(t?.outputs)for(let e of t.outputs)e.default||(n[e.name]=e?.description?`<${e?.description}>`:"");const o=["_debug","_error"],r=Object.keys(n).filter((e=>!o.includes(e)));if(r.length>0){const e={};r.forEach((s=>e[s]="Classifier"===t.name?"<Boolean|String>":"<value>")),s+="\n##\nExpected output format = "+JSON.stringify(e)+"\nThe output JSON should only use the entries from the output format."}return s}postProcess(e){try{return Dt(e).tryParse()}catch{return{error:"Invalid JSON response",data:e,details:"The response from the model is not a valid JSON object. Please check the model output and try again."}}}formatToolsConfig({type:e="function",toolDefinitions:t,toolChoice:s="auto"}){throw new Error("This model does not support tools")}transformToolMessageBlocks({messageBlock:e,toolsData:t}){throw new Error("This model does not support tools")}getConsistentMessages(e){return e}async prepareParams(e,t){const s=JSON.parse(JSON.stringify(t));s.fileSources=t?.fileSources;const n=s.model,o=at.getAccountConnector(),r=at.getVaultConnector();if(!o)throw new Error("Account Connector unavailable, cannot proceed");if(!r)throw new Error("Vault Connector unavailable, cannot proceed");if(gs.isStandardLLM(n)){const o=gs.getProvider(n);s.credentials={apiKey:await r.user(e).get(o).catch((()=>""))},s.maxTokens&&(s.maxTokens=gs.adjustMaxCompletionTokens(s.model,s.maxTokens,!!s?.credentials?.apiKey));const a=gs.getBaseURL(t.model);a&&(s.baseURL=a),s.model=gs.getModelId(n)||n}else{const t=await o.getCandidateTeam(e),a=await ws.getInstance(t),i=a.getModelInfo(n);s.modelInfo=i;const c=a.getProvider(n);if(c===ps.Bedrock){const t=i.settings?.keyIDName,n=i.settings?.secretKeyName,o=i.settings?.sessionKeyName,[a,c,l]=await Promise.all([r.user(e).get(t).catch((()=>"")),r.user(e).get(n).catch((()=>"")),r.user(e).get(o).catch((()=>""))]);s.credentials={accessKeyId:a,secretAccessKey:c},l&&(s.credentials.sessionToken=l)}else if(c===ps.VertexAI){const t=i.settings?.jsonCredentialsName;let n=await r.user(e).get(t).catch((()=>""));s.credentials=JSON.parse(n)}s.maxTokens&&(s.maxTokens=a.adjustMaxCompletionTokens(n,s.maxTokens)),s.model=a.getModelId(n)||n}return s}}var sr=Object.defineProperty,nr=(e,t,s)=>((e,t,s)=>t in e?sr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class or extends tr{constructor(){super(...arguments),nr(this,"name","LLM:Echo")}async chatRequest(e,t){return{content:t?.messages?.[0]?.content,finishReason:"stop"}}async visionRequest(e,t,s){return{content:t,finishReason:"stop"}}async multimodalRequest(e,t,s){return{content:t,finishReason:"stop"}}async toolRequest(e,t){throw new Error("Echo model does not support tool requests")}async imageGenRequest(e,t,s){throw new Error("Image generation request is not supported for Echo.")}async streamToolRequest(e,t){throw new Error("Echo model does not support tool requests")}async streamRequest(e,t){throw new Error("Echo model does not support streaming")}enhancePrompt(e,t){return e}postProcess(e){try{return Dt(e).tryFullParse()}catch{return e}}}class rr{static hasSystemMessage(e){return!!Array.isArray(e)&&e?.some((e=>"system"===e.role))}static separateSystemMessages(e){return{systemMessage:e.find((e=>"system"===e.role))||{},otherMessages:e.filter((e=>"system"!==e.role))}}static async countVisionPromptTokens(e){let t=0;const s=e?.filter((e=>"text"===e.type)),n=S(s?.[0]?.text).length,o=e?.filter((e=>"image_url"===e.type));let r=0;for(const e of o){const t=e?.image_url?.url,{width:s,height:n}=await this.getImageDimensions(t);r+=this.countImageTokens(s,n)}return t=n+r,t}static async getImageDimensions(e){try{let t;if((e=>{if("string"!=typeof e)return!1;const t=e.match(/^data:([\w+\-\.]+\/[\w+\-\.]+);base64,(.*)$/);if(!t)return!1;const[,,s]=t;return Ae(s)})(e)){const s=e.replace(/^data:image\/\w+;base64,/,"");t=Buffer.from(s,"base64")}else{if(!Se(e))throw new Error("Please provide a valid image url!");{const s=await r.get(e,{responseType:"arraybuffer"});t=Buffer.from(s.data)}}const s=I(t);return{width:s?.width||0,height:s?.height||0}}catch(e){throw console.error("Error getting image dimensions",e),new Error("Please provide a valid image url!")}}static countImageTokens(e,t,s="auto"){if("low"===s)return 85;const n=Math.max(e,t),o=Math.min(e,t);let r=o;n>2048&&(r=2048/n*o),r=Math.floor(.75*r);let a=Math.ceil(r/512);return o!==r&&(a*=Math.ceil(r*(n/o)/512)),170*a+85}static removeDuplicateUserMessages(e){const t=JSON.parse(JSON.stringify(e));return t.length>1&&t[0].role===us.User&&t[1].role===us.User&&t.shift(),t.length>1&&t[t.length-1].role===us.User&&t[t.length-2].role===us.User&&t.pop(),t}}var ar=Object.defineProperty,ir=(e,t,s)=>((e,t,s)=>t in e?ar(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const cr=Je("OpenAIConnector"),lr=["image/png","image/jpeg","image/jpg","image/webp","image/gif"],ur=["gpt-4o-2024-08-06","gpt-4o-mini-2024-07-18","gpt-4-turbo","gpt-3.5-turbo"];class pr extends tr{constructor(){super(...arguments),ir(this,"name","LLM:OpenAI"),ir(this,"validImageMimeTypes",lr)}async chatRequest(e,t){const s=JSON.parse(JSON.stringify(t)),n=s?.messages||[];"json"===(s?.responseFormat||"")&&(n?.[0]?.role===us.System?n[0].content+=we:n.unshift({role:us.System,content:we}),ur.includes(s.model)?s.responseFormat={type:"json_object"}:s.responseFormat=void 0);const o=s?.credentials?.apiKey,r=new x({apiKey:o||process.env.OPENAI_API_KEY,baseURL:s.baseURL}),a={model:s.model,messages:n};void 0!==s?.maxTokens&&(a.max_tokens=s.maxTokens),void 0!==s?.temperature&&(a.temperature=s.temperature),void 0!==s?.topP&&(a.top_p=s.topP),void 0!==s?.frequencyPenalty&&(a.frequency_penalty=s.frequencyPenalty),void 0!==s?.presencePenalty&&(a.presence_penalty=s.presencePenalty),s?.stopSequences?.length&&(a.stop=s.stopSequences),void 0!==s.responseFormat&&(a.response_format=s.responseFormat);try{const e=v(n,"gpt-4")?.length;await gs.validateTokensLimit({model:s?.model,promptTokens:e,completionTokens:s?.maxTokens,hasAPIKey:!!o});const t=await r.chat.completions.create(a),i=t?.choices?.[0]?.message.content,c=t?.choices?.[0]?.finish_reason;return{content:i,finishReason:c}}catch(e){throw e}}async visionRequest(e,t,s,n){const o=JSON.parse(JSON.stringify(s)),r=o?.messages||[];"json"===(o?.responseFormat||"")&&(r?.[0]?.role===us.System?r[0].content+=we:r.unshift({role:us.System,content:we}),ur.includes(o.model)&&(o.responseFormat={type:"json_object"}));const a=n instanceof Fo?n.id:n,i=s?.fileSources||[],c=this.getValidImageFileSources(i),l=[{type:"text",text:t||""},...await this.getImageData(c,a)];r.push({role:"user",content:l});try{const e=o?.credentials?.apiKey,t=new x({apiKey:e||process.env.OPENAI_API_KEY,baseURL:o.baseURL}),s={model:o.model,messages:r};void 0!==o?.maxTokens&&(s.max_tokens=o.maxTokens),void 0!==o?.temperature&&(s.temperature=o.temperature),void 0!==o?.topP&&(s.top_p=o.topP),void 0!==o?.frequencyPenalty&&(s.frequency_penalty=o.frequencyPenalty),void 0!==o?.presencePenalty&&(s.presence_penalty=o.presencePenalty),void 0!==o?.responseFormat&&(s.response_format=o.responseFormat),o?.stopSequences?.length&&(s.stop=o.stopSequences);const n=await rr.countVisionPromptTokens(l);await gs.validateTokensLimit({model:o?.model,promptTokens:n,completionTokens:o?.maxTokens,hasAPIKey:!!e});const a=await t.chat.completions.create(s);return{content:a?.choices?.[0]?.message.content,finishReason:a?.choices?.[0]?.finish_reason}}catch(e){throw e}}async multimodalRequest(e,t,s,n){throw new Error("Multimodal request is not supported for OpenAI.")}async imageGenRequest(e,t,s,n){try{const{model:e,size:n,quality:o,n:r,responseFormat:a,style:i}=s,c={prompt:t,model:e,size:n,quality:o,n:r||1,response_format:a||"url"};i&&(c.style=i);const l=s?.credentials?.apiKey;if(!l)throw new Error("OpenAI API key is missing. Please provide a valid API key in the vault to proceed with Image Generation.");return await new x({apiKey:l,baseURL:s?.baseURL}).images.generate(c)}catch(e){throw cr.warn("Error generating image(s) with DALL·E: ",e),e}}async toolRequest(e,t){const s=JSON.parse(JSON.stringify(t)),n=s?.credentials?.apiKey,o=new x({apiKey:n||process.env.OPENAI_API_KEY,baseURL:s.baseURL}),r=s?.messages||[];let a={model:s.model,messages:r};void 0!==s?.maxTokens&&(a.max_tokens=s.maxTokens),s?.toolsConfig?.tools&&s?.toolsConfig?.tools?.length>0&&(a.tools=s?.toolsConfig?.tools),s?.toolsConfig?.tool_choice&&(a.tool_choice=s?.toolsConfig?.tool_choice);try{const e=await o.chat.completions.create(a),t=e?.choices?.[0]?.message,s=e?.choices?.[0]?.finish_reason;let n=[],r=!1;return"tool_calls"===s&&(n=t?.tool_calls?.map(((e,t)=>({index:t,id:e?.id,type:e?.type,name:e?.function?.name,arguments:e?.function?.arguments,role:"tool"})))||[],r=!0),{data:{useTool:r,message:t,content:t?.content??"",toolsData:n}}}catch(e){throw e}}async streamToolRequest(e,{model:t=be,messages:s,toolsConfig:{tools:n,tool_choice:o},apiKey:r="",baseURL:a=""}){try{const e=new x({apiKey:r||process.env.OPENAI_API_KEY,baseURL:a});if(!Array.isArray(s)||!s?.length)throw new Error("Invalid messages argument for chat completion.");cr.debug("model",t),cr.debug("messages",s);let i={model:t,messages:s,stream:!0};n&&n.length>0&&(i.tools=n),o&&(i.tool_choice=o);const c=await e.chat.completions.create(i),[l,u]=c.tee();let p,m=!1,d={},h=[],g={role:"",content:"",tool_calls:[]};for await(const e of l){if(d=e.choices[0].delta,g.role+=d?.role||"",g.content+=d?.content||"",!d?.tool_calls&&""===d?.content){p=u;break}if(d?.tool_calls){const e=d?.tool_calls?.[0],t=e?.index;h[t]={index:t,role:"tool",id:(h?.[t]?.id||"")+(e?.id||""),type:(h?.[t]?.type||"")+(e?.type||""),name:(h?.[t]?.name||"")+(e?.function?.name||""),arguments:(h?.[t]?.arguments||"")+(e?.function?.arguments||"")}}}return h?.length>0&&(m=!0),g.tool_calls=h.map((e=>({id:e.id,type:e.type,function:{name:e.name,arguments:e.arguments}}))),{data:{useTool:m,message:g,stream:p,toolsData:h}}}catch(e){return cr.warn("Error on toolUseLLMRequest: ",e),{error:e}}}async streamRequest(e,t){const s=JSON.parse(JSON.stringify(t)),n=new u,o=[],r=s?.credentials?.apiKey,a=new x({apiKey:r||process.env.OPENAI_API_KEY,baseURL:s.baseURL});cr.debug("model",s.model);let i={model:s.model,messages:s.messages,stream_options:{include_usage:!0},stream:!0};void 0!==s?.maxTokens&&(i.max_tokens=s.maxTokens),s?.toolsConfig?.tools&&s?.toolsConfig?.tools?.length>0&&(i.tools=s?.toolsConfig?.tools),s?.toolsConfig?.tool_choice&&(i.tool_choice=s?.toolsConfig?.tool_choice);try{const e=await a.chat.completions.create(i);return(async()=>{let t={},s=[];for await(const r of e){t=r.choices[0]?.delta;const e=r.usage;if(e&&o.push(e),n.emit("data",t),!t?.tool_calls&&t?.content&&n.emit("content",t?.content,t?.role),t?.tool_calls){const e=t?.tool_calls?.[0],n=e?.index;s[n]={index:n,role:"tool",id:(s?.[n]?.id||"")+(e?.id||""),type:(s?.[n]?.type||"")+(e?.type||""),name:(s?.[n]?.name||"")+(e?.function?.name||""),arguments:(s?.[n]?.arguments||"")+(e?.function?.arguments||"")}}}s?.length>0&&n.emit("toolsData",s),setTimeout((()=>{n.emit("end",s,o)}),100)})(),n}catch(e){throw e}}formatToolsConfig({type:e="function",toolDefinitions:t,toolChoice:s="auto"}){let n=[];return"function"===e&&(n=t.map((e=>{const{name:t,description:s,properties:n,requiredFields:o}=e;return{type:"function",function:{name:t,description:s,parameters:{type:"object",properties:n,required:o}}}}))),n?.length>0?{tools:n,tool_choice:s||"auto"}:{}}transformToolMessageBlocks({messageBlock:e,toolsData:t}){const s=[];if(e){const t={...e,content:"object"==typeof e.content?JSON.stringify(e.content):e.content};if(t.tool_calls)for(let e of t.tool_calls)e.function.arguments="object"==typeof e.function.arguments?JSON.stringify(e.function.arguments):e.function.arguments;s.push(t)}const n=t.map((e=>({tool_call_id:e.id,role:us.Tool,name:e.name,content:"string"==typeof e.result?e.result:JSON.stringify(e.result)})));return[...s,...n]}getConsistentMessages(e){return rr.removeDuplicateUserMessages(e).map((e=>{const t={...e};let s="";return e?.parts?s=e.parts.map((e=>e?.text||"")).join(" "):Array.isArray(e?.content)?s=e.content.map((e=>e?.text||"")).join(" "):e?.content&&(s=e.content),t.content=s,t}))}getValidImageFileSources(e){const t=[];for(let s of e)this.validImageMimeTypes.includes(s?.mimetype)&&t.push(s);if(0===t?.length)throw new Error(`Unsupported file(s). Please make sure your file is one of the following types: ${this.validImageMimeTypes.join(", ")}`);return t}async getImageData(e,t){try{const s=[];for(let n of e){const e=(await n.readData(Ct.agent(t))).toString("base64"),o=`data:${n.mimetype};base64,${e}`;s.push({type:"image_url",image_url:{url:o}})}return s}catch(e){throw e}}}var mr=Object.defineProperty,dr=(e,t,s)=>((e,t,s)=>t in e?mr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("GoogleAIConnector");const hr="gemini-1.5-pro",gr=["gemini-1.5-pro-exp-0801","gemini-1.5-pro-latest","gemini-1.5-pro-latest","gemini-1.5-pro","gemini-1.5-pro-001","gemini-1.5-flash-latest","gemini-1.5-flash-001","gemini-1.5-flash"],yr=gr,fr=["video/mp4","video/mpeg","video/mov","video/avi","video/x-flv","video/mpg","video/webm","video/wmv","video/3gpp","image/png","image/jpeg","image/jpg","image/webp","image/heic","image/heif","audio/wav","audio/mp3","audio/aiff","audio/aac","audio/ogg","audio/flac","application/pdf","application/x-javascript","application/x-typescript","application/x-python-code","application/json","application/rtf","text/plain","text/html","text/css","text/javascript","text/x-typescript","text/csv","text/markdown","text/x-python","text/xml","text/rtf"],br=["image/png","image/jpeg","image/jpg","image/webp","image/heic","image/heif"];class wr extends tr{constructor(){super(...arguments),dr(this,"name","LLM:GoogleAI"),dr(this,"validMimeTypes",{all:fr,image:br})}async chatRequest(e,t){const s=JSON.parse(JSON.stringify(t));let n="";const o=s?.model||hr,r=s?.credentials?.apiKey;let a=s?.messages||[],i="";const{systemMessage:c,otherMessages:l}=rr.separateSystemMessages(a);if("content"in c&&(i=c.content),a=l,"json"===(s?.responseFormat||"")&&(i+=we,yr.includes(o)&&(s.responseMimeType="application/json")),a?.length>0&&(n+=a.map((e=>e?.parts?.[0]?.text||"")).join("\n")),gr.includes(o)||(n=`${n}\n${i}`),!n)throw new Error("Prompt is required!");const u={model:o},p={};void 0!==s.maxTokens&&(p.maxOutputTokens=s.maxTokens),void 0!==s.temperature&&(p.temperature=s.temperature),void 0!==s.topP&&(p.topP=s.topP),void 0!==s.topK&&(p.topK=s.topK),s.stopSequences?.length&&(p.stopSequences=s.stopSequences),i&&(u.systemInstruction=i),s.responseMimeType&&(p.responseMimeType=s.responseMimeType),Object.keys(p).length>0&&(u.generationConfig=p);try{const e=new P(r).getGenerativeModel(u),{totalTokens:s}=await e.countTokens(n);await gs.validateTokensLimit({model:o,promptTokens:s,completionTokens:t?.maxTokens,hasAPIKey:!!r});const a=await((await e.generateContent(n))?.response),i=a?.text();return{content:i,finishReason:a.candidates[0].finishReason}}catch(e){throw e}}async visionRequest(e,t,s,n){const o=JSON.parse(JSON.stringify(s)),r=o?.model||"gemini-pro-vision",a=o?.credentials?.apiKey,i=s?.fileSources||[],c=n instanceof Fo?n.id:n;let l=t;const u=this.getValidFileSources(i,"image").map((e=>async()=>{try{return{url:(await this.uploadFile({fileSource:e,apiKey:a,agentId:c})).url,mimetype:e.mimetype}}catch{return null}}));try{const e=await oe(u);if(!e||0===e?.length)throw new Error("There is an issue during upload file in Google AI Server!");const t=this.getFileData(e);let s="";"json"===(o?.responseFormat||"")&&(s+=we,yr.includes(r)&&(o.responseMimeType="application/json")),gr.includes(r)||(l=`${l}\n${s}`);const n=1===t.length?[...t,{text:l}]:[l,...t],i={model:r},c={};void 0!==o.maxTokens&&(c.maxOutputTokens=o.maxTokens),void 0!==o.temperature&&(c.temperature=o.temperature),void 0!==o.topP&&(c.topP=o.topP),void 0!==o.topK&&(c.topK=o.topK),o.stopSequences?.length&&(c.stopSequences=o.stopSequences),Object.keys(c).length>0&&(i.generationConfig=c);const p=new P(a).getGenerativeModel(i),{totalTokens:m}=await p.countTokens(n);await gs.validateTokensLimit({model:r,promptTokens:m,completionTokens:o?.maxTokens,hasAPIKey:!!a});const d=await((await p.generateContent(n))?.response),h=d?.text();return{content:h,finishReason:d.candidates[0].finishReason}}catch(e){throw e}}async multimodalRequest(e,t,s,n){const o=JSON.parse(JSON.stringify(s)),r=o?.model||hr,a=o?.credentials?.apiKey,i=s?.fileSources||[],c=n instanceof Fo?n.id:n;let l=t;const u=this.getValidFileSources(i,"all");if(u.some((e=>e?.mimetype?.includes("video")))&&u.length>1)throw new Error("Only one video file is supported at a time.");const p=u.map((e=>async()=>{try{return{url:(await this.uploadFile({fileSource:e,apiKey:a,agentId:c})).url,mimetype:e.mimetype}}catch{return null}})),m=await oe(p);if(m&&0===m?.length)throw new Error("There is an issue during upload file in Google AI Server!");const d=this.getFileData(m);let h="";"json"===(o?.responseFormat||"")&&(h+=we,yr.includes(r)&&(o.responseMimeType="application/json")),gr.includes(r)||(l=`${l}\n${h}`);const g=1===d.length?[...d,{text:l}]:[l,...d],y={model:r},f={};void 0!==o.maxTokens&&(f.maxOutputTokens=o.maxTokens),void 0!==o.temperature&&(f.temperature=o.temperature),void 0!==o.topP&&(f.topP=o.topP),void 0!==o.topK&&(f.topK=o.topK),o.stopSequences?.length&&(f.stopSequences=o.stopSequences),Object.keys(f).length>0&&(y.generationConfig=f);try{const e=new P(a).getGenerativeModel(y),{totalTokens:t}=await e.countTokens(g);await gs.validateTokensLimit({model:r,promptTokens:t,completionTokens:o?.maxTokens,hasAPIKey:!!a});const s=await((await e.generateContent(g))?.response),n=s?.text();return{content:n,finishReason:s.candidates[0].finishReason}}catch(e){throw e}}async toolRequest(e,t){const s=JSON.parse(JSON.stringify(t));try{let e,t="";const n=s?.messages||[];if(rr.hasSystemMessage(n)){const s=rr.separateSystemMessages(n),o=s.systemMessage?.content;t="string"==typeof o?o:"",e=s.otherMessages}else e=n;const o=s?.credentials?.apiKey,r={};s?.maxTokens&&(r.maxOutputTokens=s.maxTokens);const a={model:s.model};Object.keys(r).length>0&&(a.generationConfig=r);const i=new P(o).getGenerativeModel(a),c={contents:e};t&&(c.systemInstruction=t),s?.toolsConfig?.tools&&(c.tools=s?.toolsConfig?.tools),s?.toolsConfig?.tool_choice&&(c.toolConfig={functionCallingConfig:{mode:s?.toolsConfig?.tool_choice||"auto"}});const l=await(await i.generateContent(c)).response,u=l.text(),p=l.candidates[0]?.content?.parts?.filter((e=>e.functionCall));let m=[],d=!1;return p&&p.length>0&&(m=p.map(((e,t)=>({index:t,id:`tool-${t}`,type:"function",name:e.functionCall.name,arguments:JSON.stringify(e.functionCall.args),role:us.Assistant}))),d=!0),{data:{useTool:d,message:{content:u},content:u,toolsData:m}}}catch(e){throw e}}async imageGenRequest(e,t,s,n){throw new Error("Image generation request is not supported for GoogleAI.")}async streamToolRequest(e,{model:t=be,messages:s,toolsConfig:{tools:n,tool_choice:o},apiKey:r=""}){throw new Error("streamToolRequest() is Deprecated!")}async streamRequest(e,t){const s=JSON.parse(JSON.stringify(t)),n=new u,o=s?.credentials?.apiKey;let r,a="";const i=s?.messages||[];if(rr.hasSystemMessage(i)){const e=rr.separateSystemMessages(i),t=e.systemMessage?.content;a="string"==typeof t?t:"",r=e.otherMessages}else r=i;const c={};s?.maxTokens&&(c.maxOutputTokens=s.maxTokens);const l={model:s.model};Object.keys(c).length>0&&(l.generationConfig=c);const p=new P(o).getGenerativeModel(l),m={contents:r};a&&(m.systemInstruction=a),s?.toolsConfig?.tools&&(m.tools=s?.toolsConfig?.tools),s?.toolsConfig?.tool_choice&&(m.toolConfig={functionCallingConfig:{mode:s?.toolsConfig?.tool_choice||"auto"}});try{const e=await p.generateContentStream(m);let t=[];return(async()=>{for await(const s of e.stream){const e=s.text();if(n.emit("content",e),s.candidates[0]?.content?.parts){const e=s.candidates[0].content.parts.filter((e=>e.functionCall));e.length>0&&(t=e.map(((e,t)=>({index:t,id:`tool-${t}`,type:"function",name:e.functionCall.name,arguments:JSON.stringify(e.functionCall.args),role:us.Assistant}))),n.emit("toolsData",t))}}setTimeout((()=>{n.emit("end",t)}),100)})(),n}catch(e){throw e}}formatToolsConfig({toolDefinitions:e,toolChoice:t="auto"}){return{tools:e.map((e=>{const{name:t,description:s,properties:n,requiredFields:o}=e;return{functionDeclarations:[{name:this.sanitizeFunctionName(t),description:s||"",parameters:{type:"OBJECT",properties:n&&Object.keys(n).length>0?n:{dummy:{type:"string"}},required:o||[]}}]}})),toolChoice:{type:t}}}transformToolMessageBlocks({messageBlock:e,toolsData:t}){const s=[];if(e){const t=[];if("string"==typeof e.content?t.push({text:e.content}):Array.isArray(e.content)&&t.push(...e.content),e.parts){const s=e.parts.filter((e=>e.functionCall));s.length>0&&t.push(...s.map((e=>({functionCall:{name:e.functionCall.name,args:JSON.parse(e.functionCall.args)}}))))}s.push({role:e.role,parts:t})}const n=t.map((e=>({role:us.Function,parts:[{functionResponse:{name:e.name,response:{name:e.name,content:"string"==typeof e.result?e.result:JSON.stringify(e.result)}}}]})));return[...s,...n]}sanitizeFunctionName(e){if(null==e)return"_unnamed_function";let t=e.replace(/[^a-zA-Z0-9_.-]/g,"");return/^[a-zA-Z_]/.test(t)||(t="_"+t),""===t&&(t="_unnamed_function"),t=t.slice(0,64),t}async uploadFile({fileSource:e,apiKey:t,agentId:s}){try{if(!t||!e?.mimetype)throw new Error("Missing required parameters to save file for Google AI!");const n=C.tmpdir(),o=ne(),r=T.join(n,o),a=await e.readData(Ct.agent(s));await L.promises.writeFile(r,a);const i=new R(t),c=await i.uploadFile(r,{mimeType:e.mimetype,displayName:o}),l=c.file.name;let u=await i.getFile(l);for(;u.state===O.PROCESSING;)process.stdout.write("."),await new Promise((e=>setTimeout(e,1e4))),u=await i.getFile(l);if(u.state===O.FAILED)throw new Error("File processing failed.");return await L.promises.unlink(r),{url:c.file.uri||""}}catch(e){throw new Error(`Error uploading file for Google AI: ${e.message}`)}}getConsistentMessages(e){return rr.removeDuplicateUserMessages(e).map((e=>{const t={...e};let s="";switch(t.role){case us.Assistant:case us.System:t.role=us.Model;break;case us.User:break;default:t.role=us.User}return t?.parts?s=t.parts.map((e=>e?.text||"")).join(" "):Array.isArray(t?.content)?s=t.content.map((e=>e?.text||"")).join(" "):t?.content&&(s=t.content),t.parts=[{text:s}],delete t.content,t}))}getValidFileSources(e,t){const s=[];for(let n of e)this.validMimeTypes[t].includes(n?.mimetype)&&s.push(n);if(0===s?.length)throw new Error(`Unsupported file(s). Please make sure your file is one of the following types: ${this.validMimeTypes[t].join(", ")}`);return s}getFileData(e){try{const t=[];for(let s of e)t.push({fileData:{mimeType:s.mimetype,fileUri:s.url}});return t}catch(e){throw e}}}var Ar=Object.defineProperty,kr=(e,t,s)=>((e,t,s)=>t in e?Ar(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const _r=Je("AnthropicAIConnector"),xr=["image/png","image/jpeg","image/jpg","image/webp","image/gif"],vr="Please provide an API key for AnthropicAI";class Sr extends tr{constructor(){super(...arguments),kr(this,"name","LLM:AnthropicAI"),kr(this,"validImageMimeTypes",xr)}async chatRequest(e,t){const s=JSON.parse(JSON.stringify(t));let n=s?.messages||[],o="";const{systemMessage:r,otherMessages:a}=rr.separateSystemMessages(n);"content"in r&&(o=r?.content),n=a;const i=s?.responseFormat||"";"json"===i&&(o+=we,n.push({role:us.Assistant,content:"{"}));const c=s?.credentials?.apiKey;if(!c)throw new Error(vr);const l=new M({apiKey:c}),u={model:s.model,messages:n,max_tokens:s?.maxTokens||gs.getMaxCompletionTokens(s?.model,!!c)};o&&(u.system=o),void 0!==s?.temperature&&(u.temperature=s.temperature),void 0!==s?.topP&&(u.top_p=s.topP),void 0!==s?.topK&&(u.top_k=s.topK),s?.stopSequences?.length&&(u.stop_sequences=s.stopSequences);try{const e=await l.messages.create(u);let t=e.content?.[0]?.text;const s=e?.stop_reason;return"json"===i&&(t=`{${t}`),{content:t,finishReason:s}}catch(e){throw e}}async visionRequest(e,t,s,n){const o=JSON.parse(JSON.stringify(s));let r=o?.messages||[];const a=n instanceof Fo?n.id:n,i=s?.fileSources||[],c=this.getValidImageFileSources(i),l=[{type:"text",text:t},...await this.getImageData(c,a)];r.push({role:us.User,content:l});const{systemMessage:u,otherMessages:p}=rr.separateSystemMessages(r);r=p,"json"===(o?.responseFormat||"")&&r.push({role:us.Assistant,content:"{"});const m=o?.credentials?.apiKey;if(!m)throw new Error(vr);const d=new M({apiKey:m}),h={model:o.model,messages:r,max_tokens:o?.maxTokens||gs.getMaxCompletionTokens(o?.model,!!m)};void 0!==o?.temperature&&(h.temperature=o.temperature),void 0!==o?.topP&&(h.top_p=o.topP),void 0!==o?.topK&&(h.top_k=o.topK),o?.stopSequences?.length&&(h.stop_sequences=o.stopSequences);try{const e=await d.messages.create(h);let t=e?.content?.[0]?.text;const s=e?.stop_reason;return{content:t,finishReason:s}}catch(e){throw e}}async multimodalRequest(e,t,s,n){throw new Error("Multimodal request is not supported for OpenAI.")}async toolRequest(e,t){const s=JSON.parse(JSON.stringify(t));try{const e=s?.credentials?.apiKey;if(!e)throw new Error(vr);const t=new M({apiKey:e}),n={model:s?.model,messages:[],max_tokens:s?.maxTokens||gs.getMaxCompletionTokens(s?.model,!!e)};let o=s?.messages||[];if(rr.hasSystemMessage(o)){const{systemMessage:e,otherMessages:t}=rr.separateSystemMessages(o);n.system=e?.content||"",o=t}n.messages=o,s?.toolsConfig?.tools&&s?.toolsConfig?.tools.length>0&&(n.tools=s?.toolsConfig?.tools);const r=await t.messages.create(n),a={role:r?.role||us.User,content:r?.content||""},i=r?.stop_reason;let c=[],l=!1;if("tool_use"===i){const e=r?.content?.filter((e=>"tool_use"===e.type));if(0===e?.length)return;a.content=e,e.forEach(((e,t)=>{c.push({index:t,id:e?.id,type:"function",name:e?.name,arguments:e?.input,role:r?.role})})),l=!0}const u=r?.content?.[0]?.text;return{data:{useTool:l,message:a,content:u,toolsData:c}}}catch(e){throw e}}async imageGenRequest(e,t,s,n){throw new Error("Image generation request is not supported for AnthropicAI.")}async streamToolRequest(e,{model:t="claude-3-5-haiku-latest",messages:s,toolsConfig:{tools:n,tool_choice:o},apiKey:r=""}){throw new Error("streamToolRequest() is Deprecated!")}async streamRequest(e,t){const s={...t};try{const e=new u,t=[],n=s?.credentials?.apiKey;if(!n)throw new Error(vr);const o=new M({apiKey:n}),r={model:s?.model,messages:[],max_tokens:s?.maxTokens||gs.getMaxCompletionTokens(s?.model,!!n)};_r.debug("Using Model",s?.model,"Max Tokens=",s?.maxTokens);let a,i=s?.messages||[];if(rr.hasSystemMessage(i)){const{systemMessage:e,otherMessages:t}=rr.separateSystemMessages(i);r.system=e?.content||"","string"==typeof r.system&&(r.system=[{type:"text",text:r.system}]),r.system.unshift({type:"text",text:'If you need to call a function, Do NOT inform the user that you are about to do so, and do not thank the user after you get the response. Just say something like "Give me a moment...", then when you get the response, Just continue answering the user without saying anything about the function you just called'}),s?.cache&&(r.system[r.system.length-1].cache_control={type:"ephemeral"}),i=t}r.messages=i,s?.toolsConfig?.tools&&s?.toolsConfig?.tools.length>0&&(r.tools=JSON.parse(JSON.stringify(s?.toolsConfig?.tools)),s?.cache&&(r.tools[r.tools.length-1].cache_control={type:"ephemeral"})),s?.toolsConfig?.tool_choice&&(r.tool_choice=s?.toolsConfig?.tool_choice),a=s?.cache?o.beta.promptCaching.messages.stream(r,{headers:{"anthropic-beta":"prompt-caching-2024-07-31"}}):o.messages.stream(r),a.on("streamEvent",(e=>{e.message}));let c=[];a.on("error",(t=>{e.emit("error",t)})),a.on("text",(t=>{e.emit("content",t)}));const l=s?.cache?"finalPromptCachingBetaMessage":"finalMessage";return a.on(l,(s=>{const n=s?.content?.filter((e=>"tool_use"===e.type));if(n?.length>0&&(n.forEach(((e,t)=>{c.push({index:t,id:e?.id,type:"function",name:e?.name,arguments:e?.input,role:s?.role})})),e.emit("toolsData",c)),s?.usage){const e=s.usage;t.push({prompt_tokens:e.input_tokens+e.cache_creation_input_tokens+e.cache_read_input_tokens,completion_tokens:e.output_tokens,total_tokens:e.input_tokens+e.output_tokens+e.cache_read_input_tokens+e.cache_creation_input_tokens,prompt_tokens_details:{cached_tokens:e.cache_read_input_tokens},completion_tokens_details:{reasoning_tokens:0}})}setTimeout((()=>{e.emit("end",c,t)}),100)})),e}catch(e){throw e}}formatToolsConfig({type:e="function",toolDefinitions:t,toolChoice:s="auto"}){let n=[];return"function"===e&&(n=t.map((e=>{const{name:t,description:s,properties:n,requiredFields:o}=e;return{name:t,description:s,input_schema:{type:"object",properties:n,required:o}}}))),n?.length>0?{tools:n}:{}}transformToolMessageBlocks({messageBlock:e,toolsData:t}){const s=[];if(e){const t=[];if(Array.isArray(e.content)?t.push(...e.content):t.push({type:"text",text:e.content}),e.tool_calls){const s=e.tool_calls.map((e=>({type:"tool_use",id:e.id,name:e?.function?.name,input:e?.function?.arguments})));t.push(...s)}s.push({role:e?.role,content:t})}const n=t.map((e=>({type:"tool_result",tool_use_id:e.id,content:e.result})));return n.length>0&&s.push({role:us.User,content:n}),s}getConsistentMessages(e){let t=JSON.parse(JSON.stringify(e)),s=null;return t[0]?.role===us.System&&(s=t.shift()),t=rr.removeDuplicateUserMessages(t),t=t.map((e=>{let t;return e?.parts?t=e.parts.map((e=>e?.text||"")).join(" "):Array.isArray(e?.content)?t=Array.isArray(e.content)?e.content.filter((e=>"object"==typeof e&&"type"in e&&("tool_use"===e.type||"tool_result"===e.type)))?.length>0?e.content.map((e=>"text"!==e.type||e.text&&""!==e.text.trim()?e:{...e,text:"..."})):e.content.map((e=>e?.text||"")).join(" ").trim():e.content:e?.content&&(t=e.content),e.content=t||"...",e})),t[0]?.role===us.User&&Array.isArray(t[0].content)&&t[0].content.find((e=>"type"in e&&"tool_result"===e.type))&&t.shift(),t[0]?.role!==us.User&&t.unshift({role:us.User,content:"continue"}),s&&t.unshift(s),t}getValidImageFileSources(e){const t=[];for(let s of e)this.validImageMimeTypes.includes(s?.mimetype)&&t.push(s);if(0===t?.length)throw new Error(`Unsupported file(s). Please make sure your file is one of the following types: ${this.validImageMimeTypes.join(", ")}`);return t}async getImageData(e,t){try{const s=[];for(let n of e){const e=(await n.readData(Ct.agent(t))).toString("base64");s.push({type:"image",source:{type:"base64",data:e,media_type:n.mimetype}})}return s}catch(e){throw e}}}var Ir=Object.defineProperty,Cr=(e,t,s)=>((e,t,s)=>t in e?Ir(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("GroqConnector");class Tr extends tr{constructor(){super(...arguments),Cr(this,"name","LLM:Groq")}async chatRequest(e,t){const s=JSON.parse(JSON.stringify(t));let n=s?.messages||[];"json"===(s?.responseFormat||"")&&("system"===n?.[0]?.role?n[0].content+=we:n.unshift({role:"system",content:we}));const o=s?.credentials?.apiKey;if(!o)throw new Error("Please provide an API key for Groq");const r=new q({apiKey:o}),a={model:s.model,messages:n};void 0!==s.maxTokens&&(a.max_tokens=s.maxTokens),void 0!==s.temperature&&(a.temperature=s.temperature),void 0!==s.topP&&(a.top_p=s.topP),s.stopSequences?.length&&(a.stop=s.stopSequences);try{const e=await r.chat.completions.create(a),t=e.choices[0]?.message?.content,s=e.choices[0]?.finish_reason;return{content:t,finishReason:s}}catch(e){throw e}}async visionRequest(e,t,s,n){throw new Error("Vision requests are not supported by Groq")}async multimodalRequest(e,t,s,n){throw new Error("Multimodal request is not supported for OpenAI.")}async toolRequest(e,t){const s=JSON.parse(JSON.stringify(t));try{const e=s?.credentials?.apiKey,t=new q({apiKey:e}),n=s?.messages||[];let o={model:s.model,messages:n};s.maxTokens&&(o.max_tokens=s.maxTokens),s?.toolsConfig?.tools&&(o.tools=s?.toolsConfig?.tools),s?.toolsConfig?.tool_choice&&(o.tool_choice=s?.toolsConfig?.tool_choice);const r=(await t.chat.completions.create(o))?.choices?.[0]?.message,a=r?.tool_calls;let i=[],c=!1;return a&&(i=a.map(((e,t)=>({index:t,id:e.id,type:e.type,name:e.function.name,arguments:e.function.arguments,role:us.Assistant}))),c=!0),{data:{useTool:c,message:r,content:r?.content??"",toolsData:i}}}catch(e){throw e}}async imageGenRequest(e,t,s,n){throw new Error("Image generation request is not supported for Groq.")}async streamToolRequest(e,{model:t=be,messages:s,toolsConfig:{tools:n,tool_choice:o},apiKey:r=""}){throw new Error("streamToolRequest() is Deprecated!")}async streamRequest(e,t){const s=JSON.parse(JSON.stringify(t)),n=new u,o=s?.credentials?.apiKey,r=new q({apiKey:o}),a=s?.messages||[];let i={model:s.model,messages:a,stream:!0};void 0!==s?.maxTokens&&(i.max_tokens=s.maxTokens),s.toolsConfig?.tools&&(i.tools=s.toolsConfig?.tools),s.toolsConfig?.tool_choice&&(i.tool_choice=s.toolsConfig?.tool_choice);try{const e=await r.chat.completions.create(i);let t=[];return(async()=>{for await(const s of e){const e=s.choices[0]?.delta;n.emit("data",e),e?.content&&n.emit("content",e.content),e?.tool_calls&&e.tool_calls.forEach(((e,s)=>{t[s]?t[s].arguments+=e.function?.arguments||"":t[s]={index:s,id:e.id,type:e.type,name:e.function?.name,arguments:e.function?.arguments,role:"assistant"}}))}t.length>0&&n.emit("toolsData",t),setTimeout((()=>{n.emit("end",t)}),100)})(),n}catch(e){throw e}}formatToolsConfig({type:e="function",toolDefinitions:t,toolChoice:s="auto"}){let n=[];return"function"===e&&(n=t.map((e=>{const{name:t,description:s,properties:n,requiredFields:o}=e;return{type:"function",function:{name:t,description:s,parameters:{type:"object",properties:n,required:o}}}}))),n?.length>0?{tools:n,tool_choice:s}:{}}getConsistentMessages(e){return rr.removeDuplicateUserMessages(e).map((e=>{const t={...e};let s="";return e?.parts?s=e.parts.map((e=>e?.text||"")).join(" "):Array.isArray(e?.content)?s=e.content.map((e=>e?.text||"")).join(" "):e?.content&&(s=e.content),t.content=s,t}))}}var Lr=Object.defineProperty,Pr=(e,t,s)=>((e,t,s)=>t in e?Lr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("BedrockConnector");class Rr extends tr{constructor(){super(...arguments),Pr(this,"name","LLM:Bedrock")}async chatRequest(e,t){const s=JSON.parse(JSON.stringify(t));let n,o=s?.messages||[];const{systemMessage:r,otherMessages:a}=rr.separateSystemMessages(o);"content"in r&&(n=r.content),o=a,"json"===(s?.responseFormat||"")&&(n=[{text:we}]);const i=s.modelInfo;ys[i?.settings?.foundationModel]?.supportsSystemPrompt||(o[0].content?.push(n[0]),n=void 0);const c=i.settings?.customModel||i.settings?.foundationModel,l={};void 0!==s?.maxTokens&&(l.maxTokens=s.maxTokens),void 0!==s?.temperature&&(l.temperature=s.temperature),void 0!==s?.topP&&(l.topP=s.topP),s?.stopSequences?.length&&(l.stopSequences=s.stopSequences);const u={modelId:c,messages:o};Object.keys(l).length>0&&(u.inferenceConfig=l),n&&(u.system=n);const p=new D(u);try{return{content:(await new E({region:i.settings.region,credentials:s?.credentials}).send(p)).output?.message?.content?.[0]?.text,finishReason:"stop"}}catch(e){throw e}}async streamToolRequest(e,{model:t,messages:s,toolsConfig:{tools:n,tool_choice:o},apiKey:r=""}){throw new Error("streamToolRequest() is Deprecated!")}async visionRequest(e,t,s,n){throw new Error("Vision requests are not supported by Bedrock")}async multimodalRequest(e,t,s,n){throw new Error("Multimodal request is not supported for Bedrock.")}async toolRequest(e,t){try{const e=JSON.parse(JSON.stringify(t)),s=e.modelInfo,n=new E({region:s.settings.region,credentials:e?.credentials});let o,r=e?.messages||[];const{systemMessage:a,otherMessages:i}=rr.separateSystemMessages(r);"content"in a&&(o=[{text:a?.content}]),r=i;const c={modelId:s.settings?.customModel||s.settings?.foundationModel,messages:r};o&&(c.system=o),e?.toolsConfig?.tools?.length>0&&(c.toolConfig={tools:e?.toolsConfig?.tools,...e?.toolsConfig?.tool_choice&&{toolChoice:e?.toolsConfig?.tool_choice}});const l=new D(c),u=await n.send(l),p=u.output?.message,m=u.stopReason;let d=[],h=!1;return"tool_use"===m&&(d=(p?.content?.filter((e=>e?.toolUse))||[]).map(((e,t)=>({index:t,id:e.toolUse?.toolUseId,type:"function",name:Mr(e.toolUse?.name),arguments:e.toolUse?.input,role:"tool"}))),h=!0),{data:{useTool:h,message:p,content:p?.content||"",toolsInfo:d}}}catch(e){throw e?.error||e}}async imageGenRequest(e,t,s,n){throw new Error("Image generation request is not supported for Bedrock.")}async streamRequest(e,t){const s=new u;try{const e=JSON.parse(JSON.stringify(t)),n=e.modelInfo,o=new E({region:n.settings.region,credentials:e?.credentials});let r,a=e?.messages||[];const{systemMessage:i,otherMessages:c}=rr.separateSystemMessages(a);"content"in i&&(r=[{text:i?.content}]),a=c;const l={modelId:n.settings?.customModel||n.settings?.foundationModel,messages:a};r&&(l.system=r),e?.toolsConfig?.tools?.length>0&&(l.toolConfig={tools:e?.toolsConfig?.tools,...e?.toolsConfig?.tool_choice&&{toolChoice:e?.toolsConfig?.tool_choice}});const u=new N(l),p=(await o.send(u)).stream;return p&&(async()=>{let e={role:"",content:"",toolCalls:[],currentToolCall:null,currentToolInput:""};for await(const t of p){if(t.messageStart&&(e.role=t.messageStart.role||"",s.emit("data",{role:e.role})),t.contentBlockDelta?.delta?.text&&(e.content+=t.contentBlockDelta.delta.text,s.emit("data",t.contentBlockDelta.delta.text),s.emit("content",t.contentBlockDelta.delta.text,e.role)),t.contentBlockStart?.start?.toolUse){const s=t.contentBlockStart.start.toolUse;s.toolUseId&&s.name&&(e.currentToolCall={index:e.toolCalls.length,id:s.toolUseId,type:"function",name:Mr(s.name),arguments:"",role:"tool"},e.currentToolInput="")}t.contentBlockDelta?.delta?.toolUse?.input&&e.currentToolCall&&(e.currentToolInput+=t.contentBlockDelta.delta.toolUse.input,e.currentToolCall.arguments=e.currentToolInput),t.contentBlockStop&&e.currentToolCall&&("string"==typeof e.currentToolCall.arguments&&re(e.currentToolCall.arguments)&&(e.currentToolCall.arguments=JSON.parse(e.currentToolCall.arguments)),e.toolCalls.push(e.currentToolCall),s.emit("toolsData",e.toolCalls),e.currentToolCall=null,e.currentToolInput=""),t.messageStop&&s.emit("end",e.toolCalls)}})(),s}catch(e){const t=e;return s.emit("error",t?.error||t),s}}formatToolsConfig({type:e="function",toolDefinitions:t,toolChoice:s="auto"}){let n=[];return"function"===e&&(n=t.map((e=>{const{name:t,description:s,properties:n,requiredFields:o}=e;return{toolSpec:{name:Or(t),description:s,inputSchema:{json:{type:"object",properties:n,required:o}}}}}))),n?.length>0?{tools:n,toolChoice:s||"auto"}:{}}transformToolMessageBlocks({messageBlock:e,toolsData:t}){const s=[];if(e){const t=[];"string"==typeof e.content?t.push({text:e.content}):Array.isArray(e.content)&&t.push(...e.content),e.tool_calls?.length&&e.tool_calls.forEach((e=>{t.push({toolUse:{toolUseId:e.id,name:Or(e?.function?.name),input:e?.function?.arguments||{}}})})),s.push({role:e?.role,content:t})}if(t?.length){const e=t.filter((e=>e.id&&(e.result||e.error))).map((e=>{let t;return"string"==typeof e?.result?t=[{text:e.result}]:"object"==typeof e?.result&&(t=[{json:e.result}]),{toolResult:{toolUseId:e.id,content:t,...e.error&&{status:"error"}}}}));e.length>0&&s.push({role:us.User,content:e})}return s}getConsistentMessages(e){return rr.removeDuplicateUserMessages(e).map((e=>{let t=[];return e?.parts?t=e.parts:e?.content&&(t=Array.isArray(e.content)?e.content:[{text:e.content}]),{role:e.role,content:t}}))}}function Or(e){return e?.replace(/-/g,"__")}function Mr(e){return e?.replace(/__/g,"-")}var qr=Object.defineProperty,Dr=(e,t,s)=>((e,t,s)=>t in e?qr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("VertexAIConnector");class Er extends tr{constructor(){super(...arguments),Dr(this,"name","LLM:VertexAI")}async chatRequest(e,t){const s=JSON.parse(JSON.stringify(t));let n,o=s?.messages||[];const{systemMessage:r,otherMessages:a}=rr.separateSystemMessages(o);"content"in r&&(n=r.content),o=a,"json"===(s?.responseFormat||"")&&(n=we);const i=s.modelInfo,c={};void 0!==s?.maxTokens&&(c.maxOutputTokens=s.maxTokens),void 0!==s?.temperature&&(c.temperature=s.temperature),void 0!==s?.topP&&(c.topP=s.topP),void 0!==s?.topK&&(c.topK=s.topK),s?.stopSequences?.length&&(c.stopSequences=s.stopSequences);const l={model:i?.settings?.customModel||i?.settings?.foundationModel};n&&(l.systemInstruction=n),Object.keys(c).length>0&&(l.generationConfig=c);try{return{content:(await new $({project:i.settings.projectId,location:i?.settings?.region,googleAuthOptions:{credentials:s.credentials},apiEndpoint:`${i?.settings?.region}-aiplatform.googleapis.com`}).getGenerativeModel(l).generateContent({contents:o}))?.response?.candidates?.[0]?.content?.parts?.[0]?.text,finishReason:"stop"}}catch(e){throw e}}async streamToolRequest(e,{model:t,messages:s,toolsConfig:{tools:n,tool_choice:o},apiKey:r=""}){throw new Error("streamToolRequest() is not supported by Vertex AI")}async visionRequest(e,t,s,n){throw new Error("Vision requests are not currently implemented for Vertex AI")}async multimodalRequest(e,t,s,n){throw new Error("Multimodal request is not currently implemented for Vertex AI")}async toolRequest(e,t){throw new Error("Tool requests are not currently implemented for Vertex AI")}async imageGenRequest(e,t,s,n){throw new Error("Image generation request is not currently implemented for Vertex AI")}async streamRequest(e,t){throw new Error("Streaming is not currently implemented for Vertex AI")}formatToolsConfig({type:e="function",toolDefinitions:t,toolChoice:s="auto"}){throw new Error("Tool configuration is not currently implemented for Vertex AI")}getConsistentMessages(e){return rr.removeDuplicateUserMessages(e).map((e=>{let t=[];return e?.parts?t=e.parts:e?.content&&(t=Array.isArray(e.content)?e.content:[{text:e.content}]),{role:e.role,parts:t}}))}}class Nr extends it{register(){at.register(se.LLM,"Echo",or),at.register(se.LLM,"OpenAI",pr),at.register(se.LLM,"DeepSeek",pr),at.register(se.LLM,"GoogleAI",wr),at.register(se.LLM,"AnthropicAI",Sr),at.register(se.LLM,"Groq",Tr),at.register(se.LLM,"TogetherAI",pr),at.register(se.LLM,"Bedrock",Rr),at.register(se.LLM,"VertexAI",Er)}init(){at.init(se.LLM,"Echo"),at.init(se.LLM,"OpenAI"),at.init(se.LLM,"DeepSeek"),at.init(se.LLM,"GoogleAI"),at.init(se.LLM,"AnthropicAI"),at.init(se.LLM,"Groq"),at.init(se.LLM,"TogetherAI"),at.init(se.LLM,"Bedrock"),at.init(se.LLM,"VertexAI")}}class $r extends sn{user(e){return{get:async t=>await this.get(e.readRequest,t),set:async(t,s,n,o,r)=>await this.set(e.writeRequest,t,s,n,o,r),delete:async t=>{await this.delete(e.writeRequest,t)},exists:async t=>await this.exists(e.readRequest,t),getMetadata:async t=>await this.getMetadata(e.readRequest,t),setMetadata:async(t,s)=>{await this.setMetadata(e.writeRequest,t,s)},updateTTL:async(t,s)=>{await this.updateTTL(e.writeRequest,t,s)},getTTL:async t=>await this.getTTL(e.readRequest,t),getACL:async t=>await this.getACL(e.readRequest,t),setACL:async(t,s)=>{await this.setACL(e.writeRequest,t,s)}}}}var jr=Object.defineProperty,Ur=Object.getOwnPropertyDescriptor,Br=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?Ur(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&jr(t,s,r),r},Gr=(e,t,s)=>((e,t,s)=>t in e?jr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const Vr=Je("RedisCache");class Jr extends $r{constructor(e){super(),Gr(this,"name","RedisCache"),Gr(this,"redis"),Gr(this,"_prefix","smyth:cache"),Gr(this,"_mdPrefix","smyth:metadata");const t=function(e){return"string"==typeof e?e.split(",").map((e=>{const[t,s]=e.split(":");return{host:t,port:Number(s)}})):Array.isArray(e)?e.map((e=>{if("string"==typeof e){const[t,s]=e.split(":");return{host:t,port:Number(s)}}return e})):[]}(e.hosts);this.redis=new j({sentinels:t,name:e.name,password:e.password}),this.redis.on("error",(e=>{Vr.error("Redis Error:",e)})),this.redis.on("connect",(()=>{Vr.log("Redis connected!")}))}get client(){return this.redis}get prefix(){return this._prefix}get mdPrefix(){return this._mdPrefix}async get(e,t){return await this.redis.get(`${this._prefix}:${t}`)}async set(e,t,s,n,o,r){const a=e.candidate,i=[];i.push(this.redis.set(`${this._prefix}:${t}`,s));const c=o||{};return c.acl=Rt.from(n).addAccess(a.role,a.id,ht.Owner).ACL,i.push(this.setMetadata(e,t,c)),r&&i.push(this.updateTTL(e,t,r)),await Promise.all(i),!0}async delete(e,t){await Promise.all([this.redis.del(`${this._prefix}:${t}`),this.redis.del(`${this._mdPrefix}:${t}`)])}async exists(e,t){return!!await this.redis.exists(`${this._prefix}:${t}`)}async getMetadata(e,t){if(this.exists(e,t))try{const e=await this.redis.get(`${this._mdPrefix}:${t}`);return e?this.deserializeRedisMetadata(e):{}}catch{return{}}}async setMetadata(e,t,s){await this.redis.set(`${this._mdPrefix}:${t}`,this.serializeRedisMetadata(s))}async updateTTL(e,t,s){s&&await Promise.all([this.redis.expire(`${this._prefix}:${t}`,s),this.redis.expire(`${this._mdPrefix}:${t}`,s)])}async getTTL(e,t){return this.redis.ttl(`${this._prefix}:${t}`)}async getResourceACL(e,t){const s=await this.redis.get(`${this._mdPrefix}:${e}`).catch((e=>{})),n=null!=s,o=n?this.deserializeRedisMetadata(s):{};return n?Rt.from(o?.acl):(new Rt).addAccess(t.role,t.id,ht.Owner)}async getACL(e,t){try{return(await this.getMetadata(e,t))?.acl||{}}catch(e){throw Vr.error("Error getting access rights in S3",e.name,e.message),e}}async setACL(e,t,s){try{let n=await this.getMetadata(e,t);n||(n={}),n.acl=Rt.from(s).addAccess(e.candidate.role,e.candidate.id,ht.Owner).ACL,await this.setMetadata(e,t,n)}catch(e){throw Vr.error("Error setting access rights in S3",e),e}}serializeRedisMetadata(e){if(!e)return"";if(e.acl){const t=e.acl;t&&(e.acl=Rt.from(t).serializedACL)}return JSON.stringify(e)}deserializeRedisMetadata(e){try{const t=JSON.parse(e);if(t.acl){const e=Rt.from(t.acl).ACL;t.acl=e}return t}catch{return Vr.warn("Error deserializing metadata",e),{}}}async stop(){super.stop(),await this.redis.quit()}}Br([sn.AccessControl],Jr.prototype,"get",1),Br([sn.AccessControl],Jr.prototype,"set",1),Br([sn.AccessControl],Jr.prototype,"delete",1),Br([sn.AccessControl],Jr.prototype,"exists",1),Br([sn.AccessControl],Jr.prototype,"getMetadata",1),Br([sn.AccessControl],Jr.prototype,"setMetadata",1),Br([sn.AccessControl],Jr.prototype,"updateTTL",1),Br([sn.AccessControl],Jr.prototype,"getTTL",1),Br([sn.AccessControl],Jr.prototype,"getACL",1),Br([sn.AccessControl],Jr.prototype,"setACL",1);class Fr extends it{register(){at.register(se.Cache,"Redis",Jr)}}class zr extends sn{user(e){return{get:async t=>this.get(e.readRequest,t),exists:async t=>this.exists(e.readRequest,t)}}}var Kr=Object.defineProperty,Hr=Object.getOwnPropertyDescriptor,Wr=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?Hr(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&Kr(t,s,r),r},Qr=(e,t,s)=>((e,t,s)=>t in e?Kr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("JSONFileVault");class Yr extends zr{constructor(e){if(super(),this.config=e,Qr(this,"name","JSONFileVault"),Qr(this,"vaultData"),Qr(this,"index"),!en.Instance)throw new Error("SRE not initialized");if(L.existsSync(e.file)){try{if(e.fileKey&&L.existsSync(e.fileKey))try{const t=L.readFileSync(e.fileKey,"utf8"),s=L.readFileSync(e.file,"utf8").toString(),n=c.privateDecrypt({key:t,padding:c.constants.RSA_PKCS1_OAEP_PADDING},Buffer.from(s,"base64"));this.vaultData=JSON.parse(n.toString("utf8"))}catch{throw new Error("Failed to decrypt vault")}else this.vaultData=JSON.parse(L.readFileSync(e.file).toString())}catch{this.vaultData={}}for(let e in this.vaultData)for(let t in this.vaultData[e]){this.index||(this.index={}),this.index[t]||(this.index[t]={});const s=this.vaultData[e][t];this.index[t][e]=s}}}async get(e,t){const s=await at.getAccountConnector().getCandidateTeam(e.candidate);return this.vaultData?.[s]?.[t]}async exists(e,t){const s=await at.getAccountConnector().getCandidateTeam(e.candidate);return!!this.vaultData?.[s]?.[t]}async getResourceACL(e,t){const s=await at.getAccountConnector().getCandidateTeam(t),n=new Rt;return"string"!=typeof this.vaultData?.[s]?.[e]||n.addAccess(gt.Team,s,ht.Owner).addAccess(gt.Team,s,ht.Read).addAccess(gt.Team,s,ht.Write),n}}async function Xr(e){return new Promise(((t,s)=>{const n=Buffer.from(`${e.oauthAppId}:${e.oauthAppSecret}`,"utf8").toString("base64"),o={grant_type:"client_credentials",resource:e.resource,scope:e.scope||""};r({method:"post",url:e.baseUrl,headers:{Authorization:"Basic "+n,"Content-Type":"application/x-www-form-urlencoded"},data:U.stringify(o)}).then((e=>{t(e.data.access_token)})).catch((e=>{s({error:e.response.data})}))}))}Wr([sn.AccessControl],Yr.prototype,"get",1),Wr([sn.AccessControl],Yr.prototype,"exists",1);var Zr=Object.defineProperty,ea=Object.getOwnPropertyDescriptor,ta=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?ea(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&Zr(t,s,r),r},sa=(e,t,s)=>((e,t,s)=>t in e?Zr(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("SmythVault");class na extends zr{constructor(e){if(super(),this.config=e,sa(this,"name","SmythVault"),sa(this,"oAuthAppId"),sa(this,"oAuthAppSecret"),sa(this,"oAuthBaseUrl"),sa(this,"oAuthResource"),sa(this,"oAuthScope"),sa(this,"vaultAPI"),!en.Instance)throw new Error("SRE not initialized");this.oAuthAppId=e.oAuthAppID,this.oAuthAppSecret=e.oAuthAppSecret,this.oAuthBaseUrl=e.oAuthBaseUrl,this.oAuthResource=e.oAuthResource||"",this.oAuthScope=e.oAuthScope||"",this.vaultAPI=r.create({baseURL:`${e.vaultAPIBaseUrl}/v1/api`})}async get(e,t){const s=await at.getAccountConnector().getCandidateTeam(e.candidate),n=await this.getVaultRequestHeaders();let o=(await this.vaultAPI.get(`/vault/${s}/secrets/${t}`,{headers:n}))?.data?.secret?.value||null;if(o||(o=(await this.vaultAPI.get(`/vault/${s}/secrets/name/${t}`,{headers:n}))?.data?.secret?.value||null),!o){const e=t.toLowerCase(),o="anthropicai"===e?"claude":e;return(await this.vaultAPI.get(`/vault/${s}/secrets/${o}`,{headers:n}))?.data?.secret?.value}return o||null}async exists(e,t){const s=await at.getAccountConnector().getCandidateTeam(e.candidate),n=await this.getVaultRequestHeaders();return!!(await this.vaultAPI.get(`/vault/${s}/secrets/${t}`,{headers:n}))?.data?.secret}async getResourceACL(e,t){const s=await at.getAccountConnector().getCandidateTeam(t),n=new Rt;return n.addAccess(gt.Team,s,ht.Owner).addAccess(gt.Team,s,ht.Read).addAccess(gt.Team,s,ht.Write),n}async getVaultRequestHeaders(){return{Authorization:`Bearer ${await Xr({baseUrl:this.oAuthBaseUrl,oauthAppId:this.oAuthAppId,oauthAppSecret:this.oAuthAppSecret,resource:this.oAuthResource,scope:this.oAuthScope})}`}}}ta([sn.AccessControl],na.prototype,"get",1),ta([sn.AccessControl],na.prototype,"exists",1);var oa=Object.defineProperty,ra=Object.getOwnPropertyDescriptor,aa=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?ra(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&oa(t,s,r),r},ia=(e,t,s)=>((e,t,s)=>t in e?oa(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const ca=Je("SecretsManager");class la extends zr{constructor(e){if(super(),this.config=e,ia(this,"name","SecretsManager"),ia(this,"secretsManager"),!en.Instance)throw new Error("SRE not initialized");this.secretsManager=new B({region:e.region,...e.awsAccessKeyId&&e.awsSecretAccessKey?{accessKeyId:e.awsAccessKeyId,secretAccessKey:e.awsSecretAccessKey}:{}})}async get(e,t){try{const s=await at.getAccountConnector().getCandidateTeam(e.candidate);return(await this.secretsManager.send(new G({SecretId:`${s}/${t}`}))).SecretString}catch(e){throw ca.error(e),e}}async exists(e,t){return!!await this.get(e,t)}async getResourceACL(e,t){const s=await at.getAccountConnector().getCandidateTeam(t),n=new Rt;return n.addAccess(gt.Team,s,ht.Owner).addAccess(gt.Team,s,ht.Read).addAccess(gt.Team,s,ht.Write),n}}aa([sn.AccessControl],la.prototype,"get",1),aa([sn.AccessControl],la.prototype,"exists",1);class ua extends it{register(){at.register(se.Vault,"JSONFileVault",Yr),at.register(se.Vault,"SmythVault",na),at.register(se.Vault,"SecretsManager",la)}}class pa extends Ze{user(e){return{getAllUserSettings:async()=>this.getAllUserSettings(e.readRequest,e.id),getUserSetting:async t=>this.getUserSetting(e.readRequest,e.id,t),getAllTeamSettings:async()=>this.getAllTeamSettings(e.readRequest,e.id),getTeamSetting:async t=>this.getTeamSetting(e.readRequest,e.id,t),isTeamMember:async t=>this.isTeamMember(t,e),getCandidateTeam:async()=>this.getCandidateTeam(e)}}}var ma=Object.defineProperty,da=(e,t,s)=>((e,t,s)=>t in e?ma(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("SmythAccount");class ha extends pa{constructor(e){if(super(),this.config=e,da(this,"name","SmythAccount"),da(this,"oAuthAppId"),da(this,"oAuthAppSecret"),da(this,"oAuthBaseUrl"),da(this,"oAuthResource"),da(this,"oAuthScope"),da(this,"smythAPI"),!en.Instance)throw new Error("SRE not initialized");this.oAuthAppId=e.oAuthAppID,this.oAuthAppSecret=e.oAuthAppSecret,this.oAuthBaseUrl=e.oAuthBaseUrl,this.oAuthResource=e.oAuthResource||"",this.oAuthScope=e.oAuthScope||"",this.smythAPI=r.create({baseURL:`${e.smythAPIBaseUrl}`})}async isTeamMember(e,t){try{return e===await this.getCandidateTeam(t)}catch{return!1}}async getCandidateTeam(e){return e.role===gt.Team?e.id:e.role===gt.User?(await this.smythAPI.get(`/v1/user/${e.id}`,{headers:await this.getSmythRequestHeaders()}))?.data?.user?.teamId:e.role===gt.Agent?(await this.smythAPI.get(`/v1/ai-agent/${e.id}`,{headers:await this.getSmythRequestHeaders()}))?.data?.agent?.teamId:null}async getAllTeamSettings(e,t){try{const e=await this.smythAPI.get(`/v1/teams/${t}/settings`,{headers:await this.getSmythRequestHeaders()});if(e?.data?.settings?.length>0){const t={};return e?.data?.settings?.forEach((e=>{t[e?.settingKey]=e?.settingValue})),t}return null}catch{return null}}async getAllUserSettings(e,t){try{const e=await this.smythAPI.get(`/v1/user/${t}/settings`,{headers:await this.getSmythRequestHeaders()});if(e?.data?.settings?.length>0){const t={};return e?.data?.settings?.forEach((e=>{t[e?.settingKey]=e?.settingValue})),t}return null}catch{return null}}async getTeamSetting(e,t,s){try{return(await this.smythAPI.get(`/v1/teams/${t}/settings/${s}`,{headers:await this.getSmythRequestHeaders()}))?.data?.setting?.settingValue||null}catch{return null}}async getUserSetting(e,t,s){try{return(await this.smythAPI.get(`/v1/user/${t}/settings/${s}`,{headers:await this.getSmythRequestHeaders()}))?.data?.setting?.settingValue||null}catch{return null}}async getResourceACL(e,t){const s=await at.getAccountConnector("SmythAccount").getCandidateTeam(t),n=new Rt;return n.addAccess(gt.Team,s,ht.Owner).addAccess(gt.Team,s,ht.Read).addAccess(gt.Team,s,ht.Write),n}async getSmythRequestHeaders(){return{Authorization:`Bearer ${await Xr({baseUrl:this.oAuthBaseUrl,oauthAppId:this.oAuthAppId,oauthAppSecret:this.oAuthAppSecret,resource:this.oAuthResource,scope:this.oAuthScope})}`}}}var ga=Object.defineProperty,ya=(e,t,s)=>((e,t,s)=>t in e?ga(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class fa extends pa{constructor(){super(...arguments),ya(this,"name","DummyAccount")}isTeamMember(e,t){return Promise.resolve(!0)}getCandidateTeam(e){return e.role===gt.Team?Promise.resolve(e.id):Promise.resolve("default")}getResourceACL(e,t){throw new Error("getResourceACL Method not implemented.")}getAllTeamSettings(e,t){throw new Error("getAllTeamSettings Method not implemented.")}getAllUserSettings(e,t){throw new Error("getAllUserSettings Method not implemented.")}getTeamSetting(e,t,s){throw new Error("getTeamSetting Method not implemented.")}getUserSetting(e,t,s){throw new Error("getUserSetting Method not implemented.")}}var ba=Object.defineProperty,wa=(e,t,s)=>((e,t,s)=>t in e?ba(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Aa extends pa{constructor(e){super(),this.config=e,wa(this,"name","AWSAccount"),wa(this,"pool"),this.pool=V.createPool({host:e.host,database:e.database||"app",user:e.user||"app",password:e.password,connectionLimit:10})}isTeamMember(e,t){return Promise.resolve(!0)}getCandidateTeam(e){return e.role===gt.Team?Promise.resolve(e.id):Promise.resolve("default")}async getAllTeamSettings(e,t){try{const[e]=await this.pool.execute("SELECT `key`, `value` FROM TeamSettings"),t=[];return Array.isArray(e)&&e.length>0&&t.push(...e.map((e=>({key:e.key,value:e.value})))),t}catch(e){return console.error("Error in getTeamSetting:",e),[]}}async getTeamSetting(e,t,s){try{const[e]=await this.pool.execute("SELECT `value` FROM TeamSettings WHERE settingKey = ? LIMIT 1",[s]);return Array.isArray(e)&&e.length>0&&"value"in e[0]?e[0].value:""}catch(e){return console.error("Error in getTeamSetting:",e),""}}getResourceACL(e,t){throw new Error("getResourceACL Method not implemented.")}getAllUserSettings(e,t){throw new Error("getAllUserSettings Method not implemented.")}getUserSetting(e,t,s){throw new Error("getUserSetting Method not implemented.")}}class ka extends it{register(){at.register(se.Account,"SmythAccount",ha),at.register(se.Account,"AWSAccount",Aa),at.register(se.Account,"DummyAccount",fa)}}var _a=Object.defineProperty,xa=(e,t,s)=>((e,t,s)=>t in e?_a(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const va=JSON.stringify({openapi:"3.0.1",info:{title:"{{model_name}}",description:"{{model_description}}",version:"{{version}}"},servers:[{url:"{{server_url}}"}],paths:{},components:{schemas:{}}}),Sa=JSON.stringify({summary:"{{summary}}",operationId:"{{operationId}}","x-openai-isConsequential":!1,requestBody:{required:!0,content:{}},responses:{200:{description:"response",content:{"text/plain":{schema:{type:"string"}}}}}});class Ia extends Ze{constructor(){super(...arguments),xa(this,"name","AgentDataConnector")}async getOpenAPIJSON(e,t,s,n=!1){if(!e)throw new Error("Agent not found");const o=s&&"latest"!=s?`/v${s}/api`:"/api",r="object"==typeof e?e:await this.getAgentData(e,s),a=r.name;let i=n?r.data.behavior:r.data.shortDescription;i||(i=r.data.description);const c=r.data.version||"1.0.0",l=ts(va).parse({model_name:es(a),model_description:es(i),server_url:t,version:c}).clean().result,u=JSON.parse(l),p=r.data.components.filter((e=>"APIEndpoint"===e.name));for(let e of p){const t=e.data.ai_exposed||typeof e.data.ai_exposed>"u";if(n&&!t)continue;let s=(e.data.method||"post").toLowerCase(),r=n?e.data.description||e.data.doc:e.data.doc||e.data.description;const a=JSON.parse(ts(Sa).parse({summary:r,operationId:e.data.endpoint}).clean().result);if(u.paths[o+"/"+e.data.endpoint]||(u.paths[o+"/"+e.data.endpoint]={}),u.paths[o+"/"+e.data.endpoint][s]=a,e.inputs.length>0)if("get"===s){delete a.requestBody,a.parameters=[];for(let t of e.inputs){const e={name:t.name,in:"query",description:t.description,required:!t.optional,schema:Ca(t.type)},{style:s,explode:n}=Ta(t.type);s&&(e.style=s,e.explode=n),a.parameters.push(e)}}else{const t=[],s=!n&&e.inputs.some((e=>"binary"===e.type.toLowerCase().trim()))?"multipart/form-data":"application/json";a.requestBody.content[s]={};for(let o of e.inputs){o.optional||t.push(o.name),a.requestBody.content[s].schema||(a.requestBody.content[s].schema={type:"object"});const e=a.requestBody.content[s].schema||{type:"object"};e.properties||(e.properties={}),e.properties[o.name]={...Ca(o.type),format:n||"binary"!==o.type.toLowerCase().trim()?void 0:"binary",description:o.description,default:o.defaultVal},e.required=t,a.requestBody.content[s].schema||(a.requestBody.content["application/json"].schema=e)}}else delete a.requestBody}return u}}function Ca(e){switch(e?.toLowerCase()){case"binary":case"string":case"any":default:return{type:"string"};case"number":case"float":return{type:"number"};case"integer":return{type:"integer"};case"boolean":return{type:"boolean"};case"array":return{type:"array",items:{}};case"object":return{type:"object",additionalProperties:{}}}}function Ta(e){switch(e.toLowerCase()){case"array":return{style:"form",explode:!1};case"object":return{style:"deepObject",explode:!0};default:return{style:"",explode:!1}}}var La=Object.defineProperty,Pa=(e,t,s)=>((e,t,s)=>t in e?La(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Ra extends Ia{constructor(e){super(),Pa(this,"name","CLIAgentDataConnector"),Pa(this,"argv"),this.argv=e.args||process.argv}async getAgentData(e,t){const s=at.getCLIConnector().get("agent"),n=L.realpathSync(process.cwd()),o=T.join(n,s.agent);if(L.existsSync(o)){const e=L.readFileSync(o,"utf8");return{data:JSON.parse(e),version:t||"1.0"}}}getAgentIdByDomain(e){return Promise.resolve("")}async getAgentSettings(e,t){const s=at.getCLIConnector().get("settings");let n;return"string"==typeof s.settings?L.existsSync(s.settings)&&(n=JSON.parse(L.readFileSync(s.settings,"utf8"))):n=s.settings,n}async isDeployed(e){return!0}}var Oa=Object.defineProperty,Ma=(e,t,s)=>((e,t,s)=>t in e?Oa(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class qa extends Ia{constructor(e){super(),Ma(this,"name","LocalAgentDataConnector"),Ma(this,"devDir"),Ma(this,"prodDir"),Ma(this,"agentsData",{dev:{},prod:{}}),Ma(this,"agentSettings",{dev:{},prod:{}}),this.devDir=e.devDir,this.prodDir=e.prodDir}indexDir(e){const t=L.readdirSync(e),s={},n={};for(const o of t){const t=L.readFileSync(T.join(e,o),"utf8");let r;try{r=JSON.parse(t),r.id||(console.warn(`Agent data for ${o} does not contain an id, generating one...`),r.id="tmp-"+ne())}catch(e){console.warn(`Error parsing agent data for ${o}: ${e.message}`)}r.components&&(s[r.id]=r),r.settings&&(n[r.id]=r.settings)}return{agentsData:s,agentSettings:n}}indexAgentsData(){const{agentsData:e,agentSettings:t}=this.indexDir(this.devDir),{agentsData:s,agentSettings:n}=this.indexDir(this.prodDir);this.agentsData={dev:e,prod:s},this.agentSettings={dev:t,prod:n}}async start(){super.start(),this.started=!1,this.indexAgentsData(),this.started=!0}async getAgentData(e,t){if(!await this.ready())throw new Error("Connector not ready");const s=t?this.agentsData.prod[e]:this.agentsData.dev[e];if(s)return{data:s,version:t||"1.0"};throw new Error(`Agent with id ${e} not found`)}getAgentIdByDomain(e){return Promise.resolve("")}async getAgentSettings(e,t){if(!await this.ready())throw new Error("Connector not ready");const s=t?this.agentSettings.prod[e]:this.agentSettings.dev[e];if(s)return s;throw new Error(`Settings for agent with id ${e} not found`)}async isDeployed(e){return!!this.agentsData.prod[e]}}var Da=Object.defineProperty,Ea=(e,t,s)=>((e,t,s)=>t in e?Da(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Na extends Ia{constructor(e){if(super(),this.config=e,Ea(this,"name","SmythAgentData"),Ea(this,"oAuthAppId"),Ea(this,"oAuthAppSecret"),Ea(this,"oAuthBaseUrl"),Ea(this,"oAuthResource"),Ea(this,"oAuthScope"),Ea(this,"smythAPI"),Ea(this,"agentStageDomain"),Ea(this,"agentProdDomain"),!en.Instance)throw new Error("SRE not initialized");this.oAuthAppId=e.oAuthAppID,this.oAuthAppSecret=e.oAuthAppSecret,this.oAuthBaseUrl=e.oAuthBaseUrl,this.oAuthResource=e.oAuthResource||"",this.oAuthScope=e.oAuthScope||"",this.smythAPI=r.create({baseURL:`${e.smythAPIBaseUrl}`}),this.agentStageDomain=e.agentStageDomain,this.agentProdDomain=e.agentProdDomain}async getAgentData(e,t){try{let s;s=(await this.smythAPI.get(`/v1/ai-agent/${e}?include=team.subscription`,{headers:await this.getSmythRequestHeaders()})).data.agent;const n=s.data.auth,o=await this.smythAPI.get(`/v1/quota/team/${s.teamId}/tasks/subscription`,{headers:await this.getSmythRequestHeaders()});if(s.taskData=o.data,s.data.debugSessionEnabled=s?.data?.debugSessionEnabled&&s?.isLocked,t){const n=await this.smythAPI.get(`/v1/ai-agent/${e}/deployments`,{headers:await this.getSmythRequestHeaders()}),o="latest"==t?n?.data?.deployments[0]:n?.data?.deployments?.find((e=>e.version===t));if(!o)throw new Error(`Requested Deploy Version not found: ${t}`);{const e=await this.smythAPI.get(`/v1/ai-agent/deployments/${o.id}`,{headers:await this.getSmythRequestHeaders()});s.data=e?.data?.deployment?.aiAgentData,s.data.debugSessionEnabled=!1,s.data.agentVersion=o.version,s.version=o.version}}return(!s?.data?.auth?.method||"none"==s?.data?.auth?.method)&&(s.data.auth=n),s.data=this.migrateAgentData(s.data),s}catch(t){throw console.error(t.response?.data,t.message),console.log(`Error getting agent data for agentId=${e}: ${t?.message}`),new Error(`Error getting agent data for agentId=${e}: ${t?.message}`)}}async getAgentIdByDomain(e){let t;const s=e.includes(this.agentStageDomain),n=e.includes(this.agentProdDomain);if(s||n){if(t=e.split(".")[0],`${t}.${this.agentStageDomain}`!==e&&`${t}.${this.agentProdDomain}`!==e)throw new Error(`Invalid agent domain: ${e}`);if(s)return t}const o=await this.smythAPI.get("/v1/domains?verified=true",{headers:await this.getSmythRequestHeaders()}).catch((e=>({error:e})));if(o.error)throw new Error("Error getting domain info");if(t){if(o.data.domains.find((e=>e?.aiAgent?.id===t)))throw new Error("Wrong domain")}else t=o.data.domains.find((t=>t.name===e))?.aiAgent?.id;return t}async getAgentSettings(e,t){try{return(await this.smythAPI.get(`/v1/ai-agent/${e}/settings`,{headers:await this.getSmythRequestHeaders()})).data.settings.reduce(((e,t)=>({...e,[t.key]:t.value})),{})}catch(t){throw console.error(`Error getting agent settings for agentId=${e}: ${t?.message}`),new Error(`Error getting agent settings for agentId=${e}: ${t?.message}`)}}async isDeployed(e){try{return(await this.smythAPI.get(`/v1/ai-agent/${e}/deployments`,{headers:await this.getSmythRequestHeaders()}))?.data?.deployments?.length>0}catch(e){return console.error(e),!1}}async getSmythRequestHeaders(){return{Authorization:`Bearer ${await Xr({baseUrl:this.oAuthBaseUrl,oauthAppId:this.oAuthAppId,oauthAppSecret:this.oAuthAppSecret,resource:this.oAuthResource,scope:this.oAuthScope})}`}}migrateAgentData(e){if(!e.version){console.log(`Agent [${e.name}] has an old schema. Migrating to latest version...`);const t=JSON.parse(JSON.stringify(e));for(let e of t.components)e.outputs=e.connectors,e.inputs=e.receptors,e.outputProps=e.connectorProps,e.inputProps=e.receptorProps,delete e.connectors,delete e.receptors,delete e.connectorProps,delete e.receptorProps;return t}return"1.0.0"===e.version&&e.description&&!e.behavior&&(e.behavior=e.description),e}}class $a extends it{register(){at.register(se.AgentData,"AgentData",Ia),at.register(se.AgentData,"CLI",Ra),at.register(se.AgentData,"Local",qa),at.register(se.AgentData,"Smyth",Na)}}var ja=Object.defineProperty,Ua=Object.getOwnPropertyDescriptor,Ba=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?Ua(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&ja(t,s,r),r},Ga=(e,t,s)=>((e,t,s)=>t in e?ja(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("Smyth Managed VectorDB");class Va extends nn{constructor(e){if(super(),this.config=e,Ga(this,"name","SmythManagedVectorDB"),Ga(this,"id","smyth-managed"),Ga(this,"oAuthAppId"),Ga(this,"oAuthAppSecret"),Ga(this,"oAuthBaseUrl"),Ga(this,"oAuthResource"),Ga(this,"oAuthScope"),Ga(this,"smythAPI"),Ga(this,"accountConnector"),Ga(this,"redisCache"),Ga(this,"openaiApiKey"),Ga(this,"isCustomStorageInstance"),!en.Instance)throw new Error("SRE not initialized");this.oAuthAppId=e.oAuthAppID,this.oAuthAppSecret=e.oAuthAppSecret,this.oAuthBaseUrl=e.oAuthBaseUrl,this.oAuthResource=e.oAuthResource||"",this.oAuthScope=e.oAuthScope||"",this.smythAPI=r.create({baseURL:`${e.smythAPIBaseUrl}`}),this.accountConnector=at.getAccountConnector(),this.redisCache=at.getCacheConnector("Redis"),this.openaiApiKey=e.openaiApiKey||process.env.OPENAI_API_KEY,this.isCustomStorageInstance=e.isCustomStorageInstance||!1}async createDatasource(e,t,s){try{const n=await this.accountConnector.getCandidateTeam(e.candidate),o=nn.constructNsName(n,t);return{id:(await this.smythAPI.post("/v1/vectors/datasources/text",{id:s.id||c.randomUUID(),name:s.label||"Indexer Datasource",text:s.text,namespaceId:o,metadata:s.metadata?JSON.stringify(s.metadata):null,teamId:n},{headers:await this.getSmythRequestHeaders()})).data.dataSourceId,vectorIds:[]}}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to create datasource with error: "+t)}}async deleteDatasource(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);nn.constructNsName(n,t);try{await this.smythAPI.delete(`/v1/vectors/datasources/${s}`,{headers:await this.getSmythRequestHeaders()})}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to delete datasource with error: "+t)}}async listDatasources(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate),n=nn.constructNsName(s,t);try{return(await this.smythAPI.get(`/v1/vectors/datasources?namespaceId=${n}`,{headers:await this.getSmythRequestHeaders()})).data.datasources.map((e=>({id:e.id,data:{name:e.name,namespaceId:e.namespaceId,teamId:s,embeddingIds:null,text:null,metadata:JSON.stringify({})}})))}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to list datasources with error: "+t)}}async getDatasource(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);nn.constructNsName(n,t);try{const e=(await this.smythAPI.get(`/v1/vectors/datasources/${s}`,{headers:await this.getSmythRequestHeaders()}).catch((e=>{if(404!==e.response?.status)throw e})))?.data?.dataSource;return e?{name:e.name,embeddingIds:null,metadata:JSON.stringify({}),namespaceId:e.namespaceId,teamId:n,text:null}:void 0}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to get datasource with error: "+t)}}async createNamespace(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);try{await this.smythAPI.post("/v1/vectors/namespaces",{name:t,teamId:n,useCustomVectorStorage:this.isCustomStorageInstance},{headers:await this.getSmythRequestHeaders()})}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to create namespace with error: "+t)}return new Promise((e=>e()))}async namespaceExists(e,t){return!!await this.getNamespace(e,t)}async getNamespace(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate),n=nn.constructNsName(s,t);try{const e=(await this.smythAPI.get(`/v1/vectors/namespaces/${n}`,{headers:await this.getSmythRequestHeaders()}).catch((e=>{if(404!==e.response.status)throw e})))?.data?.namespace;return e?{displayName:e.name,teamId:s,namespace:e.id,metadata:{indexName:e.indexName,isOnCustomStorage:e.isOnCustomStorage}}:void 0}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to get namespace with error: "+t)}}async listNamespaces(e){const t=await this.accountConnector.getCandidateTeam(e.candidate);try{return(await this.smythAPI.get(`/v1/vectors/namespaces?teamId=${t}`,{headers:await this.getSmythRequestHeaders()})).data.namespaces.map((e=>({displayName:e.name,namespace:e.id,metadata:{indexName:e.indexName,isOnCustomStorage:e.isOnCustomStorage},teamId:t})))}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to list namespaces with error: "+t)}}async deleteNamespace(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate),n=nn.constructNsName(s,t);try{await this.smythAPI.delete(`/v1/vectors/namespaces/${n}`,{headers:await this.getSmythRequestHeaders()})}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to delete namespace with error: "+t)}}async search(e,t,s,n={}){const o=await this.accountConnector.getCandidateTeam(e.candidate),r=nn.constructNsName(o,t);if("string"!=typeof s)throw new Error("Smyth Managed VectorDB only supports string queries");try{return(await this.smythAPI.get(`/v1/vectors/namespaces/search?query=${s}&topK=${n?.topK}&namespaceId=${r}&raw=true`,{headers:await this.getSmythRequestHeaders()})).data.results.map((e=>{let t={};try{t=JSON.parse(f(e.metadata?.metadata))}catch{t=e.metadata?.metadata}return{id:null,values:[],metadata:{text:e.pageContent,user:t}}}))}catch(e){const t=e.response?.data?.message||e.message||"Unknown error";throw new Error("Failed to search with error: "+t)}}async insert(e,t,s){throw new Error("Smyth Managed VectorDB does not support direct insertion by vector id(s)")}async delete(e,t,s){throw new Error("Smyth Managed VectorDB does not support direct deletion by vector id(s)")}async getResourceACL(e,t){const s=await this.accountConnector.getCandidateTeam(Ct.clone(t)),n=nn.constructNsName(s,e);return await this.smythAPI.get(`/v1/vectors/namespaces/${n}`,{headers:await this.getSmythRequestHeaders()}).catch((e=>{if(404===e.response?.status)return null;throw e})),(new Rt).addAccess(t.role,t.id,ht.Owner)}async getSmythRequestHeaders(){return{Authorization:`Bearer ${await Xr({baseUrl:this.oAuthBaseUrl,oauthAppId:this.oAuthAppId,oauthAppSecret:this.oAuthAppSecret,resource:this.oAuthResource,scope:this.oAuthScope})}`}}}Ba([sn.AccessControl],Va.prototype,"createDatasource",1),Ba([sn.AccessControl],Va.prototype,"deleteDatasource",1),Ba([sn.AccessControl],Va.prototype,"listDatasources",1),Ba([sn.AccessControl],Va.prototype,"getDatasource",1),Ba([sn.AccessControl],Va.prototype,"createNamespace",1),Ba([sn.AccessControl],Va.prototype,"namespaceExists",1),Ba([sn.AccessControl],Va.prototype,"getNamespace",1),Ba([sn.AccessControl],Va.prototype,"deleteNamespace",1),Ba([sn.AccessControl],Va.prototype,"search",1),Ba([sn.AccessControl],Va.prototype,"insert",1),Ba([sn.AccessControl],Va.prototype,"delete",1);class Ja extends it{register(){at.register(se.VectorDB,"Pinecone",un),at.register(se.VectorDB,"SmythManaged",Va)}}var Fa=Object.defineProperty,za=(e,t,s)=>((e,t,s)=>t in e?Fa(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class Ka extends Ze{constructor(){super(),za(this,"name","CLI"),za(this,"params"),this.params=this.parse(process.argv)}parse(e,t){let s=t;s&&!Array.isArray(s)&&(s=[s]);const n=s||function(e){e||(e=process.argv);const t=e,s=[];for(let e=2;e<t.length;e++)t[e].startsWith("--")&&s.push(t[e].replace(/^--/,""));return s}(e);return Ce(n,e)}get(e){let t=e;Array.isArray(t)||(t=[t]);const s={};return t.forEach((e=>{this.params[e]&&(s[e]=this.params[e])})),s}}class Ha extends it{register(){at.register(se.CLI,"CLI",Ka)}}class Wa extends sn{user(e){return{get:async(t,s)=>this.get(e.readRequest,t,s),set:async(t,s,n)=>this.set(e.writeRequest,t,s,n),delete:async(t,s)=>this.delete(e.writeRequest,t,s),exists:async(t,s)=>this.exists(e.readRequest,t,s),deleteAll:async t=>this.deleteAll(e.writeRequest,t),list:async t=>this.list(e.readRequest,t)}}}var Qa=Object.defineProperty,Ya=Object.getOwnPropertyDescriptor,Xa=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?Ya(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&Qa(t,s,r),r},Za=(e,t,s)=>((e,t,s)=>t in e?Qa(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);const ei=class extends Wa{constructor(){super(),Za(this,"name","Redis"),Za(this,"redisCacheConnector"),Za(this,"accountConnector"),this.redisCacheConnector=at.getCacheConnector("Redis"),this.accountConnector=at.getAccountConnector()}key(...e){return e.join(":")}mdKey(...e){return e.join(":")}async get(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);return await this.redisCacheConnector.user(Ct.team(n)).get(this.key(`team_${n}`,t,s))}async set(e,t,s,n){const o=await this.accountConnector.getCandidateTeam(e.candidate),r=this.key(`team_${o}`,t,s);await this.redisCacheConnector.user(Ct.team(o)).set(r,n),!await this.redisCacheConnector.user(Ct.team(o)).exists(t)&&await this.redisCacheConnector.user(Ct.team(o)).set(this.key(`team_${o}`,t),"",void 0,{ns:!0})}async delete(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);await this.redisCacheConnector.user(Ct.team(n)).delete(this.key(`team_${n}`,t,s))}async exists(e,t,s){const n=await this.accountConnector.getCandidateTeam(e.candidate);return await this.redisCacheConnector.user(Ct.team(n)).exists(this.key(`team_${n}`,t,s))}async list(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate);let n=await this.fetchKeysByPrefix(this.key(this.redisCacheConnector.prefix,`team_${s}`,t));if(n=n.filter((e=>e!==this.key(this.redisCacheConnector.prefix,`team_${s}`,t))),n.length<=0)return[];const o=this.redisCacheConnector.client.pipeline();n.forEach((e=>{o.get(e)}));const r=await o.exec();return n.map(((e,n)=>({key:e.replace(`${this.key(this.redisCacheConnector.prefix,`team_${s}`,t)}:`,""),data:r[n][1]})))}async deleteAll(e,t){const s=await this.accountConnector.getCandidateTeam(e.candidate);let n=await this.fetchKeysByPrefix(this.key(this.redisCacheConnector.prefix,`team_${s}`,t));n=n.filter((e=>![this.key(this.redisCacheConnector.prefix,`team_${s}`,t)].includes(e))),await this.redisCacheConnector.client.del(n)}async getResourceACL(e,t){return this.redisCacheConnector.getResourceACL(e,t)}async fetchKeysByPrefix(e){let t="0";const s=[];do{const n=await this.redisCacheConnector.client.scan(t,"MATCH",`${e}*`,"COUNT",1e4);t=n[0],s.push(...n[1])}while("0"!==t);return s}static NamespaceAccessControl(e,t,s){const n=s.value;return s.value=async function(...e){let[t,s,o]=e;const r=void 0===o,a=await this.accountConnector.getCandidateTeam(t.candidate),i=r?s:`${s}:${o}`,c=this.key(this.redisCacheConnector.prefix,`team_${a}`,i);if((await this.getAccessTicket(c,t)).access!==At.Granted)throw new kt("Access Denied");return n.apply(this,e)},s}static Validate(e,t,s){const n=s.value;return s.value=async function(...e){let[t,s,o]=e;const r=m.object().keys({namespace:m.string().min(1).required(),key:m.string().min(1).required()}).validate({namespace:s,key:o});if(r.error)throw new Error(`Validation Error: ${r.error.message}`);return n.apply(this,e)},s}};Xa([ei.Validate,ei.NamespaceAccessControl],ei.prototype,"get",1),Xa([ei.Validate,ei.NamespaceAccessControl],ei.prototype,"set",1),Xa([ei.Validate,ei.NamespaceAccessControl],ei.prototype,"delete",1),Xa([ei.Validate,ei.NamespaceAccessControl],ei.prototype,"exists",1),Xa([ei.NamespaceAccessControl],ei.prototype,"list",1),Xa([ei.NamespaceAccessControl],ei.prototype,"deleteAll",1);let ti=ei;class si extends it{register(){at.register(se.NKV,"Redis",ti)}}class ni extends Ze{}var oi=Object.defineProperty,ri=(e,t,s)=>((e,t,s)=>t in e?oi(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);class ai extends ni{constructor(e){super(e),ri(this,"router"),ri(this,"baseUrl"),this.name="ExpressRouter",this.router=e.router,this.baseUrl=e.baseUrl}get(e,...t){return this.router.get(e,...t),this}post(e,...t){return this.router.post(e,...t),this}put(e,...t){return this.router.put(e,...t),this}delete(e,...t){return this.router.delete(e,...t),this}useFn(...e){return this.router.use(...e),this}use(e,...t){return this.router.use(e,...t),this}getRouter(){return this.router}}class ii extends it{register(){at.register(se.Router,"ExpressRouter",ai)}}class ci extends sn{user(e){return{get:async t=>this.get(e.readRequest,t),set:async(t,s)=>this.set(e.writeRequest,t,s),delete:async t=>this.delete(e.writeRequest,t),exists:async t=>this.exists(e.readRequest,t)}}}var li=Object.defineProperty,ui=Object.getOwnPropertyDescriptor,pi=(e,t,s,n)=>{for(var o,r=n>1?void 0:n?ui(t,s):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(n?o(t,s,r):o(r))||r);return n&&r&&li(t,s,r),r},mi=(e,t,s)=>((e,t,s)=>t in e?li(e,t,{enumerable:!0,configurable:!0,writable:!0,value:s}):e[t]=s)(e,"symbol"!=typeof t?t+"":t,s);Je("SmythManagedVault");class di extends ci{constructor(e){if(super(),this.config=e,mi(this,"name","SmythManagedVault"),mi(this,"oAuthAppId"),mi(this,"oAuthAppSecret"),mi(this,"oAuthBaseUrl"),mi(this,"oAuthResource"),mi(this,"oAuthScope"),mi(this,"smythAPI"),mi(this,"vaultName"),!en.Instance)throw new Error("SRE not initialized");this.oAuthAppId=e.oAuthAppID,this.oAuthAppSecret=e.oAuthAppSecret,this.oAuthBaseUrl=e.oAuthBaseUrl,this.oAuthResource=e.oAuthResource||"",this.oAuthScope=e.oAuthScope||"",this.smythAPI=r.create({baseURL:`${e.smythAPIBaseUrl}`}),this.vaultName=e.vaultName||"vault"}async get(e,t){const s=at.getAccountConnector(),n=await s.getCandidateTeam(e.candidate),o=await s.getTeamSetting(e,n,this.vaultName);return JSON.parse(o||"{}")[t]}async set(e,t,s){const n=at.getAccountConnector(),o=await n.getCandidateTeam(e.candidate),r=await n.getTeamSetting(e,o,this.vaultName),a=JSON.parse(r||"{}");a[t]=s,await this.smythAPI.put(`/v1/teams/${o}/settings`,{settingKey:this.vaultName,settingValue:JSON.stringify(a)},{headers:await this.getSmythRequestHeaders()})}async delete(e,t){const s=at.getAccountConnector(),n=await s.getCandidateTeam(e.candidate),o=await s.getTeamSetting(e,n,this.vaultName),r=JSON.parse(o||"{}");delete r[t],await this.smythAPI.put(`/v1/teams/${n}/settings`,{settingKey:this.vaultName,settingValue:JSON.stringify(r)},{headers:await this.getSmythRequestHeaders()})}async exists(e,t){const s=at.getAccountConnector(),n=await s.getCandidateTeam(e.candidate),o=await s.getTeamSetting(e,n,this.vaultName);return t in JSON.parse(o||"{}")}async getResourceACL(e,t){const s=await at.getAccountConnector().getCandidateTeam(t),n=new Rt;return n.addAccess(gt.Team,s,ht.Owner).addAccess(gt.Team,s,ht.Read).addAccess(gt.Team,s,ht.Write),n}async getSmythRequestHeaders(){return{Authorization:`Bearer ${await Xr({baseUrl:this.oAuthBaseUrl,oauthAppId:this.oAuthAppId,oauthAppSecret:this.oAuthAppSecret,resource:this.oAuthResource,scope:this.oAuthScope})}`}}}pi([sn.AccessControl],di.prototype,"get",1),pi([sn.AccessControl],di.prototype,"set",1),pi([sn.AccessControl],di.prototype,"delete",1),pi([sn.AccessControl],di.prototype,"exists",1);class hi extends it{register(){at.register(se.ManagedVault,"SmythManagedVault",di)}}const gi=Je("Boot");!function(){gi.debug("SRE Boot sequence started");const e={};e.NKV=new si,e.Account=new ka,e.Vault=new ua,e.ManagedVault=new hi,e.Cache=new Fr,e.Storage=new er,e.LLM=new Nr,e.AgentData=new $a,e.CLI=new Ha,e.VectorDB=new Ja,e.Router=new ii,et.on("SRE:Initialized",(()=>{gi.debug("SRE Initialized");for(let t in e)e[t].init();et.emit("SRE:Booted",e),gi.debug("SRE Boot sequence completed")}))}();export{Ct as AccessCandidate,Fo as Agent,On as AgentProcess,ee as AgentRequest,dt as AgentSettings,Ra as CLIAgentDataConnector,at as ConnectorService,Bn as Conversation,en as SmythRuntime,Ko as StorageConnector,Oe as config};
//# sourceMappingURL=index.js.map
